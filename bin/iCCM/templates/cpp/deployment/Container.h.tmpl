// -*- C++ -*-

//=============================================================================
/**
 *  @file         ${arch_name}_Container.h
 *
 *  $Id$
 *
 *  Code generated by iCCM skeleton project generator that is include
 *  in the CUTS (http://cuts.cs.iupui.edu) and developed by:
 *
 *      Software Engineering & Distributed System (SEDS) Group
 *      Indiana Univesity-Purdue University Indianapolis
 *      Indianapolis, IN 46202
 */
//=============================================================================

#ifndef _ICCM_${arch_name.upper()}_CONTAINER_H_
#define _ICCM_${arch_name.upper()}_CONTAINER_H_

#include "cuts/iccm/deployment/Container_T.h"

#include "../servant/${arch_name}_Servant.h"
#include "${arch_name}_Container_Strategy.h"

namespace iCCM
{

// Forward decl.
class ${arch_name}_Component_Instance_Handler;

/**
 * @class ${arch_name}_Container
 *
 * iCCM container implementation for the ${arch_name} architecture.
 */
class ICCM_${arch_name.upper()}_DEPLOYMENT_HANDLERS_Export ${arch_name}_Container :
  public Container_T <${arch_name}_Container,
                      ${arch_name}_Component_Instance_Handler,
                      ${arch_name}_Container_Strategy,
                      ${arch_name}_Servant>
{
public:
  /// Type definition of the base type.
  typedef
    Container_T <${arch_name}_Container,
                 ${arch_name}_Component_Instance_Handler,
                 ${arch_name}_Container_Strategy,
                 ${arch_name}_Servant> base_type;

  /**
   * Initializing constructor.
   *
   * @param[in]           handler           Pointer to instance handler
   * @param[in]           poa               PortableServer for container
   */
  ${arch_name}_Container (
    ${arch_name}_Component_Instance_Handler * handler,
     ::PortableServer::POA_ptr the_POA);

  /// Destructor.
  virtual ~${arch_name}_Container (void);
};

}

#if defined (__CUTS_INLINE__)
#include "${arch_name}_Container.inl"
#endif

#endif  // !defined _ICCM_${arch_name}_CONTAINER_H_
