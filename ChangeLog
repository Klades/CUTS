Tue Sep  2 19:12:02 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/Command_Substitution.h:
        * cuts/utils/Command_Substitution.cpp:

          Fixed grammar to make things easier to work with.  Thank James!

Tue Sep  2 18:05:28 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/Command_Substitution.h:
        * cuts/utils/Command_Substitution.cpp:
        * tests/cuts/utils/text_processor:
        * tests/cuts/utils/text_processor/driver.cpp:
        * tests/cuts/utils/text_processor/driver.mpc:

          Fixed Command Substitution grammar to use Boost::Spirit::Qi.
          Added smoke test for grammar.

Fri Aug 22 15:57:47 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/Dataflow_Graph.h:
        * cuts/unite/Dataflow_Graph.inl:
        * cuts/unite/Dataflow_Graph_Analyzer.h:
        * cuts/unite/Dataflow_Graph_Analyzer.cpp:
        * cuts/unite/Dataset_Repo.h:
        * cuts/unite/Dataset_Repo.cpp:
        * cuts/unite/Graph_Worker.h:
        * cuts/unite/Graph_Worker.cpp:
        * cuts/unite/Unite_App.cpp:
        * cuts/utils/testing/svcs/validation/TE_Score_App.cpp:
        * cuts/utils/testing/svcs/validation/Testing_Validation_Service.cpp:

          Removed the copy constructor from CUTS_Dataflow_Graph. Now it is passed as a
          pointer.

Tue Aug 12 17:39:16 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Code_Generation_Impl.cpp:

          Fixed bug with saving project settings.  Re-enabled this feature.

Tue Aug 12 15:11:06 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_Env_Visitor_T.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_Execution_Visitor_T.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_IDL_Graph.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_Impl_Graph_T.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_Workspace_Generator_T.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/BE_algorithm.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/Context_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/IDL_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/Project_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/Servant_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/Servant_Header_Include_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/codegen.mpc.disable:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/cpp/Component_Impl_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/opensplice/Stub_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/rtidds/Stub_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/tcpip/Input_Stream_Source_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/tcpip/Output_Stream_Source_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/CHAOS/interpreters/codegen/tcpip/Stub_Source_Generator.cpp:

          Started fixing vc11 compilation errors.  Disabled project for now.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/CUTS_GME_PICML.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Code_Generation.idl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Code_Generation_Impl.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_CUTS_Project.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Env_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Execution_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_IDL_Graph_Builder.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_Builder_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_algorithm.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Servant_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Servant_Header_Include_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Servant_Header_Include_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Component_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/modelgen.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/modelgen.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/modelgen.cpp:
        * MDE/GME/paradigms/PICML/interpreter/dds2ccm/Event_Creator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/dds2ccm/dds2ccm_Component.idl:

Tue Dec 17 15:52:31 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/compiler/Provides_Svnt_Impl.cpp:

          Added support for inout parameters on interfaces

        * cuts/iccm/compiler/Servant_Impl.cpp:

          Fixed code generation for WString attributes

        * tests/iccm/compiler/tao/Smoke_Test.idl:

          Added inout parameters to interface

Thu Dec 12 05:29:09 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/compiler/Provides_Svnt_Impl.cpp:

          Added support for out variables

        * tests/iccm/compiler/tao/Smoke_Test.idl:

          Extended tests to include out variables on interfaces.

Thu Dec 12 04:35:16 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/compiler/Compiler.mpc:
        * cuts/iccm/compiler/Provides_Svnt_Impl.h:
        * cuts/iccm/compiler/Provides_Svnt_Impl.cpp:
        * cuts/iccm/compiler/Servant_Impl.cpp:

          Updated compiler to support more facet methods.  Currently all basic
          types, enums, and structs are supported as in variables.

        * tests/iccm/compiler/tao/Smoke_Test.idl:

          Expanded smoke test to include interface, uses, and provides.

Mon Aug 26 05:47:08 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * MDE/GME/paradigms/CHAOS/interpreters/codegen/codegen.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Code_Generation.idl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/dds2ccm/dds2ccm_Component.idl:
        * cuts/workers/CPU/Calibration_Details.cpp:

          Updated to latest version of GME.

Mon Jul 29 14:25:24 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/iccm/HelloWorld/models/HelloWorld.xme:
        * examples/iccm/HelloWorld/tao/HelloReceiverImpl.h:
        * examples/iccm/HelloWorld/tao/HelloReceiverImpl.mpc:
        * examples/iccm/HelloWorld/tao/HelloReceiverImpl.cpp:
        * examples/iccm/HelloWorld/tao/HelloSenderImpl.h:
        * examples/iccm/HelloWorld/tao/HelloSenderImpl.cpp:
        * examples/iccm/HelloWorld/tao/HelloSenderImpl.mpc:
        * examples/iccm/HelloWorld/tao/HelloWorld.idl:
        * examples/iccm/HelloWorld/tao/HelloWorld.mpc:
        * examples/iccm/HelloWorld/tao/HelloWorld_Components.idl:
        * examples/iccm/HelloWorld/tao/HelloWorld_Components.mpc:
        * examples/iccm/HelloWorld/tao/descriptors/HelloWorld.cdp:

          Updated HelloWorld example to use Multi-Input facets (echo) and objects (Messenger).

Mon Jul 29 13:40:32 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Object_Impl_Generator.cpp:

          Reverted previous change.  Objects now get their parent component via the constructor.

        * cuts/iccm/compiler/Servant_Impl.cpp:

          Fixed object servant class name to be capitalized.

Fri Jul 26 17:42:20 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/compiler/Servant_Impl.cpp:

          Implemented argument handling for object operations

Fri Jul 26 16:25:16 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Object_Impl_Generator.cpp:

          Changed Object implementations to not receive the parent component in the constructor

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.cpp:

          Added generation for CallAction behavior

        * cuts/iccm/compiler/Servant_Context.cpp:
        * cuts/iccm/compiler/Servant_File.cpp:
        * cuts/iccm/compiler/Servant_Impl.cpp:

          Added generation for facets (uses and provides IDL keywords).

        * cuts/iccm/servant/Receptacle.h:
        * cuts/iccm/servant/Receptacle.inl:
        * cuts/iccm/servant/Receptacle.cpp:
        * cuts/iccm/servant/Receptacle_T.h:
        * cuts/iccm/servant/Receptacle_T.inl:
        * cuts/iccm/servant/Receptacle_T.cpp:

          Created abstraction for RequiredRequestPorts.

        * cuts/iccm/servant/Servant.mpc:
        * cuts/iccm/servant/Servant_T.h:
        * cuts/iccm/servant/Servant_T.cpp:

          Servant_T's now aggregate a map of receptacles and implement the connect and disconnect
          methods

Wed Jul 24 16:26:31 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Execution_Visitor_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Execution_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.cpp:

          Added support for CallAction elements.

        * cuts/iccm/deployment/Component_Instance_Handler_T.cpp:

          Added support for Simplex Recepticals.

        * cuts/iccm/servant/Servant_T.h:
        * cuts/iccm/servant/Servant_T.inl:
        * cuts/iccm/servant/Servant_T.cpp:

          Added facet map and connect/disconnect methods.

Wed Jun 26 17:28:19 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/ciao/CIAO_Traits.cpp:

          Updated to generate executor and EIDL if the file contains an object with referenced
          operations.

Mon Jun 17 17:28:57 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/ciao/CIAO_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.cpp:

          Updated to generate getters and setters for component variables

Thu Jun 13 19:17:26 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Object_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Object_Impl_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Object_Impl_Generator.cpp:

          Started modifications for facet/MultiInput support.

Thu Jun 13 19:17:26 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

          Fixed compilation errors on vc11.

        * MDE/GME/paradigms/CHAOS/interpreters/codegen/codegen.mpc:

          Removed this file.

Tue Aug  5 19:36:29 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/iccm_coredx.mpb:
        * MPC/config/iccm_coredx_idl2ddl.mpb:

          Fixed errors with custom command on vc11.

Tue Aug  5 13:15:53 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/cutsexe.mpb:
        * cuts/iccm/arch/coredx/compiler/CoreDX_Compiler.mpc:
        * cuts/iccm/arch/opensplice/compiler/OpenSplice_Compiler.mpc:
        * cuts/iccm/arch/portico/compiler/Portico_Compiler.mpc:
        * cuts/iccm/arch/rtidds/compiler/RTIDDS_Compiler.mpc:
        * cuts/iccm/arch/tao/compiler/TAO_Compiler.mpc:
        * cuts/iccm/arch/tcpip/compiler/TCPIP_Compiler.mpc:
        * cuts/iccm/compiler/Compiler.mpc:
        * cuts/iccm/dds2ccm/dds2ccm.mpc:

          Fixed errors with Subsystem project setting on vc11.

        * MPC/config/iccm_compiler.mpb:
        * MPC/config/iccm_ospl.mpb:
        * MPC/config/iccm_portico.mpb:
        * MPC/config/iccm_rtidds.mpb:
        * MPC/config/iccm_tao.mpb:
        * MPC/config/iccm_tcpip.mpb:

          Fixed errors with custom command on vc11.

Tue Jul 29 23:47:12 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/dmac/dmac.mpc:

          Added the compilation order for Dmac_Common.

Tue Jul 29 14:31:04 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/dmac/Dmac_Candidate_Relation.cpp:

          Fixed the compilation issue due to the chnages to the DSF framework.

Tue Jul 29 14:21:02 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/setaf/Setaf_Integer_Constant.cpp:
        * cuts/unite/setaf/setaf.mpc:

          Fixed the compilation issues in SETAF.

Tue Jul 29 04:38:42 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/dmac/Dmac_Domain_Evidence.h:
        * cuts/unite/dmac/Dmac_Domain_Evidence.cpp:
        * cuts/unite/dmac/Dmac_Log_Format_File_Processor.h:
        * cuts/unite/dmac/Dmac_Log_Format_File_Processor.cpp:
        * cuts/unite/dmac/dmac.mpc:

          Fixes to the compilation issues in DMAC.

        * cuts/utils/evidence/DSF_Evidence.h:
        * cuts/utils/evidence/DSF_Evidence.cpp:
        * cuts/utils/evidence/DSF_Evidence_Combiner.h:
        * cuts/utils/evidence/DSF_Evidence_Combiner.cpp:

          Added the new files in DS theory evidence calculation.

        * cuts/utils/evidence/Dsf.h:
        * cuts/utils/evidence/Dsf.cpp:

          Removed these files.

Mon Jul 28 19:43:45 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/dmac/Dmac_Time_Evidence.h:
        * cuts/unite/dmac/Dmac_Time_Evidence.cpp:
        * cuts/unite/dmac/Dmac_Variable_Evidence.h:
        * cuts/unite/dmac/Dmac_Variable_Evidence.cpp:
        * cuts/unite/dmac/Dmac_export.h:

          Added the missing files to fix the compilation issues.

Wed Jul  9 14:14:02 UTC 2014  Manjula Peiris  <tmpeiris@cs.iupui.edu>

        * cuts/unite/Dataflow_Graph.h:
        * cuts/unite/Dataflow_Graph.inl:
        * cuts/unite/Dataflow_Graph.cpp:
        * cuts/unite/Dataflow_Graph_Analyzer.h:
        * cuts/unite/Dataflow_Graph_Analyzer.inl:
        * cuts/unite/Dataflow_Graph_Analyzer.cpp:
        * cuts/unite/Dataset_Repo.h:
        * cuts/unite/Dataset_Repo.cpp:
        * cuts/unite/Graph_Worker.h:
        * cuts/unite/Graph_Worker.cpp:
        * cuts/unite/Log_Format.h:
        * cuts/unite/Log_Format.cpp:
        * cuts/unite/Unite_App.h:
        * cuts/unite/Unite_App.cpp:
        * cuts/unite/Variable.h:
        * cuts/unite/cuts-unite.h:
        * cuts/unite/cuts-unite.inl:
        * cuts/unite/cuts-unite.cpp:

          Enable UNITE to support multi-sink dataflow models.

        * cuts/unite/dmac/Dmac_App.h:
        * cuts/unite/dmac/Dmac_App.cpp:
        * cuts/unite/dmac/Dmac_Candidate_Relation.h:
        * cuts/unite/dmac/Dmac_Candidate_Relation.cpp:
        * cuts/unite/dmac/Dmac_Execution.h:
        * cuts/unite/dmac/Dmac_Execution.cpp:
        * cuts/unite/dmac/Dmac_Log_Database_Miner.h:
        * cuts/unite/dmac/Dmac_Log_File_Miner.h:
        * cuts/unite/dmac/Dmac_Log_Format.h:
        * cuts/unite/dmac/Dmac_Log_Format.cpp:
        * cuts/unite/dmac/Dmac_Log_Format_Graph.h:
        * cuts/unite/dmac/Dmac_Log_Format_Graph.cpp:
        * cuts/unite/dmac/Dmac_Log_Format_Graph_Builder.h:
        * cuts/unite/dmac/Dmac_Log_Format_Graph_Builder.cpp:
        * cuts/unite/dmac/Dmac_Log_Miner.h:
        * cuts/unite/dmac/Dmac_Log_Msg_Details.h:
        * cuts/unite/dmac/Dmac_Log_Msg_Details.cpp:
        * cuts/unite/dmac/Dmac_Relation.h:
        * cuts/unite/dmac/Dmac_Relation_Miner.h:
        * cuts/unite/dmac/Dmac_Static_Part.h:
        * cuts/unite/dmac/Dmac_Utils.h:
        * cuts/unite/dmac/Dmac_Vertical_Format.h:
        * cuts/unite/dmac/Dmac_Vertical_Generator.h:
        * cuts/unite/dmac/dmac.mpc:

          Some Experimental implmentation work on DMAC.

        * cuts/unite/setaf/Setaf_Add_Command.cpp:
        * cuts/unite/setaf/Setaf_Command.h:
        * cuts/unite/setaf/Setaf_Interpreter.h:
        * cuts/unite/setaf/Setaf_Interpreter.cpp:
        * cuts/unite/setaf/Setaf_Parser.cpp:
        * cuts/unite/setaf/Setaf_Utils.h:
        * cuts/unite/setaf/Setaf_Variable.h:

        * cuts/unite/unite.mpc:

        * cuts/utils/evidence/Dsf.cpp:
        * cuts/utils/evidence/dsf.mpc:

        * cuts/utils/testing/svcs/validation/TE_Score_App.cpp:
        * cuts/utils/testing/svcs/validation/Testing_Validation_Service.cpp:

          Chnaged TE_Score work according to the latest chnages in UNITE.

        * examples/java/logging/client/log4j/cutsnode.config:
        * examples/java/logging/client/log4j/log4j.properties:

          Updated to the cuts namespace.

Mon Jul  7 14:07:35 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/iccm_coredx_svnt.mpb:
        * MPC/config/iccm_opensplice_svnt.mpb:
        * MPC/config/iccm_rtidds_svnt.mpb:

          Added iccm_ddsxml as base projects

        * MPC/config/iccm_rtidds.mpb:

          Added header_pre_filename to clean up stub file

        * cuts/iccm/arch/coredx/servant/CoreDX.h:
        * cuts/iccm/arch/coredx/servant/CoreDX.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.cpp:

          Added typedefs and changed qos handling to work with
          DDS integration layer refactoring.

        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.h:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.inl:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Event_Listener_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Publisher.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table.inl:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Servant.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Servant.mpc:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.cpp:

          Updated QoS handling to use typedefs defined in the concrete
          implementation traits file.  This reduces redundant code in the
          concerete servants to handle QoS.

          Also changed EventConsumer behavior to not create topics and
          datareaders when add_topic is called and the component has not
          been activated yet.  This was necessary because add_topic could
          be called before the EventConsumer received the QoS settings.
          Datareaders are now created when the activate method is called.

          Define guards are now used heavily to control non-standard QoS
          settings.

        * cuts/iccm/arch/opensplice/servant/OpenSplice.h:
        * cuts/iccm/arch/opensplice/servant/OpenSplice.inl:
        * cuts/iccm/arch/opensplice/servant/OpenSplice_Servant.h:
        * cuts/iccm/arch/opensplice/servant/OpenSplice_Servant.cpp:

          Added typedefs and changed qos handling to work with
          DDS integration layer refactoring.

        * cuts/iccm/arch/rtidds/servant/RTIDDS.h:
        * cuts/iccm/arch/rtidds/servant/RTIDDS.inl:
        * cuts/iccm/arch/rtidds/servant/RTIDDS_Servant.h:
        * cuts/iccm/arch/rtidds/servant/RTIDDS_Servant.cpp:

          Added typedefs and changed qos handling to work with
          DDS integration layer refactoring.

        * etc/schemas/iccm/dds.xsd:

          Added non-standard QoS settings to get the HelloWorld example
          working for RTIDDS.

        * tests/iccm/opensplice/ParticipantQoS/descriptors/SenderQoS.dpd
        * tests/iccm/opensplice/ParticipantQoS/descriptors/ReceiverQoS.dpd

          Updated QoS files to work with OpenSplice, RTIDDS, and CoreDX.

Wed Jun 11 19:38:34 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/coredx/servant/CoreDX.h:
        * cuts/iccm/arch/coredx/servant/CoreDX.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.mpc:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.cpp:

          Added preliminary QoS handling.

Thu Jun  5 18:59:15 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/Application_Task.h:
        * cuts/Application_Task.inl:
        * cuts/Application_Task.cpp:
        * cuts/Application_Task_T.h:
        * cuts/Application_Task_T.inl:
        * cuts/Application_Task_T.cpp:
        * cuts/CUTS.mpc:

          Added application tasks to support running threaded workloads
          as part of a component.

        * cuts/iccm/arch/coredx/servant/CoreDX.h:
        * cuts/iccm/arch/coredx/servant/CoreDX.inl:

          Updated default topic and datareader qos getters to return
          pointers.

        * cuts/iccm/arch/dds/servant/DDS_EventConsumer.h:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer.inl:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.h:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Servant.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.cpp:

          Updated event consumers to store topic and datareader qos entities
          as pointers instead of by value.

        * cuts/iccm/arch/opensplice/servant/OpenSplice.h:
        * cuts/iccm/arch/opensplice/servant/OpenSplice.inl:
        * cuts/iccm/arch/opensplice/servant/OpenSplice.cpp:
        * cuts/iccm/arch/opensplice/servant/OpenSplice_Servant.cpp:

          Updated default topic and datareader qos getters to return
          pointers.  Also updated servant logic to put the datareader
          qos entities into a hash map.

        * cuts/iccm/arch/rtidds/servant/RTIDDS.h:
        * cuts/iccm/arch/rtidds/servant/RTIDDS.inl:
        * cuts/iccm/arch/rtidds/servant/RTIDDS.cpp:
        * cuts/iccm/arch/rtidds/servant/RTIDDS_Servant.cpp:

          Updated default topic and datareader qos getters to return
          pointers.  Also updated servant logic to put the datareader
          qos entities into a hash map.

Wed Apr  9 18:42:56 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.cpp:

          Fixed workspace generation for CoreDX stubs.

        * examples/iccm/HelloWorld/coredx/HelloWorld.mpc:
        * examples/iccm/HelloWorld/coredx/HelloWorld_Components.mpc:

          Regenerated workspace.

Wed Apr  9 18:14:51 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.cpp:
        * MPC/config/requires_coredx.mpb:
        * examples/iccm/HelloWorld/coredx/HelloWorld.mpc:
        * examples/iccm/HelloWorld/coredx/HelloWorld_Components.mpc:

          Working on code generation.

Wed Apr  9 16:03:07 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/coredx/compiler/Stub_File.cpp:

          Added macro definition to bypass copying TopicQoS on windows

        * cuts/iccm/arch/coredx/deployment/CoreDX_Component_Instance_Handler.h:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Component_Instance_Handler.cpp:

          Fixed exports for factory method

        * cuts/iccm/arch/coredx/servant/CoreDX.h:
        * cuts/iccm/arch/coredx/servant/CoreDX.cpp:

          Fixed QoS realated compilation errors on Windows.  For windows,
          defined macro to bypass Topic QoS copies.  Only the default
          topic qos is supported.

        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.cpp:

          Similar to the data reader qos, added guards when working with
          topic qos.

        * examples/iccm/HelloWorld/coredx/HelloWorld.mpc:

          Manually fixed linker errors with windows.  Need to modify
          generation with GME.

Wed Apr  9 14:59:33 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/iccm/HelloWorld/coredx/HelloReceiverImpl.h:
        * examples/iccm/HelloWorld/coredx/HelloReceiverImpl.cpp:
        * examples/iccm/HelloWorld/coredx/HelloSenderImpl.h:
        * examples/iccm/HelloWorld/coredx/HelloSenderImpl.mpc:
        * examples/iccm/HelloWorld/coredx/HelloWorld.idl:
        * examples/iccm/HelloWorld/coredx/HelloWorld.mpc:
        * examples/iccm/HelloWorld/coredx/HelloWorld.mwc:
        * examples/iccm/HelloWorld/coredx/HelloWorld_Components.mpc:

          Missed adding some files for the CoreDX HelloWorld example.

Tue Apr  8 15:43:55 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/CUTS_GME_PICML.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Code_Generation_Impl.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/BE_CoreDX.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/BE_CoreDX_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Context.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Manager.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Manager_Factory.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Preprocessor_Handlers.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/coredx/Traits.cpp:

          Implemented CoreDX generator for GME.

Tue Apr  8 15:11:07 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/cuts_coredx.mpb:
        * MPC/config/iccm_coredx.mpb:
        * MPC/config/iccm_coredx_idl2ddl.mpb:
        * MPC/config/iccm_coredx_skel.mpb:
        * MPC/config/iccm_coredx_stub.mpb:
        * MPC/config/iccm_coredx_svnt.mpb:
        * MPC/config/requires_coredx.mpb:
        * bin/handlers/coredx.locality.config:
        * cuts/iccm/arch/coredx:
        * cuts/iccm/arch/coredx/CoreDX_iCCM.mwc:
        * cuts/iccm/arch/coredx/compiler:
        * cuts/iccm/arch/coredx/compiler/Compiler.cpp:
        * cuts/iccm/arch/coredx/compiler/Context.h:
        * cuts/iccm/arch/coredx/compiler/Context.cpp:
        * cuts/iccm/arch/coredx/compiler/CoreDX_Compiler.mpc:
        * cuts/iccm/arch/coredx/compiler/DDL_File.h:
        * cuts/iccm/arch/coredx/compiler/DDL_File.cpp:
        * cuts/iccm/arch/coredx/compiler/Downcall_Event.h:
        * cuts/iccm/arch/coredx/compiler/Downcall_Event.cpp:
        * cuts/iccm/arch/coredx/compiler/Event_Traits.h:
        * cuts/iccm/arch/coredx/compiler/Event_Traits.cpp:
        * cuts/iccm/arch/coredx/compiler/Stub_File.h:
        * cuts/iccm/arch/coredx/compiler/Stub_File.cpp:
        * cuts/iccm/arch/coredx/compiler/Upcall_Event.h:
        * cuts/iccm/arch/coredx/compiler/Upcall_Event.cpp:
        * cuts/iccm/arch/coredx/deployment:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Component_Instance_Handler.h:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Component_Instance_Handler.inl:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Component_Instance_Handler.cpp:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container.h:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container.inl:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container.cpp:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container_Strategy.h:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container_Strategy.inl:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Container_Strategy.cpp:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Deployment.h:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Deployment_Handlers.mpc:
        * cuts/iccm/arch/coredx/deployment/CoreDX_Deployment_Handlers_export.h:
        * cuts/iccm/arch/coredx/servant:
        * cuts/iccm/arch/coredx/servant/CoreDX.h:
        * cuts/iccm/arch/coredx/servant/CoreDX.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_EventConsumer.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_EventConsumer_T.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_EventConsumer_T.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_EventConsumer_T.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Events.idl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_T.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_T.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_T.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table_T.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table_T.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Publisher_Table_T.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant.mpc:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant_T.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant_T.inl:
        * cuts/iccm/arch/coredx/servant/CoreDX_Servant_T.cpp:
        * cuts/iccm/arch/coredx/servant/CoreDX_skel_export.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_stub_export.h:
        * cuts/iccm/arch/coredx/servant/CoreDX_svnt_export.h:

          First implementation of CoreDX integration with iCCM.
          Currently, the basic HelloWorld example is supported,
          but only the default DataReaderQos is supported.
          Dynamic QoS handling via XML is not currently supported.

        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Event_Listener_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.inl:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.cpp:

          Updated architecture to allow definitions for pointer
          vs reference parameters to various DDS methods.  Also
          Added define guard for supporting sequence size getter
          compared to length.  Lastly, the <<= operator must now
          be defined for Topic QoS and DataReader QoS by all
          concrete DDS implementations.

        * cuts/iccm/arch/opensplice/servant/OpenSplice.h:
        * cuts/iccm/arch/opensplice/servant/OpenSplice.cpp:

          Wrapped the assignment operator in the <<= operators
          for Topic and DataReader QoS.

        * cuts/iccm/arch/rtidds/servant/RTIDDS.h:
        * cuts/iccm/arch/rtidds/servant/RTIDDS.cpp:

          Wrapped the assignment operator in the <<= operators
          for Topic and DataReader QoS.

        * examples/iccm/HelloWorld/coredx:
        * examples/iccm/HelloWorld/coredx/HelloReceiverImpl.mpc:
        * examples/iccm/HelloWorld/coredx/HelloSenderImpl.cpp:
        * examples/iccm/HelloWorld/coredx/HelloWorld_Components.idl:
        * examples/iccm/HelloWorld/coredx/descriptors:
        * examples/iccm/HelloWorld/coredx/descriptors/.dance_artifacts:
        * examples/iccm/HelloWorld/coredx/descriptors/HelloWorld.cdd:
        * examples/iccm/HelloWorld/coredx/descriptors/HelloWorld.cdp:
        * examples/iccm/HelloWorld/coredx/descriptors/run_test.pl:

          Implemented and verified HelloWorld example to use CoreDX.

Tue Jan 21 14:30:04 UTC 2014  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/deployment/DDS_Container_Strategy.cpp:

          If the ParticipantQoS file is not found, use the default
          configuration.  Thanks Marianne!

Thu Oct 10 15:46:06 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/testing/svcs/logging/Testing_Log_Message_Listener.cpp:

          Fixed compilation error on Windows.

Fri Oct  4 20:07:05 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/logging/server/LoggingServer.idl:
        * cuts/utils/logging/server/LoggingServer_i.h:
        * cuts/utils/logging/server/LoggingServer_i.cpp:

          Changed unregister_listener to return the number of logging
          messages sent to the listener.

        * cuts/utils/testing/svcs/logging/Testing_Log_Message_Listener.cpp:
        * cuts/utils/testing/svcs/logging/Testing_LoggingServerListener_i.h:
        * cuts/utils/testing/svcs/logging/Testing_LoggingServerListener_i.cpp:

          Logging service now tracks the number of logging messages received
          and will wait to process the number sent from the LoggingServer
          when shutting down.

Fri Oct  4 15:08:25 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/servant/DDS_EventConsumer.h:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer.cpp:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.h:
        * cuts/iccm/arch/dds/servant/DDS_EventConsumer_T.cpp:

          Implemented activate/passivate to create/delete the
          datareaders used by the EventConsumer.

        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.cpp:

          Implemented activate/passivate to pass control through
          to the Stateful_Writers used by the Publisher/Publisher_Table.

        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.inl:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.cpp:

          Implemented activate/passivate to register/unregister the
          datawriter instance.  The datawriter is now disposed upon
          destruction.

        * cuts/iccm/arch/tao/servant/TAO_Publisher_T.cpp:
        * cuts/iccm/arch/tao/servant/TAO_Publisher_Table_T.cpp:

          Added error message when sending an event fails

        * cuts/iccm/servant/EventConsumer.h:
        * cuts/iccm/servant/EventConsumer.inl:
        * cuts/iccm/servant/Publisher.h:
        * cuts/iccm/servant/Publisher.inl:

          Added activate and passivate hooks with no implementation

        * cuts/iccm/servant/Publisher_Table.h:
        * cuts/iccm/servant/Publisher_Table.inl:
        * cuts/iccm/servant/Publisher_Table_T.h:
        * cuts/iccm/servant/Publisher_Table_T.cpp:

          Added activate and passivate hooks which call activate/passivate
          on the Publishers stored in the table.

        * cuts/iccm/servant/Servant_T.h:
        * cuts/iccm/servant/Servant_T.cpp:

          Update ccm_activate and ccm_passivate to call activate/passivate
          on all EventConumers, Publishers, and Publisher_Tables used by
          the servant.

Mon Sep 30 14:53:01 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/testing/TAO_Testing_Service.h:
        * cuts/utils/testing/TAO_Testing_Service.cpp:

          Added method to block until the orb does not have any more work to do

        * cuts/utils/testing/svcs/logging/Testing_Log_Message_Listener.cpp:

          Fixed bug where the Listener was destroyed while log messages were
          still being processed.

Fri Sep 20 16:19:03 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/opensplice/servant/OpenSplice.inl:

          Updated default DataWriter and DataReader QoS to replicate
          the topic QoS.  This occurs prior to setting the QoS from the
          dpd files.

        * tests/iccm/opensplice/ParticipantQoS/descriptors/ReceiverQoS.dpd:
        * tests/iccm/opensplice/ParticipantQoS/descriptors/SenderQoS.dpd:

          Found the presentation properties set on the publisher and subscriber
          was causing problems with the partition functionality.

Mon Sep 16 16:54:06 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/servant/DDS_Servant.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.cpp:

          Modified hooks to require the topic name to be specified when
          configuring datawriters.

        * cuts/iccm/arch/opensplice/servant/OpenSplice_Servant.cpp:
        * cuts/iccm/arch/rtidds/servant/RTIDDS_Servant.cpp:

          Modified to get the topic name from the QoS settings.  If none
          is provided, the port name is used.

        * etc/schemas/iccm/dds.xsd:

          Added topic_name attribute to the DataWriter object.

        * tests/iccm/opensplice/ParticipantQoS/descriptors/SenderQoS.dpd:

          Updated to show an example of overriding the topic name.

Thu Sep  5 12:32:42 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/Command_Substitution.h:

          Added include due to compilation errors with ACE trunk

Mon Aug 12 14:06:54 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/utils/node/Node_Daemon.h:

          Fixed define guard with ACE trunk

Tue Jul 30 16:45:45 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/deployment/Container_T.h:
        * cuts/iccm/deployment/Container_T.cpp:

          Fixed compilation errors with TAO trunk

Wed Jul  3 12:21:02 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/portico/servant/Portico_Servant.mpc:

          Fixed compilation error when portico=0.  Thanks Marianne!

Mon Jul  1 17:15:06 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/deployment/DDS_Component_Instance_Handler.cpp:
        * cuts/iccm/arch/rtidds/deployment/RTIDDS_Component_Instance_Handler.cpp:

          Fixed implementation of Domain QoS handling

        * etc/schemas/iccm/dds.xsd:

          Added SystemResourceLimitsQosPolicy to the domain element to address
          Bug 317 (RTIDDS with 6+ participants)

Mon Jun  3 15:55:22 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/servant/DDS_Publisher.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.inl:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Publisher_Table_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Servant.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Servant_T.cpp:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.cpp:

          Added boolean to control what kind of Stateful_Writer to create
          based on the QoS XML isinstance property.  DDS_Publisher_T now uses
          the Stateful_Writer abstraction rather than duplicating the logic.

        * cuts/iccm/arch/opensplice/servant/OpenSplice_Servant.cpp:
        * cuts/iccm/arch/rtidds/servant/RTIDDS_Servant.cpp:

          Modified to pass the isinstance property through.

Mon Jun  3 13:40:04 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.h:
        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.cpp:

          Added helper method for registering the event instance.  If the
          event fails to send, it is re-registered and sent again.

Thu May 30 15:14:43 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/dds/servant/DDS_Stateful_Writer_T.cpp:

          Implemented quick hack to fix sending events with Boolean attributes
          per issue 316.

Mon May 13 15:40:45 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/portico/deployment/Portico_Deployment_Handlers.mpc:

          Fixed base project

Wed May  1 18:21:55 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/iccm_portico.mpb:
        * MPC/config/iccm_portico_skel.mpb:
        * MPC/config/iccm_portico_stub.mpb:
        * MPC/config/iccm_portico_svnt.mpb:

          Forgot to add base projects.

        * examples/iccm/HelloWorld/portico:
        * examples/iccm/HelloWorld/portico/HelloReceiverImpl.h:
        * examples/iccm/HelloWorld/portico/HelloReceiverImpl.cpp:
        * examples/iccm/HelloWorld/portico/HelloReceiverImpl.mpc:
        * examples/iccm/HelloWorld/portico/HelloSenderImpl.h:
        * examples/iccm/HelloWorld/portico/HelloSenderImpl.cpp:
        * examples/iccm/HelloWorld/portico/HelloSenderImpl.mpc:
        * examples/iccm/HelloWorld/portico/HelloWorld.idl:
        * examples/iccm/HelloWorld/portico/HelloWorld.mpc:
        * examples/iccm/HelloWorld/portico/HelloWorld.mwc:
        * examples/iccm/HelloWorld/portico/HelloWorld_Components.idl:
        * examples/iccm/HelloWorld/portico/HelloWorld_Components.mpc:
        * examples/iccm/HelloWorld/portico/HelloWorld_iCCM.idl:
        * examples/iccm/HelloWorld/portico/descriptors:
        * examples/iccm/HelloWorld/portico/descriptors/.dance_artifacts:
        * examples/iccm/HelloWorld/portico/descriptors/HelloWorld.cdd:
        * examples/iccm/HelloWorld/portico/descriptors/HelloWorld.cdp:
        * examples/iccm/HelloWorld/portico/descriptors/HelloWorld.fed:
        * examples/iccm/HelloWorld/portico/descriptors/run_test.pl:
        * examples/iccm/HelloWorld/portico/lib:

          Forgot to add HelloWorld example

Wed May  1 18:08:56 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/portico/servant/Portico_Servant.h:
        * cuts/iccm/arch/portico/servant/Portico_Servant.inl:
        * cuts/iccm/arch/portico/servant/Portico_Servant.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Servant_T.h:
        * cuts/iccm/arch/portico/servant/Portico_Servant_T.inl:

          Made the servant a delegate of the NullFederateAmbassador.
          Compilation errors are now fixed.

Wed May  1 17:51:34 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * cuts/iccm/arch/portico:
        * cuts/iccm/arch/portico/Portico_iCCM.mwc:
        * cuts/iccm/arch/portico/Portico_locality.config:
        * cuts/iccm/arch/portico/compiler:
        * cuts/iccm/arch/portico/compiler/Compiler.cpp:
        * cuts/iccm/arch/portico/compiler/Context.h:
        * cuts/iccm/arch/portico/compiler/Context.cpp:
        * cuts/iccm/arch/portico/compiler/Event_ObjectClass.h:
        * cuts/iccm/arch/portico/compiler/Event_ObjectClass.cpp:
        * cuts/iccm/arch/portico/compiler/Event_ObjectClass_Factory.h:
        * cuts/iccm/arch/portico/compiler/Event_ObjectClass_Factory.cpp:
        * cuts/iccm/arch/portico/compiler/Event_Traits.h:
        * cuts/iccm/arch/portico/compiler/Event_Traits.cpp:
        * cuts/iccm/arch/portico/compiler/Portico_Compiler.mpc:
        * cuts/iccm/arch/portico/compiler/Stub_File.h:
        * cuts/iccm/arch/portico/compiler/Stub_File.cpp:
        * cuts/iccm/arch/portico/deployment:
        * cuts/iccm/arch/portico/deployment/Portico_Component_Instance_Handler.h:
        * cuts/iccm/arch/portico/deployment/Portico_Component_Instance_Handler.inl:
        * cuts/iccm/arch/portico/deployment/Portico_Component_Instance_Handler.cpp:
        * cuts/iccm/arch/portico/deployment/Portico_Container.h:
        * cuts/iccm/arch/portico/deployment/Portico_Container.inl:
        * cuts/iccm/arch/portico/deployment/Portico_Container.cpp:
        * cuts/iccm/arch/portico/deployment/Portico_Container_Strategy.h:
        * cuts/iccm/arch/portico/deployment/Portico_Container_Strategy.inl:
        * cuts/iccm/arch/portico/deployment/Portico_Container_Strategy.cpp:
        * cuts/iccm/arch/portico/deployment/Portico_Deployment_Handlers.mpc:
        * cuts/iccm/arch/portico/deployment/Portico_Deployment_Handlers_export.h:
        * cuts/iccm/arch/portico/servant:
        * cuts/iccm/arch/portico/servant/Portico_AttributeHandle.h:
        * cuts/iccm/arch/portico/servant/Portico_AttributeHandle.cpp:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer.h:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer.inl:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer.cpp:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer_T.h:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer_T.inl:
        * cuts/iccm/arch/portico/servant/Portico_EventConsumer_T.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Events.idl:
        * cuts/iccm/arch/portico/servant/Portico_ObjectClass.h:
        * cuts/iccm/arch/portico/servant/Portico_ObjectClass.cpp:
        * cuts/iccm/arch/portico/servant/Portico_ObjectClass_Factory.h:
        * cuts/iccm/arch/portico/servant/Portico_ObjectClass_Factory.cpp:
        * cuts/iccm/arch/portico/servant/Portico_ObjectClass_Trait_T.h:
        * cuts/iccm/arch/portico/servant/Portico_Publisher.h:
        * cuts/iccm/arch/portico/servant/Portico_Publisher.inl:
        * cuts/iccm/arch/portico/servant/Portico_Publisher.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_T.h:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_T.inl:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_T.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table.h:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table.inl:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table_T.h:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table_T.inl:
        * cuts/iccm/arch/portico/servant/Portico_Publisher_Table_T.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Servant.h:
        * cuts/iccm/arch/portico/servant/Portico_Servant.inl:
        * cuts/iccm/arch/portico/servant/Portico_Servant.cpp:
        * cuts/iccm/arch/portico/servant/Portico_Servant.mpc:
        * cuts/iccm/arch/portico/servant/Portico_Servant_T.h:
        * cuts/iccm/arch/portico/servant/Portico_Servant_T.inl:
        * cuts/iccm/arch/portico/servant/Portico_Servant_T.cpp:

          First pass at the Portico iCCM architecture.  There are currently
          compilation errors related to destructor exception signatures.

Fri Apr 19 15:22:43 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * ChangeLogs/ChangeLog-1_0_6:

          Tagging Changelog from previous version.
