// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_IDL_HELLOWORLD_COMPONENTSEC_YQ1MBS_H_
#define _TAO_IDL_HELLOWORLD_COMPONENTSEC_YQ1MBS_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "HelloWorld_Components_exec_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "ccm/CCM_EventsC.h"
#include "ccm/CCM_HomeC.h"
#include "ccm/CCM_ObjectC.h"
#include "ccm/CCM_CCMExceptionC.h"
#include "ccm/CCM_HomeExecutorBaseC.h"
#include "ccm/Session/CCM_SessionComponentC.h"
#include "HelloWorld_ComponentsC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 8
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO HELLOWORLD_COMPONENTS_EXEC_Export

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_root\root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CCM_HELLORECEIVER__VAR_OUT_CH_)
#define _CCM_HELLORECEIVER__VAR_OUT_CH_

class CCM_HelloReceiver;
typedef CCM_HelloReceiver *CCM_HelloReceiver_ptr;

typedef
  TAO_Objref_Var_T<
      CCM_HelloReceiver
    >
  CCM_HelloReceiver_var;

typedef
  TAO_Objref_Out_T<
      CCM_HelloReceiver
    >
  CCM_HelloReceiver_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_EXEC_Export CCM_HelloReceiver
  : public virtual ::Components::EnterpriseComponent

{
public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef CCM_HelloReceiver_ptr _ptr_type;
  typedef CCM_HelloReceiver_var _var_type;
  typedef CCM_HelloReceiver_out _out_type;

  // The static operations.
  static CCM_HelloReceiver_ptr _duplicate (CCM_HelloReceiver_ptr obj);

  static void _tao_release (CCM_HelloReceiver_ptr obj);

  static CCM_HelloReceiver_ptr _narrow (::CORBA::Object_ptr obj);
  static CCM_HelloReceiver_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CCM_HelloReceiver_ptr _nil (void);

  virtual void push_greeting_ospl (
    ::MessageEvent * e) = 0;

  virtual void push_greeting_ndds (
    ::MessageEvent * e) = 0;

  virtual void push_greeting_tcpip (
    ::MessageEvent * e) = 0;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CCM_HelloReceiver (void);

  

  virtual ~CCM_HelloReceiver (void);

private:
  // Private and unimplemented for concrete interfaces.
  CCM_HelloReceiver (const CCM_HelloReceiver &);

  void operator= (const CCM_HelloReceiver &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CCM_HELLORECEIVER_CONTEXT__VAR_OUT_CH_)
#define _CCM_HELLORECEIVER_CONTEXT__VAR_OUT_CH_

class CCM_HelloReceiver_Context;
typedef CCM_HelloReceiver_Context *CCM_HelloReceiver_Context_ptr;

typedef
  TAO_Objref_Var_T<
      CCM_HelloReceiver_Context
    >
  CCM_HelloReceiver_Context_var;

typedef
  TAO_Objref_Out_T<
      CCM_HelloReceiver_Context
    >
  CCM_HelloReceiver_Context_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_EXEC_Export CCM_HelloReceiver_Context
  : public virtual ::Components::SessionContext

{
public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef CCM_HelloReceiver_Context_ptr _ptr_type;
  typedef CCM_HelloReceiver_Context_var _var_type;
  typedef CCM_HelloReceiver_Context_out _out_type;

  // The static operations.
  static CCM_HelloReceiver_Context_ptr _duplicate (CCM_HelloReceiver_Context_ptr obj);

  static void _tao_release (CCM_HelloReceiver_Context_ptr obj);

  static CCM_HelloReceiver_Context_ptr _narrow (::CORBA::Object_ptr obj);
  static CCM_HelloReceiver_Context_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CCM_HelloReceiver_Context_ptr _nil (void);

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CCM_HelloReceiver_Context (void);

  

  virtual ~CCM_HelloReceiver_Context (void);

private:
  // Private and unimplemented for concrete interfaces.
  CCM_HelloReceiver_Context (const CCM_HelloReceiver_Context &);

  void operator= (const CCM_HelloReceiver_Context &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace CIAO_HelloReceiver_Impl
{

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CIAO_HELLORECEIVER_IMPL_HELLORECEIVER_EXEC__VAR_OUT_CH_)
#define _CIAO_HELLORECEIVER_IMPL_HELLORECEIVER_EXEC__VAR_OUT_CH_

  class HelloReceiver_Exec;
  typedef HelloReceiver_Exec *HelloReceiver_Exec_ptr;

  typedef
    TAO_Objref_Var_T<
        HelloReceiver_Exec
      >
    HelloReceiver_Exec_var;
  
  typedef
    TAO_Objref_Out_T<
        HelloReceiver_Exec
      >
    HelloReceiver_Exec_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

  class HELLOWORLD_COMPONENTS_EXEC_Export HelloReceiver_Exec
    : public virtual ::CCM_HelloReceiver,
      public virtual ::Components::SessionComponent
  
  {
  public:

    // TAO_IDL - Generated from
    // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

    typedef HelloReceiver_Exec_ptr _ptr_type;
    typedef HelloReceiver_Exec_var _var_type;
    typedef HelloReceiver_Exec_out _out_type;

    // The static operations.
    static HelloReceiver_Exec_ptr _duplicate (HelloReceiver_Exec_ptr obj);

    static void _tao_release (HelloReceiver_Exec_ptr obj);

    static HelloReceiver_Exec_ptr _narrow (::CORBA::Object_ptr obj);
    static HelloReceiver_Exec_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static HelloReceiver_Exec_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    HelloReceiver_Exec (void);

    

    virtual ~HelloReceiver_Exec (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    HelloReceiver_Exec (const HelloReceiver_Exec &);

    void operator= (const HelloReceiver_Exec &);
  };

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module CIAO_HelloReceiver_Impl

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CCM_HELLOSENDER__VAR_OUT_CH_)
#define _CCM_HELLOSENDER__VAR_OUT_CH_

class CCM_HelloSender;
typedef CCM_HelloSender *CCM_HelloSender_ptr;

typedef
  TAO_Objref_Var_T<
      CCM_HelloSender
    >
  CCM_HelloSender_var;

typedef
  TAO_Objref_Out_T<
      CCM_HelloSender
    >
  CCM_HelloSender_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_EXEC_Export CCM_HelloSender
  : public virtual ::Components::EnterpriseComponent

{
public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef CCM_HelloSender_ptr _ptr_type;
  typedef CCM_HelloSender_var _var_type;
  typedef CCM_HelloSender_out _out_type;

  // The static operations.
  static CCM_HelloSender_ptr _duplicate (CCM_HelloSender_ptr obj);

  static void _tao_release (CCM_HelloSender_ptr obj);

  static CCM_HelloSender_ptr _narrow (::CORBA::Object_ptr obj);
  static CCM_HelloSender_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CCM_HelloSender_ptr _nil (void);

  virtual char * message (
    void) = 0;

  virtual void message (
    const char * message) = 0;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CCM_HelloSender (void);

  

  virtual ~CCM_HelloSender (void);

private:
  // Private and unimplemented for concrete interfaces.
  CCM_HelloSender (const CCM_HelloSender &);

  void operator= (const CCM_HelloSender &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CCM_HELLOSENDER_CONTEXT__VAR_OUT_CH_)
#define _CCM_HELLOSENDER_CONTEXT__VAR_OUT_CH_

class CCM_HelloSender_Context;
typedef CCM_HelloSender_Context *CCM_HelloSender_Context_ptr;

typedef
  TAO_Objref_Var_T<
      CCM_HelloSender_Context
    >
  CCM_HelloSender_Context_var;

typedef
  TAO_Objref_Out_T<
      CCM_HelloSender_Context
    >
  CCM_HelloSender_Context_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_EXEC_Export CCM_HelloSender_Context
  : public virtual ::Components::SessionContext

{
public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef CCM_HelloSender_Context_ptr _ptr_type;
  typedef CCM_HelloSender_Context_var _var_type;
  typedef CCM_HelloSender_Context_out _out_type;

  // The static operations.
  static CCM_HelloSender_Context_ptr _duplicate (CCM_HelloSender_Context_ptr obj);

  static void _tao_release (CCM_HelloSender_Context_ptr obj);

  static CCM_HelloSender_Context_ptr _narrow (::CORBA::Object_ptr obj);
  static CCM_HelloSender_Context_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CCM_HelloSender_Context_ptr _nil (void);

  virtual void push_greeting_ospl (
    ::MessageEvent * e) = 0;

  virtual void push_greeting_ndds (
    ::MessageEvent * e) = 0;

  virtual void push_greeting_tcpip (
    ::MessageEvent * e) = 0;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  CCM_HelloSender_Context (void);

  

  virtual ~CCM_HelloSender_Context (void);

private:
  // Private and unimplemented for concrete interfaces.
  CCM_HelloSender_Context (const CCM_HelloSender_Context &);

  void operator= (const CCM_HelloSender_Context &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_module\module_ch.cpp:38

namespace CIAO_HelloSender_Impl
{

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_CIAO_HELLOSENDER_IMPL_HELLOSENDER_EXEC__VAR_OUT_CH_)
#define _CIAO_HELLOSENDER_IMPL_HELLOSENDER_EXEC__VAR_OUT_CH_

  class HelloSender_Exec;
  typedef HelloSender_Exec *HelloSender_Exec_ptr;

  typedef
    TAO_Objref_Var_T<
        HelloSender_Exec
      >
    HelloSender_Exec_var;
  
  typedef
    TAO_Objref_Out_T<
        HelloSender_Exec
      >
    HelloSender_Exec_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

  class HELLOWORLD_COMPONENTS_EXEC_Export HelloSender_Exec
    : public virtual ::CCM_HelloSender,
      public virtual ::Components::SessionComponent
  
  {
  public:

    // TAO_IDL - Generated from
    // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

    typedef HelloSender_Exec_ptr _ptr_type;
    typedef HelloSender_Exec_var _var_type;
    typedef HelloSender_Exec_out _out_type;

    // The static operations.
    static HelloSender_Exec_ptr _duplicate (HelloSender_Exec_ptr obj);

    static void _tao_release (HelloSender_Exec_ptr obj);

    static HelloSender_Exec_ptr _narrow (::CORBA::Object_ptr obj);
    static HelloSender_Exec_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static HelloSender_Exec_ptr _nil (void);

    // TAO_IDL - Generated from
    // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    HelloSender_Exec (void);

    

    virtual ~HelloSender_Exec (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    HelloSender_Exec (const HelloSender_Exec &);

    void operator= (const HelloSender_Exec &);
  };

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_module\module_ch.cpp:67

} // module CIAO_HelloSender_Impl

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CCM_HELLORECEIVER__TRAITS_)
#define _CCM_HELLORECEIVER__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CCM_HelloReceiver>
  {
    static ::CCM_HelloReceiver_ptr duplicate (
        ::CCM_HelloReceiver_ptr p);
    static void release (
        ::CCM_HelloReceiver_ptr p);
    static ::CCM_HelloReceiver_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_HelloReceiver_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_HELLORECEIVER_CONTEXT__TRAITS_)
#define _CCM_HELLORECEIVER_CONTEXT__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CCM_HelloReceiver_Context>
  {
    static ::CCM_HelloReceiver_Context_ptr duplicate (
        ::CCM_HelloReceiver_Context_ptr p);
    static void release (
        ::CCM_HelloReceiver_Context_ptr p);
    static ::CCM_HelloReceiver_Context_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_HelloReceiver_Context_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CIAO_HELLORECEIVER_IMPL_HELLORECEIVER_EXEC__TRAITS_)
#define _CIAO_HELLORECEIVER_IMPL_HELLORECEIVER_EXEC__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec>
  {
    static ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec_ptr duplicate (
        ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec_ptr p);
    static void release (
        ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec_ptr p);
    static ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CIAO_HelloReceiver_Impl::HelloReceiver_Exec_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_HELLOSENDER__TRAITS_)
#define _CCM_HELLOSENDER__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CCM_HelloSender>
  {
    static ::CCM_HelloSender_ptr duplicate (
        ::CCM_HelloSender_ptr p);
    static void release (
        ::CCM_HelloSender_ptr p);
    static ::CCM_HelloSender_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_HelloSender_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CCM_HELLOSENDER_CONTEXT__TRAITS_)
#define _CCM_HELLOSENDER_CONTEXT__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CCM_HelloSender_Context>
  {
    static ::CCM_HelloSender_Context_ptr duplicate (
        ::CCM_HelloSender_Context_ptr p);
    static void release (
        ::CCM_HelloSender_Context_ptr p);
    static ::CCM_HelloSender_Context_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CCM_HelloSender_Context_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CIAO_HELLOSENDER_IMPL_HELLOSENDER_EXEC__TRAITS_)
#define _CIAO_HELLOSENDER_IMPL_HELLOSENDER_EXEC__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_EXEC_Export Objref_Traits< ::CIAO_HelloSender_Impl::HelloSender_Exec>
  {
    static ::CIAO_HelloSender_Impl::HelloSender_Exec_ptr duplicate (
        ::CIAO_HelloSender_Impl::HelloSender_Exec_ptr p);
    static void release (
        ::CIAO_HelloSender_Impl::HelloSender_Exec_ptr p);
    static ::CIAO_HelloSender_Impl::HelloSender_Exec_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CIAO_HelloSender_Impl::HelloSender_Exec_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "HelloWorld_ComponentsEC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

