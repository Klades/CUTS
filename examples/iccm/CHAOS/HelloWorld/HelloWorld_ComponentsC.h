// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:152

#ifndef _TAO_IDL_HELLOWORLD_COMPONENTSC_4R3AJQ_H_
#define _TAO_IDL_HELLOWORLD_COMPONENTSC_4R3AJQ_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "HelloWorld_Components_stub_export.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "HelloWorldC.h"
#include "ComponentsC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 8
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO HELLOWORLD_COMPONENTS_STUB_Export

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_root\root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_valuetype.cpp:567



#if !defined (_MESSAGEEVENT__VAR_OUT_CH_)
#define _MESSAGEEVENT__VAR_OUT_CH_

class MessageEvent;
typedef
  TAO_Value_Var_T<
      MessageEvent
    >
  MessageEvent_var;

typedef
  TAO_Value_Out_T<
      MessageEvent
    >
  MessageEvent_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:53

class MessageEventConsumer;
typedef MessageEventConsumer *MessageEventConsumer_ptr;

class HELLOWORLD_COMPONENTS_STUB_Export MessageEvent
  : public virtual ::Components::EventBase
{
public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef MessageEvent * _ptr_type;
  typedef MessageEvent_var _var_type;
  typedef MessageEvent_out _out_type;

  static MessageEvent* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      MessageEvent *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_ch.cpp:611

  virtual void content (char *val) = 0;
  virtual void content (const char *val) = 0;
  virtual void content (const ::CORBA::String_var &val) = 0;
  virtual const char *content (void) const = 0;

public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_ch.cpp:462

  virtual void time (const ::CORBA::Long) = 0;
  virtual ::CORBA::Long time (void) const = 0;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_ch.cpp:240

protected:
  MessageEvent (void);
  virtual ~MessageEvent (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  MessageEvent (const MessageEvent &);
  void operator= (const MessageEvent &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__MessageEvent (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__MessageEvent (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_init_ch.cpp:60

class HELLOWORLD_COMPONENTS_STUB_Export MessageEvent_init
  : public virtual ::CORBA::ValueFactoryBase
{
public:
  MessageEvent_init (void);

  static MessageEvent_init* _downcast ( ::CORBA::ValueFactoryBase *);

  virtual ::CORBA::ValueBase *
  create_for_unmarshal (void);

  // TAO-specific extensions
public:
  virtual const char* tao_repository_id (void);

protected:
  virtual ~MessageEvent_init (void);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_HELLORECEIVER__VAR_OUT_CH_)
#define _HELLORECEIVER__VAR_OUT_CH_

class HelloReceiver;
typedef HelloReceiver *HelloReceiver_ptr;

typedef
  TAO_Objref_Var_T<
      HelloReceiver
    >
  HelloReceiver_var;

typedef
  TAO_Objref_Out_T<
      HelloReceiver
    >
  HelloReceiver_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_STUB_Export HelloReceiver
  : public virtual ::Components::CCMObject
{
public:
  friend class TAO::Narrow_Utils<HelloReceiver>;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef HelloReceiver_ptr _ptr_type;
  typedef HelloReceiver_var _var_type;
  typedef HelloReceiver_out _out_type;

  // The static operations.
  static HelloReceiver_ptr _duplicate (HelloReceiver_ptr obj);

  static HelloReceiver_ptr _narrow (::CORBA::Object_ptr obj);
  static HelloReceiver_ptr _nil (void);

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  HelloReceiver (void);

  // Concrete non-local interface only.
  HelloReceiver (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  HelloReceiver (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  friend class _TAO_HelloReceiver_Direct_Proxy_Impl;

  virtual ~HelloReceiver (void);

private:
  // Private and unimplemented for concrete interfaces.
  HelloReceiver (const HelloReceiver &);

  void operator= (const HelloReceiver &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_HELLOSENDER__VAR_OUT_CH_)
#define _HELLOSENDER__VAR_OUT_CH_

class HelloSender;
typedef HelloSender *HelloSender_ptr;

typedef
  TAO_Objref_Var_T<
      HelloSender
    >
  HelloSender_var;

typedef
  TAO_Objref_Out_T<
      HelloSender
    >
  HelloSender_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_STUB_Export HelloSender
  : public virtual ::Components::CCMObject
{
public:
  friend class TAO::Narrow_Utils<HelloSender>;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef HelloSender_ptr _ptr_type;
  typedef HelloSender_var _var_type;
  typedef HelloSender_out _out_type;

  // The static operations.
  static HelloSender_ptr _duplicate (HelloSender_ptr obj);

  static HelloSender_ptr _narrow (::CORBA::Object_ptr obj);
  static HelloSender_ptr _nil (void);

  virtual char * message (
    void);

  virtual void message (
    const char * message);

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  HelloSender (void);

  // Concrete non-local interface only.
  HelloSender (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  HelloSender (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  friend class _TAO_HelloSender_Direct_Proxy_Impl;

  virtual ~HelloSender (void);

private:
  // Private and unimplemented for concrete interfaces.
  HelloSender (const HelloSender &);

  void operator= (const HelloSender &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_interface.cpp:750

#if !defined (_MESSAGEEVENTCONSUMER__VAR_OUT_CH_)
#define _MESSAGEEVENTCONSUMER__VAR_OUT_CH_

class MessageEventConsumer;
typedef MessageEventConsumer *MessageEventConsumer_ptr;

typedef
  TAO_Objref_Var_T<
      MessageEventConsumer
    >
  MessageEventConsumer_var;

typedef
  TAO_Objref_Out_T<
      MessageEventConsumer
    >
  MessageEventConsumer_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:43

class HELLOWORLD_COMPONENTS_STUB_Export MessageEventConsumer
  : public virtual ::Components::EventConsumerBase

{
public:
  friend class TAO::Narrow_Utils<MessageEventConsumer>;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_type.cpp:307

  typedef MessageEventConsumer_ptr _ptr_type;
  typedef MessageEventConsumer_var _var_type;
  typedef MessageEventConsumer_out _out_type;

  // The static operations.
  static MessageEventConsumer_ptr _duplicate (MessageEventConsumer_ptr obj);

  static void _tao_release (MessageEventConsumer_ptr obj);

  static MessageEventConsumer_ptr _narrow (::CORBA::Object_ptr obj);
  static MessageEventConsumer_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static MessageEventConsumer_ptr _nil (void);

  virtual void push_MessageEvent (
    ::MessageEvent * the_MessageEvent);

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_ch.cpp:140

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  MessageEventConsumer (void);

  // Concrete non-local interface only.
  MessageEventConsumer (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  MessageEventConsumer (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~MessageEventConsumer (void);

private:
  // Private and unimplemented for concrete interfaces.
  MessageEventConsumer (const MessageEventConsumer &);

  void operator= (const MessageEventConsumer &);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:308

#if !defined (_MESSAGEEVENT__ARG_TRAITS_)
#define _MESSAGEEVENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::MessageEvent>
    : public
        Object_Arg_Traits_T<
            ::MessageEvent *,
            ::MessageEvent_var,
            ::MessageEvent_out,
            TAO::Value_Traits<MessageEvent>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_HELLORECEIVER__ARG_TRAITS_)
#define _HELLORECEIVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::HelloReceiver>
    : public
        Object_Arg_Traits_T<
            ::HelloReceiver_ptr,
            ::HelloReceiver_var,
            ::HelloReceiver_out,
            TAO::Objref_Traits<HelloReceiver>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_HELLOSENDER__ARG_TRAITS_)
#define _HELLOSENDER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::HelloSender>
    : public
        Object_Arg_Traits_T<
            ::HelloSender_ptr,
            ::HelloSender_var,
            ::HelloSender_out,
            TAO::Objref_Traits<HelloSender>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_MESSAGEEVENTCONSUMER__ARG_TRAITS_)
#define _MESSAGEEVENTCONSUMER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::MessageEventConsumer>
    : public
        Object_Arg_Traits_T<
            ::MessageEventConsumer_ptr,
            ::MessageEventConsumer_var,
            ::MessageEventConsumer_out,
            TAO::Objref_Traits<MessageEventConsumer>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_ch.cpp:50

// OBV_ class
class HELLOWORLD_COMPONENTS_STUB_Export OBV_MessageEvent
  : public virtual MessageEvent,
    public virtual ::CORBA::DefaultValueRefCountBase
{

public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_ch.cpp:611

  virtual void content (char *val);
  virtual void content (const char *val);
  virtual void content (const ::CORBA::String_var &val);
  virtual const char *content (void) const;

public:

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_ch.cpp:462

  virtual void time (const ::CORBA::Long);
  virtual ::CORBA::Long time (void) const;

public:
  OBV_MessageEvent (void);
  OBV_MessageEvent (
      const char * _tao_init_content,
      ::CORBA::Long _tao_init_time
    );
  virtual ~OBV_MessageEvent (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__MessageEvent (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__MessageEvent (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::TAO::String_Manager _pd_content;
  ::CORBA::Long _pd_time;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSAGEEVENT__TRAITS_)
#define _MESSAGEEVENT__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_STUB_Export Value_Traits<MessageEvent>
  {
    static void add_ref (MessageEvent *);
    static void remove_ref (MessageEvent *);
    static void release (MessageEvent *);
  };

#endif /* end #if !defined */

#if !defined (_HELLORECEIVER__TRAITS_)
#define _HELLORECEIVER__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_STUB_Export Objref_Traits< ::HelloReceiver>
  {
    static ::HelloReceiver_ptr duplicate (
        ::HelloReceiver_ptr p);
    static void release (
        ::HelloReceiver_ptr p);
    static ::HelloReceiver_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::HelloReceiver_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_HELLOSENDER__TRAITS_)
#define _HELLOSENDER__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_STUB_Export Objref_Traits< ::HelloSender>
  {
    static ::HelloSender_ptr duplicate (
        ::HelloSender_ptr p);
    static void release (
        ::HelloSender_ptr p);
    static ::HelloSender_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::HelloSender_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MESSAGEEVENTCONSUMER__TRAITS_)
#define _MESSAGEEVENTCONSUMER__TRAITS_

  template<>
  struct HELLOWORLD_COMPONENTS_STUB_Export Objref_Traits< ::MessageEventConsumer>
  {
    static ::MessageEventConsumer_ptr duplicate (
        ::MessageEventConsumer_ptr p);
    static void release (
        ::MessageEventConsumer_ptr p);
    static ::MessageEventConsumer_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::MessageEventConsumer_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_valuetype.cpp:459


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern HELLOWORLD_COMPONENTS_STUB_Export void add_ref (MessageEvent *);
  extern HELLOWORLD_COMPONENTS_STUB_Export void remove_ref (MessageEvent *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\cdr_op_ch.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MessageEvent *);
HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MessageEvent *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const HelloReceiver_ptr );
HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, HelloReceiver_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const HelloSender_ptr );
HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, HelloSender_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MessageEventConsumer_ptr );
HELLOWORLD_COMPONENTS_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, MessageEventConsumer_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "HelloWorld_ComponentsC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

