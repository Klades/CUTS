// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:461

#ifndef _TAO_IDL_HELLOWORLD_COMPONENTSS_NJZM8I_H_
#define _TAO_IDL_HELLOWORLD_COMPONENTSS_NJZM8I_H_

#include /**/ "ace/pre.h"

#include "HelloWorld_ComponentsC.h"
#include "HelloWorldS.h"
#include "ComponentsS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#include /**/ "HelloWorld_Components_skel_export.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO HELLOWORLD_COMPONENTS_SKEL_Export

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:308

#if !defined (_MESSAGEEVENT__SARG_TRAITS_)
#define _MESSAGEEVENT__SARG_TRAITS_

  template<>
  class SArg_Traits< ::MessageEvent>
    : public
        Object_SArg_Traits_T<
            ::MessageEvent *,
            ::MessageEvent_var,
            ::MessageEvent_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_HELLORECEIVER__SARG_TRAITS_)
#define _HELLORECEIVER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::HelloReceiver>
    : public
        Object_SArg_Traits_T<
            ::HelloReceiver_ptr,
            ::HelloReceiver_var,
            ::HelloReceiver_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_HELLOSENDER__SARG_TRAITS_)
#define _HELLOSENDER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::HelloSender>
    : public
        Object_SArg_Traits_T<
            ::HelloSender_ptr,
            ::HelloSender_var,
            ::HelloSender_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_arg_traits.cpp:147

#if !defined (_MESSAGEEVENTCONSUMER__SARG_TRAITS_)
#define _MESSAGEEVENTCONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::MessageEventConsumer>
    : public
        Object_SArg_Traits_T<
            ::MessageEventConsumer_ptr,
            ::MessageEventConsumer_var,
            ::MessageEventConsumer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:76

class POA_HelloReceiver;
typedef POA_HelloReceiver *POA_HelloReceiver_ptr;

class HELLOWORLD_COMPONENTS_SKEL_Export POA_HelloReceiver
  : public virtual POA_Components::CCMObject
{
protected:
  POA_HelloReceiver (void);

public:
  /// Useful for template programming.
  typedef ::HelloReceiver _stub_type;
  typedef ::HelloReceiver_ptr _stub_ptr_type;
  typedef ::HelloReceiver_var _stub_var_type;

  POA_HelloReceiver (const POA_HelloReceiver& rhs);
  virtual ~POA_HelloReceiver (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::HelloReceiver *_this (void);
  
  virtual const char* _interface_repository_id (void) const;
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:76

class POA_HelloSender;
typedef POA_HelloSender *POA_HelloSender_ptr;

class HELLOWORLD_COMPONENTS_SKEL_Export POA_HelloSender
  : public virtual POA_Components::CCMObject
{
protected:
  POA_HelloSender (void);

public:
  /// Useful for template programming.
  typedef ::HelloSender _stub_type;
  typedef ::HelloSender_ptr _stub_ptr_type;
  typedef ::HelloSender_var _stub_var_type;

  POA_HelloSender (const POA_HelloSender& rhs);
  virtual ~POA_HelloSender (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::HelloSender *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:39

  virtual char * message (
    void) = 0;

  static void _get_message_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:39

  virtual void message (
    const char * message) = 0;

  static void _set_message_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_sh.cpp:76

class POA_MessageEventConsumer;
typedef POA_MessageEventConsumer *POA_MessageEventConsumer_ptr;

class HELLOWORLD_COMPONENTS_SKEL_Export POA_MessageEventConsumer
  : public virtual POA_Components::EventConsumerBase
{
protected:
  POA_MessageEventConsumer (void);

public:
  /// Useful for template programming.
  typedef ::MessageEventConsumer _stub_type;
  typedef ::MessageEventConsumer_ptr _stub_ptr_type;
  typedef ::MessageEventConsumer_var _stub_var_type;

  POA_MessageEventConsumer (const POA_MessageEventConsumer& rhs);
  virtual ~POA_MessageEventConsumer (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::MessageEventConsumer *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_sh.cpp:39

  virtual void push_MessageEvent (
    ::MessageEvent * the_MessageEvent) = 0;

  static void push_MessageEvent_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

#include /**/ "ace/post.h"

#endif /* ifndef */

