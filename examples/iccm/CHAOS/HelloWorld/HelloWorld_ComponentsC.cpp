// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:376


#include "HelloWorld_ComponentsC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "HelloWorld_ComponentsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_cs.cpp:56

void
TAO::Value_Traits<MessageEvent>::add_ref (
    MessageEvent * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<MessageEvent>::remove_ref (
    MessageEvent * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<MessageEvent>::release (
    MessageEvent * p)
{
  ::CORBA::remove_ref (p);
}

MessageEvent *
MessageEvent::_downcast ( ::CORBA::ValueBase *v)
{
  return dynamic_cast< ::MessageEvent * > (v);
}

const char *
MessageEvent::_tao_obv_repository_id (void) const
{
  return this->_tao_obv_static_repository_id ();
}

void
MessageEvent::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

MessageEvent::~MessageEvent (void)
{}

::CORBA::Boolean
MessageEvent::_tao_marshal_v (TAO_OutputCDR & strm) const
{
  TAO_ChunkInfo ci (this->is_truncatable_ || this->chunking_);
  return this->_tao_marshal__MessageEvent (strm, ci);
}

::CORBA::Boolean
MessageEvent::_tao_unmarshal_v (TAO_InputCDR & strm)
{
  TAO_ChunkInfo ci (this->is_truncatable_ || this->chunking_, 1);
  return this->_tao_unmarshal__MessageEvent (strm,ci);
}

::CORBA::Boolean
MessageEvent::_tao_match_formal_type (ptrdiff_t formal_type_id) const
{
  return formal_type_id == reinterpret_cast<ptrdiff_t> (MessageEvent::_downcast);
}

::CORBA::Boolean
MessageEvent::_tao_unmarshal (
    TAO_InputCDR &strm,
    MessageEvent *&new_object
  )
{
  ::CORBA::ValueBase *base = 0;
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        MessageEvent::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );
  
  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;
  
  if (is_null_object)
    return true;
  
  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;
  
  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = MessageEvent::_downcast (base);
  if (0 == new_object)
    return false;
  
  if (is_indirected)
    new_object->_add_ref ();
  
  owner._retn ();
  return true;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_init_cs.cpp:76

MessageEvent_init::MessageEvent_init (void)
{
}

MessageEvent_init::~MessageEvent_init (void)
{
}

MessageEvent_init *
MessageEvent_init::_downcast ( ::CORBA::ValueFactoryBase *v)
{
  return dynamic_cast< ::MessageEvent_init * > (v);
}

const char*
MessageEvent_init::tao_repository_id (void)
{
  return ::MessageEvent::_tao_obv_static_repository_id ();
}

::CORBA::ValueBase *
MessageEvent_init::create_for_unmarshal (void)
{
  ::CORBA::ValueBase *ret_val = 0;
  ACE_NEW_THROW_EX (
      ret_val,
      OBV_MessageEvent,
      ::CORBA::NO_MEMORY ()
    );
  return ret_val;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for HelloReceiver.

HelloReceiver_ptr
TAO::Objref_Traits<HelloReceiver>::duplicate (
    HelloReceiver_ptr p)
{
  return HelloReceiver::_duplicate (p);
}

void
TAO::Objref_Traits<HelloReceiver>::release (
    HelloReceiver_ptr p)
{
  ::CORBA::release (p);
}

HelloReceiver_ptr
TAO::Objref_Traits<HelloReceiver>::nil (void)
{
  return HelloReceiver::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<HelloReceiver>::marshal (
    const HelloReceiver_ptr p,
    TAO_OutputCDR & cdr)
{
  return cdr << p;
}

HelloReceiver::HelloReceiver (void)
{
}

HelloReceiver::~HelloReceiver (void)
{
}

HelloReceiver_ptr
HelloReceiver::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<HelloReceiver>::narrow (
        _tao_objref,
        "IDL:HelloReceiver:1.0");
}

HelloReceiver_ptr
HelloReceiver::_nil (void)
{
  return 0;
}

HelloReceiver_ptr
HelloReceiver::_duplicate (HelloReceiver_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

::CORBA::Boolean
HelloReceiver::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:HelloReceiver:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Components/CCMObject:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* HelloReceiver::_interface_repository_id (void) const
{
  return "IDL:HelloReceiver:1.0";
}

::CORBA::Boolean
HelloReceiver::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for HelloSender.

HelloSender_ptr
TAO::Objref_Traits<HelloSender>::duplicate (
    HelloSender_ptr p)
{
  return HelloSender::_duplicate (p);
}

void
TAO::Objref_Traits<HelloSender>::release (
    HelloSender_ptr p)
{
  ::CORBA::release (p);
}

HelloSender_ptr
TAO::Objref_Traits<HelloSender>::nil (void)
{
  return HelloSender::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<HelloSender>::marshal (
    const HelloSender_ptr p,
    TAO_OutputCDR & cdr)
{
  return cdr << p;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:91

char *
HelloSender::message (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_message",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:91

void
HelloSender::message (
  const char * message)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_message (message);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_message
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_message",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _tao_call.invoke (0, 0);
}

HelloSender::HelloSender (void)
{
}

HelloSender::~HelloSender (void)
{
}

HelloSender_ptr
HelloSender::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<HelloSender>::narrow (
        _tao_objref,
        "IDL:HelloSender:1.0");
}

HelloSender_ptr
HelloSender::_nil (void)
{
  return 0;
}

HelloSender_ptr
HelloSender::_duplicate (HelloSender_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

::CORBA::Boolean
HelloSender::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:HelloSender:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Components/CCMObject:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* HelloSender::_interface_repository_id (void) const
{
  return "IDL:HelloSender:1.0";
}

::CORBA::Boolean
HelloSender::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for MessageEventConsumer.

MessageEventConsumer_ptr
TAO::Objref_Traits<MessageEventConsumer>::duplicate (
    MessageEventConsumer_ptr p)
{
  return MessageEventConsumer::_duplicate (p);
}

void
TAO::Objref_Traits<MessageEventConsumer>::release (
    MessageEventConsumer_ptr p)
{
  ::CORBA::release (p);
}

MessageEventConsumer_ptr
TAO::Objref_Traits<MessageEventConsumer>::nil (void)
{
  return MessageEventConsumer::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MessageEventConsumer>::marshal (
    const MessageEventConsumer_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_operation\operation_cs.cpp:91

void
MessageEventConsumer::push_MessageEvent (
  ::MessageEvent * the_MessageEvent)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::MessageEvent>::in_arg_val _tao_the_MessageEvent (the_MessageEvent);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_the_MessageEvent
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "push_MessageEvent",
      17,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _tao_call.invoke (0, 0);
}

MessageEventConsumer::MessageEventConsumer (void)
{
}

MessageEventConsumer::~MessageEventConsumer (void)
{
}

MessageEventConsumer_ptr
MessageEventConsumer::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MessageEventConsumer>::narrow (
        _tao_objref,
        "IDL:MessageEventConsumer:1.0");
}

MessageEventConsumer_ptr
MessageEventConsumer::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<MessageEventConsumer>::unchecked_narrow (
        _tao_objref);
}

MessageEventConsumer_ptr
MessageEventConsumer::_nil (void)
{
  return 0;
}

MessageEventConsumer_ptr
MessageEventConsumer::_duplicate (MessageEventConsumer_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MessageEventConsumer::_tao_release (MessageEventConsumer_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MessageEventConsumer::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Components/EventConsumerBase:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MessageEventConsumer:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* MessageEventConsumer::_interface_repository_id (void) const
{
  return "IDL:MessageEventConsumer:1.0";
}

::CORBA::Boolean
MessageEventConsumer::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\valuetype_obv_cs.cpp:50

OBV_MessageEvent::OBV_MessageEvent (void)
: require_truncation_ (false)
{}

OBV_MessageEvent::OBV_MessageEvent (
    const char * _tao_init_content,
    ::CORBA::Long _tao_init_time)
: require_truncation_ (false)
{
  content (_tao_init_content);
  time (_tao_init_time);
}

OBV_MessageEvent::~OBV_MessageEvent (void)
{}

::CORBA::Boolean
OBV_MessageEvent::_tao_marshal__MessageEvent (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_MessageEvent::_tao_unmarshal__MessageEvent (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_cs.cpp:837

/// Accessor to set the member.
void
OBV_MessageEvent::content (char *val)
{
  this->_pd_content = (val);
}

/// Accessor to set the member.
void
OBV_MessageEvent::content (const char *val)
{
  // Set the value.
  this->_pd_content = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
void
OBV_MessageEvent::content (const ::CORBA::String_var &val)
{
  ::CORBA::String_var content_var = val;
  this->_pd_content = content_var._retn ();
}

const char *
OBV_MessageEvent::content (void) const // get method
{
  return this->_pd_content;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\field_cs.cpp:590

/// Accessor to set the member.
void
OBV_MessageEvent::time (const CORBA::Long val)
{
  // Set the value.
  this->_pd_time = val;
}

// Retrieve the member
::CORBA::Long
OBV_MessageEvent::time (void) const
{
  return this->_pd_time;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_valuetype.cpp:515

void
CORBA::add_ref (MessageEvent * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (MessageEvent * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\cdr_op_cs.cpp:63


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const MessageEvent *_tao_valuetype
  )
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&MessageEvent::_downcast)
      );
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    MessageEvent *&_tao_valuetype
  )
{
  return MessageEvent::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_valuetype\marshal_cs.cpp:36

::CORBA::Boolean
OBV_MessageEvent::_tao_marshal_state (TAO_OutputCDR &strm, TAO_ChunkInfo&ci) const
{
  if (! ci.start_chunk (strm))
    return false;
  
  CORBA::Boolean const ret = 
      (strm << _pd_content.in ()) &&
      (strm << _pd_time);
  if ( ! ret) 
    return false; 
  
  if (! ci.end_chunk (strm))
    return false;
  
  return true;
}

::CORBA::Boolean
OBV_MessageEvent::_tao_unmarshal_state (TAO_InputCDR &strm, TAO_ChunkInfo&ci)
{
  if (!ci.handle_chunking (strm))
    return false;
  
  CORBA::Boolean const ret = 
      (strm >> _pd_content.out ()) &&
      (strm >> _pd_time);
  if (!ret) 
    return false; 
  
  if (this->require_truncation_)
    return ci.skip_chunks (strm);
  
  else
    return ci.handle_chunking (strm);
  
  
}

void
OBV_MessageEvent::truncation_hook (void)
{
  this->require_truncation_ = true;
}



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const HelloReceiver_ptr _tao_objref)
{
  Components::CCMObject_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    HelloReceiver_ptr &_tao_objref)
{
  Components::CCMObject_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::HelloReceiver RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const HelloSender_ptr _tao_objref)
{
  Components::CCMObject_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    HelloSender_ptr &_tao_objref)
{
  Components::CCMObject_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::HelloSender RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const MessageEventConsumer_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    MessageEventConsumer_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::MessageEventConsumer RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



