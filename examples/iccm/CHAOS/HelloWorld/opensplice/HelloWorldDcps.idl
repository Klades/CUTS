#ifndef HELLOWORLDDCPS_IDL_
#define HELLOWORLDDCPS_IDL_

#include "dds_dcps.idl"

#include "HelloWorld.idl"

typedef sequence<Message> MessageSeq;

local interface MessageTypeSupportInterface : DDS::TypeSupport { };

local interface MessageDataWriter : DDS::DataWriter {
    DDS::InstanceHandle_t register_instance(
      in Message instance_data);

    DDS::InstanceHandle_t register_instance_w_timestamp(
      in Message instance_data,
      in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t unregister_instance(
      in Message instance_data,
      in DDS::InstanceHandle_t handle);

    DDS::ReturnCode_t unregister_instance_w_timestamp(
      in Message instance_data,
      in DDS::InstanceHandle_t handle,
      in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t write(
      in Message instance_data,
      in DDS::InstanceHandle_t handle);

    DDS::ReturnCode_t write_w_timestamp(
      in Message instance_data,
      in DDS::InstanceHandle_t handle,
      in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t dispose(
      in Message instance_data,
      in DDS::InstanceHandle_t handle);

    DDS::ReturnCode_t dispose_w_timestamp(
      in Message instance_data,
      in DDS::InstanceHandle_t handle,
      in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t writedispose(
      in Message instance_data,
      in DDS::InstanceHandle_t handle);

    DDS::ReturnCode_t writedispose_w_timestamp(
      in Message instance_data,
      in DDS::InstanceHandle_t handle,
      in DDS::Time_t source_timestamp);

    DDS::ReturnCode_t get_key_value(
      inout Message key_holder,
      in DDS::InstanceHandle_t handle);

    DDS::InstanceHandle_t lookup_instance(
      in Message instance_data);

};

local interface MessageDataReader : DDS::DataReader {
    DDS::ReturnCode_t read(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t take_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t read_next_sample(
      inout Message received_data,
      inout DDS::SampleInfo sample_info);

    DDS::ReturnCode_t take_next_sample(
      inout Message received_data,
      inout DDS::SampleInfo sample_info);

    DDS::ReturnCode_t read_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_next_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t take_next_instance_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t return_loan(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq);

    DDS::ReturnCode_t get_key_value(
      inout Message key_holder,
      in DDS::InstanceHandle_t handle);

    DDS::InstanceHandle_t lookup_instance(
      in Message instance);

};

local interface MessageDataReaderView : DDS::DataReaderView {
    DDS::ReturnCode_t read(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t take_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t read_next_sample(
      inout Message received_data,
      inout DDS::SampleInfo sample_info);

    DDS::ReturnCode_t take_next_sample(
      inout Message received_data,
      inout DDS::SampleInfo sample_info);

    DDS::ReturnCode_t read_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t take_next_instance(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::SampleStateMask sample_states,
      in DDS::ViewStateMask view_states,
      in DDS::InstanceStateMask instance_states);

    DDS::ReturnCode_t read_next_instance_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t take_next_instance_w_condition(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq,
      in long max_samples,
      in DDS::InstanceHandle_t a_handle,
      in DDS::ReadCondition a_condition);

    DDS::ReturnCode_t return_loan(
      inout MessageSeq received_data,
      inout DDS::SampleInfoSeq info_seq);

    DDS::ReturnCode_t get_key_value(
      inout Message key_holder,
      in DDS::InstanceHandle_t handle);

    DDS::InstanceHandle_t lookup_instance(
      in Message instance);
};
#endif
