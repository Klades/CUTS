// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_codegen.cpp:376


#include "HelloWorldDcpsC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "HelloWorldDcpsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_sequence\sequence_cs.cpp:73

#if !defined (_MESSAGESEQ_CS_)
#define _MESSAGESEQ_CS_

MessageSeq::MessageSeq (void)
{}

MessageSeq::MessageSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        Message
      > (max)
{}

MessageSeq::MessageSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Message * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        Message
      >
    (max, length, buffer, release)
{}

MessageSeq::MessageSeq (
    const MessageSeq &seq)
  : ::TAO::unbounded_value_sequence<
        Message
      > (seq)
{}

MessageSeq::~MessageSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for MessageTypeSupportInterface.

MessageTypeSupportInterface_ptr
TAO::Objref_Traits<MessageTypeSupportInterface>::duplicate (
    MessageTypeSupportInterface_ptr p)
{
  return MessageTypeSupportInterface::_duplicate (p);
}

void
TAO::Objref_Traits<MessageTypeSupportInterface>::release (
    MessageTypeSupportInterface_ptr p)
{
  ::CORBA::release (p);
}

MessageTypeSupportInterface_ptr
TAO::Objref_Traits<MessageTypeSupportInterface>::nil (void)
{
  return MessageTypeSupportInterface::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MessageTypeSupportInterface>::marshal (
    const MessageTypeSupportInterface_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MessageTypeSupportInterface::MessageTypeSupportInterface (void)
{}

MessageTypeSupportInterface::~MessageTypeSupportInterface (void)
{
}

MessageTypeSupportInterface_ptr
MessageTypeSupportInterface::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupportInterface::_duplicate (
      dynamic_cast<MessageTypeSupportInterface_ptr> (_tao_objref)
    );
}

MessageTypeSupportInterface_ptr
MessageTypeSupportInterface::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageTypeSupportInterface::_duplicate (
      dynamic_cast<MessageTypeSupportInterface_ptr> (_tao_objref)
    );
}

MessageTypeSupportInterface_ptr
MessageTypeSupportInterface::_nil (void)
{
  return 0;
}

MessageTypeSupportInterface_ptr
MessageTypeSupportInterface::_duplicate (MessageTypeSupportInterface_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MessageTypeSupportInterface::_tao_release (MessageTypeSupportInterface_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MessageTypeSupportInterface::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MessageTypeSupportInterface:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MessageTypeSupportInterface::_interface_repository_id (void) const
{
  return "IDL:MessageTypeSupportInterface:1.0";
}

::CORBA::Boolean
MessageTypeSupportInterface::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for MessageDataWriter.

MessageDataWriter_ptr
TAO::Objref_Traits<MessageDataWriter>::duplicate (
    MessageDataWriter_ptr p)
{
  return MessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<MessageDataWriter>::release (
    MessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

MessageDataWriter_ptr
TAO::Objref_Traits<MessageDataWriter>::nil (void)
{
  return MessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MessageDataWriter>::marshal (
    const MessageDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MessageDataWriter::MessageDataWriter (void)
{}

MessageDataWriter::~MessageDataWriter (void)
{
}

MessageDataWriter_ptr
MessageDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref)
    );
}

MessageDataWriter_ptr
MessageDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataWriter::_duplicate (
      dynamic_cast<MessageDataWriter_ptr> (_tao_objref)
    );
}

MessageDataWriter_ptr
MessageDataWriter::_nil (void)
{
  return 0;
}

MessageDataWriter_ptr
MessageDataWriter::_duplicate (MessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MessageDataWriter::_tao_release (MessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MessageDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MessageDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MessageDataWriter::_interface_repository_id (void) const
{
  return "IDL:MessageDataWriter:1.0";
}

::CORBA::Boolean
MessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for MessageDataReader.

MessageDataReader_ptr
TAO::Objref_Traits<MessageDataReader>::duplicate (
    MessageDataReader_ptr p)
{
  return MessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<MessageDataReader>::release (
    MessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

MessageDataReader_ptr
TAO::Objref_Traits<MessageDataReader>::nil (void)
{
  return MessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MessageDataReader>::marshal (
    const MessageDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MessageDataReader::MessageDataReader (void)
{}

MessageDataReader::~MessageDataReader (void)
{
}

MessageDataReader_ptr
MessageDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref)
    );
}

MessageDataReader_ptr
MessageDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReader::_duplicate (
      dynamic_cast<MessageDataReader_ptr> (_tao_objref)
    );
}

MessageDataReader_ptr
MessageDataReader::_nil (void)
{
  return 0;
}

MessageDataReader_ptr
MessageDataReader::_duplicate (MessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MessageDataReader::_tao_release (MessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MessageDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MessageDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MessageDataReader::_interface_repository_id (void) const
{
  return "IDL:MessageDataReader:1.0";
}

::CORBA::Boolean
MessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for MessageDataReaderView.

MessageDataReaderView_ptr
TAO::Objref_Traits<MessageDataReaderView>::duplicate (
    MessageDataReaderView_ptr p)
{
  return MessageDataReaderView::_duplicate (p);
}

void
TAO::Objref_Traits<MessageDataReaderView>::release (
    MessageDataReaderView_ptr p)
{
  ::CORBA::release (p);
}

MessageDataReaderView_ptr
TAO::Objref_Traits<MessageDataReaderView>::nil (void)
{
  return MessageDataReaderView::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MessageDataReaderView>::marshal (
    const MessageDataReaderView_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MessageDataReaderView::MessageDataReaderView (void)
{}

MessageDataReaderView::~MessageDataReaderView (void)
{
}

MessageDataReaderView_ptr
MessageDataReaderView::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReaderView::_duplicate (
      dynamic_cast<MessageDataReaderView_ptr> (_tao_objref)
    );
}

MessageDataReaderView_ptr
MessageDataReaderView::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MessageDataReaderView::_duplicate (
      dynamic_cast<MessageDataReaderView_ptr> (_tao_objref)
    );
}

MessageDataReaderView_ptr
MessageDataReaderView::_nil (void)
{
  return 0;
}

MessageDataReaderView_ptr
MessageDataReaderView::_duplicate (MessageDataReaderView_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MessageDataReaderView::_tao_release (MessageDataReaderView_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MessageDataReaderView::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReaderView:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MessageDataReaderView:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MessageDataReaderView::_interface_repository_id (void) const
{
  return "IDL:MessageDataReaderView:1.0";
}

::CORBA::Boolean
MessageDataReaderView::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// c:\users\dfeiock.ads\documents\sem\middleware\tao\tao_idl\be\be_visitor_sequence\cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_MessageSeq_CPP_
#define _TAO_CDR_OP_MessageSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const MessageSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    MessageSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_MessageSeq_CPP_ */

