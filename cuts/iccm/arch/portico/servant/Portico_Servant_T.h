// -*- C++ -*-

//=============================================================================
/**
 *  @file         Portico_Servant_T.h
 *
 *  $Id$
 *
 *  Code generated by iCCM skeleton project generator that is include
 *  in the CUTS (http://cuts.cs.iupui.edu) and developed by:
 *
 *      Software Engineering & Distributed System (SEDS) Group
 *      Indiana Univesity-Purdue University Indianapolis
 *      Indianapolis, IN 46202
 */
//=============================================================================

#ifndef _ICCM_Portico_SERVANT_T_H_
#define _ICCM_Portico_SERVANT_T_H_

#include "cuts/iccm/servant/Servant_T.h"

#include "Portico_Servant.h"
#include "Portico_EventConsumer_T.h"
#include "Portico_Publisher_T.h"
#include "Portico_Publisher_Table_T.h"

namespace iCCM
{

/**
 * @class Portico_Servant_T
 *
 * Template implementation of Portico servant. This implementation
 * is the base class for all servants.
 */
template <typename T, typename CONTEXT, typename EXECUTOR, typename POA_EXEC>
class Portico_Servant_T :
  public Servant_T <T, CONTEXT, EXECUTOR, POA_EXEC, Portico_Servant>
{
public:
  /// Type definition of the base type.
  typedef Servant_T <T, CONTEXT, EXECUTOR, POA_EXEC, Portico_Servant> base_type;

  /// Type definition of the consumer map.
  typedef typename base_type::consumer_map_type consumer_map_type;

  /// Type definition of the publisher map.
  typedef typename base_type::emits_map_type emits_map_type;

  /// Type definition of the publisher table map.
  typedef typename base_type::publishes_map_type publishes_map_type;

  /// Initializing constructor.
  Portico_Servant_T (
    T * _this,
    const char * name,
    ::PortableServer::POA_ptr port_poa,
    typename EXECUTOR::_ptr_type impl);

  /// Destructor.
  virtual ~Portico_Servant_T (void) throw (RTI::FederateInternalError);

  /// Configure the servant with RTI. This is when the servant
  /// initializes its ports.
  virtual int install (const std::string & fed, const std::string & exec);

  virtual void remove (void);

  void reflectAttributeValues (RTI::ObjectHandle theObject,
                               const RTI::AttributeHandleValuePairSet& theAttributes,
                               const char *theTag)
                              throw (RTI::ObjectNotKnown,
                                     RTI::AttributeNotKnown,
                                     RTI::FederateOwnsAttributes,
                                     RTI::FederateInternalError);

  void reflectAttributeValues (RTI::ObjectHandle theObject,
                               const RTI::AttributeHandleValuePairSet& theAttributes,
                               const RTI::FedTime& theTime,
                               const char *theTag,
                               RTI::EventRetractionHandle theHandle)
                              throw (RTI::ObjectNotKnown,
                                     RTI::AttributeNotKnown,
                                     RTI::FederateOwnsAttributes,
                                     RTI::FederateInternalError);
};

}

#if defined (__CUTS_INLINE__)
#include "Portico_Servant_T.inl"
#endif

#include "Portico_Servant_T.cpp"

#endif  // !defined _ICCM_Portico_SERVANT_T_H_
