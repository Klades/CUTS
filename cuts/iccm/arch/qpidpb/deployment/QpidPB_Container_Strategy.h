// -*- C++ -*-

//=============================================================================
/**
 *  @file         QpidPB_Container_Strategy.h
 *
 *  $Id$
 *
 *  Code generated by iCCM skeleton project generator that is include
 *  in the CUTS (http://cuts.cs.iupui.edu) and developed by:
 *
 *      Software Engineering & Distributed System (SEDS) Group
 *      Indiana Univesity-Purdue University Indianapolis
 *      Indianapolis, IN 46202
 */
//=============================================================================

#ifndef _ICCM_QPIDPB_CONTAINER_STRATEGY_H_
#define _ICCM_QPIDPB_CONTAINER_STRATEGY_H_

#include "cuts/iccm/deployment/Container_Strategy_T.h"

#include "QpidPB_Deployment_Handlers_export.h"

namespace iCCM
{

// Forward decl.
class QpidPB_Container;

/**
 * @class QpidPB_Container_Strategy
 *
 * Implementation of the iCCM container startegy for QpidPB.
 */
class ICCM_QPIDPB_DEPLOYMENT_HANDLERS_Export QpidPB_Container_Strategy :
  public Container_Strategy_T <QpidPB_Container>
{
public:
  /// Type defintion of QpidPB_Container_Strategy base type.
  typedef Container_Strategy_T <QpidPB_Container> base_type;

  /**
   * Initializing constructor
   *
   * @param[in]     container       Container hosting the strategy
   */
  QpidPB_Container_Strategy (QpidPB_Container & container);

  /// Destructor.
  virtual ~QpidPB_Container_Strategy (void);

  /**
   * Configure the servant. The configuration values are those
   * attached to a component instance.
   *
   * @param[in]     servant         Servant to configure
   * @param[in]     values          Configuration values
   */
  virtual void configure_servant (::PortableServer::Servant servant,
                                  const ::Components::ConfigValues & values);
};

}

#if defined (__CUTS_INLINE__)
#include "QpidPB_Container_Strategy.inl"
#endif

#endif  // !defined _ICCM_QPIDPB_CONTAINER_STRATEGY_H_
