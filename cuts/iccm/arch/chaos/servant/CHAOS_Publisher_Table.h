// -*- C++ -*-

//=============================================================================
/**
 *  @file         CHAOS_Publisher_Table.h
 *
 *  $Id$
 *
 *  Code generated by iCCM skeleton project generator that is include
 *  in the CUTS (http://cuts.cs.iupui.edu) and developed by:
 *
 *      Software Engineering & Distributed System (SEDS) Group
 *      Indiana Univesity-Purdue University Indianapolis
 *      Indianapolis, IN 46202
 */
//=============================================================================

#ifndef _ICCM_CHAOS_PUBLISHER_TABLE_H_
#define _ICCM_CHAOS_PUBLISHER_TABLE_H_

#include "cuts/iccm/servant/Publisher_Table.h"

#include "CHAOS_svnt_export.h"

namespace iCCM
{

/**
 * @class CHAOS_Publisher_Table
 *
 * CHAOS does not have its own Publisher_Tables.  Instead, it is a proxy
 * to architecture-specific Publisher_Tables.
 */
class ICCM_CHAOS_SVNT_Export CHAOS_Publisher_Table :
  public Publisher_Table
{
public:
  /// Default constructor.
  CHAOS_Publisher_Table (void);

  /// Destructor.
  virtual ~CHAOS_Publisher_Table (void);

  /**
   * Subscribe a consumer to this publisher.
   *
   * @param[in]         consumer        Target consumer
   * @return            Subscription cookie
   */
  virtual ::Components::Cookie * subscribe (::Components::EventConsumerBase_ptr consumer);

  /**
   * Unsubscribe a consumer. The consumer to be unsubscribed is identifed
   * be the cookie parameter. If there cookie cannot be found, then an
   * exception is thrown.
   *
   * @param[in]         c               Subscription cookie
   * @return            The once connected consumer
   */
  virtual ::Components::EventConsumerBase_ptr unsubscribe (::Components::Cookie * c);

  /// CCM Lifecycle events
  virtual void activate (void);
  virtual void passivate (void);

  /// Method for sending a CORBA event.
  virtual void send_event (::Components::EventBase *);

  /// Method for allocating a new event
  virtual ::Components::EventBase * allocate_event (void);


protected:
  Publisher_Table * impl_;
};

}

#if defined (__CUTS_INLINE__)
#include "CHAOS_Publisher_Table.inl"
#endif

#endif  // !defined _ICCM_CHAOS_PUBLISHER_TABLE_H_
