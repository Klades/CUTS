// -*- C++ -*-

//=============================================================================
/**
 *  @file         QpidPB_Servant_T.h
 *
 *  $Id$
 *
 *  Code generated by iCCM skeleton project generator that is include
 *  in the CUTS (http://cuts.cs.iupui.edu) and developed by:
 *
 *      Software Engineering & Distributed System (SEDS) Group
 *      Indiana Univesity-Purdue University Indianapolis
 *      Indianapolis, IN 46202
 */
//=============================================================================

#ifndef _ICCM_QpidPB_SERVANT_T_H_
#define _ICCM_QpidPB_SERVANT_T_H_

#include "cuts/iccm/servant/Servant_T.h"

#include "QpidPB_Servant.h"
#include "QpidPB_EventConsumer_T.h"
#include "QpidPB_Publisher_T.h"
#include "QpidPB_Publisher_Table_T.h"

namespace iCCM
{

/**
 * @class QpidPB_Servant_T
 *
 * Template implementation of QpidPB servant. This implementation
 * is the base class for all servants.
 */
template <typename T, typename CONTEXT, typename EXECUTOR, typename POA_EXEC>
class QpidPB_Servant_T :
  public Servant_T <T, CONTEXT, EXECUTOR, POA_EXEC, QpidPB_Servant>
{
public:
  /// Type definition of the base type.
  typedef Servant_T <T, CONTEXT, EXECUTOR, POA_EXEC, QpidPB_Servant> base_type;

  /// Type definition of the consumer map.
  typedef typename base_type::consumer_map_type consumer_map_type;

  /// Type definition of the publisher map.
  typedef typename base_type::emits_map_type emits_map_type;

  /// Type definition of the publisher table map.
  typedef typename base_type::publishes_map_type publishes_map_type;

  /// Initializing constructor.
  QpidPB_Servant_T (
    T * _this,
    const char * name,
    ::PortableServer::POA_ptr port_poa,
    typename EXECUTOR::_ptr_type impl);

  /// Destructor.
  virtual ~QpidPB_Servant_T (void);
};

}

#if defined (__CUTS_INLINE__)
#include "QpidPB_Servant_T.inl"
#endif

#include "QpidPB_Servant_T.cpp"

#endif  // !defined _ICCM_QpidPB_SERVANT_T_H_
