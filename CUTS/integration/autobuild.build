<?xml version="1.0"?>
<project name="autobuild.build" basedir="." default="build">
  <description>Build script for running integration test with CUTS using ANT.</description>
  <property environment="env" />

  <!-- import external project files -->
  <import file="include/devenv.build" />
  <import file="include/mpc.build" />
  <import file="include/svn.build" />

  <!-- store the target configuration -->
  <property name="devenv.configuration" value="debug" />
  <property name="mpc.path" value="${env.ACE_ROOT}/bin/" />

  <!--
    @target build
    
    This is the default target. It will update the current workspace
    with the lastest source for the repository, then build it.
    -->
  
  <target name="build" depends="svn.update">
    <antcall target="build.noupdate" />
  </target>

  <!--
    @target build.noupdate
    
    Build the current workspace without retrieving any updates from
    the local repository.
    -->

  <target name="build.noupdate">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/CUTS.mwc" />
    <property name="mpc.args" value="-features modeling=1,cosmic=1" />
    <antcall target="mpc.workspace.generate" />

    <property name="devenv.solution" value="${env.CUTS_ROOT}/CUTS.sln" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />
  </target>

  <target name="build.modeling" depends="svn.update">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/CUTS_CoSMIC.mwc" />
    <property name="mpc.args" value="-features modeling=1,cosmic=1" />
    <antcall target="mpc.workspace.generate" />

    <property name="devenv.solution" value="${env.CUTS_ROOT}/CUTS_CoSMIC.sln" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />
  </target>

  <target name="build.runtime" depends="svn.update">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/CUTS.mwc" />
    <property name="mpc.args" value="-features modeling=0,cosmic=0" />
    <antcall target="mpc.workspace.generate" />

    <property name="devenv.solution" value="${env.CUTS_ROOT}/CUTS.sln" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />
  </target>

  <target name="build.installers" depends="build">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/install/CUTS_installers.mwc" />
    <property name="mpc.args" value="-features modeling=1,cosmic=1" />
    <antcall target="mpc.workspace.generate" />

    <!-- we only distribute the release version -->
    <property name="devenv.solution" value="${env.CUTS_ROOT}/install/CUTS_installers.sln" />
    <property name="devenv.configuration" value="release" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />
  </target>

  <!--
    @target build.tests
    
    Builds the unit tests for CUTS based on the current state of the 
    workspace. If this workspace is out-of-date, then this target
    will bring the workspace up-to-date.
    -->
  
  <target name="build.tests" depends="build">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/tests/tests.mwc" />
    <property name="mpc.args" value="-features boost=1" />
    <antcall target="mpc.workspace.generate" />

    <property name="devenv.solution" value="${env.CUTS_ROOT}/tests/tests.sln" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />

    <import file="unittest.build" />
    <antcall target="unittest.run.all" />
  </target>

  <!--
    @target build.tests.current
    
    Builds the unit tests for CUTS based on the current state of the 
    workspace. If this workspace is out-of-date, then this target
    will bring the workspace up-to-date.
    -->

  <target name="build.tests.current">
    <property name="mpc.workspace" value="${env.CUTS_ROOT}/tests/tests.mwc" />
    <property name="mpc.args" value="-features boost=1" />
    <antcall target="mpc.workspace.generate" />

    <property name="devenv.solution" value="${env.CUTS_ROOT}/tests/tests.sln" />
    <antcall target="devenv.clean" />
    <antcall target="devenv.build" />
  </target>
</project>
