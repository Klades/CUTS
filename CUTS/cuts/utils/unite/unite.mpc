// $Id$

project (CUTS_Unite_Xml_Gen) : xsc_cxx {
  custom_only = 1

  Modify_Custom (XSC) {
    header_outputext = .h
    inline_outputext = .inl
  }

  specific {
    xscflags += --cxx-header-suffix .h \
                --cxx-source-suffix .cpp \
                --cxx-inline-suffix .inl \
                --cxx-generate-inline \
                --cxx-export-symbol CUTS_UNITE_XML_Export \
                --cxx-export-header Unite_Xml_export.h \
                --cxx-char-type char
  }

  Xsc_Files {
    gendir = .
    $(CUTS_ROOT)/etc/schemas/cuts-unite.xsd
  }
}

project (CUTS_Unite_Common) : pcre, boost_base, cuts_test_database, cutslib {
  sharedname    = CUTS_Unite_Common
  dynamicflags += CUTS_UNITE_BUILD_DLL

  Source_Files {
    Dataflow_Graph.cpp
    Dataset_Repo.cpp
    Log_Format.cpp
    Log_Format_Compiler.cpp
    Log_Format_Data_Entry.cpp
    Presentation_Service.cpp
    Presentation_Service_Manager.cpp
    Relation.cpp
    Unit_Test_Result.cpp
    Unite_Test.cpp
    Variable.cpp
  }

  Header_Files {
    Variable_Table.h
  }

  Template_Files {
    Variable_T.cpp
  }
}

project (CUTS_Unite_Xml) : boost_base, xscrt, cuts_unite, cutslib {
  sharedname    = CUTS_Unite_Xml
  dynamicflags += CUTS_UNITE_XML_BUILD_DLL

  after += CUTS_Unite_Xml_Gen

  Source_Files {
    cuts-unite.cpp
    Dataflow_Graph_Builder.cpp
    Unite_Aspect_File.cpp
    Unite_Config_File.cpp
    Unite_Datagraph_File.cpp
    Unite_Test_Builder.cpp
    Where_Clause_Builder.cpp
  }

  Header_Files {

  }

  Inline_Files {

  }
}

project (CUTS_Unite_Exe) : boost_base, cuts_unite_xml, cutsexe {
  exename = cuts-unite

  after += CUTS_Console_Presentation_Service
  libs  += CUTS_Console_Presentation_Service

  Source_Files {
    unite.cpp
    Unite_App.cpp
  }

  Inline_Files {

  }

  Header_Files {

  }
}
