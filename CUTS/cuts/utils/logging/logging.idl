// -*- IDL -*-

//=============================================================================
/**
 * @file        logging.idl
 *
 * $Id$
 *
 * @author      James H. Hill
 */
//=============================================================================

#ifndef _CUTS_CUTS_LOGGING_IDL_
#define _CUTS_CUTS_LOGGING_IDL_

#include "cuts/idl/exceptions.idl"
#include "cuts/idl/TimeValue.idl"
#include "cuts/idl/UUID.idl"

module CUTS
{
  /// Type definition of the message's text. We use a sequence of char's
  /// instead of a string so we can amortize calculating the length of
  /// the data. Also, we want the data store to act like a buffer, as opposed
  /// to a string object.
  typedef sequence <char> MessageText;

  /**
   * @struct LogMessage
   *
   * Log message send from an application to the logger client.
   */
  struct LogMessage
  {
    /// Timestamp of the log message.
    ::CUTS::TimeValue timestamp;

    /// Priority of the log message.
    long severity;

    /// The actual content of the log message.
    ::CUTS::MessageText message;
  };

  /// Type definition for a sequence of log messages.
  typedef sequence <::CUTS::LogMessage> LogMessages;
};

#endif  // !defined _CUTS_CUTS_LOGGING_IDL_
