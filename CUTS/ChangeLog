Sun Jun 14 15:30:38 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_IDL_Graph.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_IDL_Node.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_IDL_Node.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/IDL_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Generator.cpp:

          . Fixed more bugs/inconsistencies in the bug generator.

        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.cidl:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.idl:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.cpp:

          . Re-generated the example.

Sat Jun 13 23:35:54 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.cpp:

          . Regenerated the example for testing purposes on non-Windows.

        * examples/arch/opensplice/SimpleExample/SimpleComponent_DDS.idl:

          Removed this file.

Sat Jun 13 22:18:19 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.cpp:

          . Regenerated the example for testing purposes on non-Windows.

Fri Jun 12 17:47:19 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:

          . Testing a bug fix in the generated code.

Thu Jun 11 22:10:09 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/SimpleComponent_DDS.idl:

          . Missing interface definition.

Thu Jun 11 22:02:08 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Stub_Generator.cpp:

          . Fixed bug in the code generator.

        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.idl:

          . Updated the generated code.

Thu Jun 11 21:40:47 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Generator.cpp:

          . Fixed bugs in the generated code.

        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.cpp:

          . Re-generated the example code from the model.

Thu Jun 11 18:32:01 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/BE_OpenSplice.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/BE_OpenSplice_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Context.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Context_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Event_Traits_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Event_Traits_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/IDL_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/IDL_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Input_Stream_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Input_Stream_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Manager_Factory.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Output_Stream_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Output_Stream_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Project_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Header_Include_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Servant_Header_Include_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Stub_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Stub_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Workspace_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Workspace_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/opensplice/Workspace_Generator.cpp:
        * bin/cuts.config:

          . First version of the code generator for OpenSplice.

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.mpc:

          . Re-generated some of the OpenSplice code using the
            CUTS code generator.

Thu Jun 11 15:20:35 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Basic_Impl.mpc:

          . Added missing files.

Thu Jun 11 15:16:01 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mwc:

          . Re-generated files directly from the model.

Thu Jun 11 14:30:42 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:

          . Testing the new project file for OpenSplice.

Wed Jun 10 04:07:09 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.cpp:

          . Improved the build process.

Wed Jun 10 03:49:38 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Workspace_Generator.cpp:

          . Improved the build process for TCP/IP.

          . The *node* in the implementation graph now maps to the
            actual monolithic implementation in the model.

        * cuts/arch/tcpip/TCPIP_ORB.h:

          . Removed unnecessary code.

        * performance-tests/DOA-2009/CORBA/AnyTest.idl:
        * performance-tests/DOA-2009/CORBA/AnyTest_i.h:
        * performance-tests/DOA-2009/EISA/client.cpp:

          . Checkpointing the performance test.

Wed Jun 10 02:37:57 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_chaos.mpb:

          . Missing base project.

Tue Jun  9 01:37:17 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * performance-tests/DOA-2009/CORBA/AnyTest.idl:
        * performance-tests/DOA-2009/CORBA/AnyTest.mpc:
        * performance-tests/DOA-2009/CORBA/client.cpp:
        * performance-tests/DOA-2009/EISA/AnyTest.mpc:
        * performance-tests/DOA-2009/EISA/EINode_Channel_i.h:
        * performance-tests/DOA-2009/EISA/EINode_Channel_i.cpp:
        * performance-tests/DOA-2009/EISA/client.cpp:
        * performance-tests/DOA-2009/EISA/einode-configuration.xml:
        * performance-tests/DOA-2009/EISA/server.cpp:

          . Initial performance tests for DOA 2009 paper.

Mon Jun  8 21:47:56 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * performance-tests:
        * performance-tests/DOA-2009:
        * performance-tests/DOA-2009/CORBA:
        * performance-tests/DOA-2009/CORBA/AnyTest.idl:
        * performance-tests/DOA-2009/CORBA/AnyTest.mpc:
        * performance-tests/DOA-2009/CORBA/AnyTest_i.h:
        * performance-tests/DOA-2009/CORBA/AnyTest_i.cpp:
        * performance-tests/DOA-2009/CORBA/client.cpp:
        * performance-tests/DOA-2009/CORBA/server.cpp:
        * performance-tests/DOA-2009/EISA:

          . Performance test for DOA paper.

Mon Jun  8 19:39:43 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * tests/papers:
        * tests/papers/FASE:
        * tests/papers/FASE/FASE.xme:

          Removed these files.

Sun Jun  7 20:42:58 UTC 2009  Pooja Varshneya  <varshnp@dre.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.cpp:

          . Updated the interpreter to generate two files model.datagraph
            model.unite

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xmp:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_uml.xme:

          . Changed the name of Datagraph to DataGraph

Sun Jun  7 06:58:56 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/dsto:
        * cuts/arch/dsto/AppData.h:
        * cuts/arch/dsto/DDS:
        * cuts/arch/dsto/DDS/AppData.h:
        * cuts/arch/dsto/DDS/DDS_Utilities_export.h:
        * cuts/arch/dsto/DDS/DDS_Utility.h:
        * cuts/arch/dsto/DDS/DDS_Utility.cpp:
        * cuts/arch/dsto/DDS/DSTO_ListenerBase.h:
        * cuts/arch/dsto/DDS/DSTO_ListenerBase.cpp:
        * cuts/arch/dsto/DDS/DummyConsumer.h:
        * cuts/arch/dsto/DDS/DummyConsumer.cpp:
        * cuts/arch/dsto/DDS/Listeners.h:
        * cuts/arch/dsto/DDS/Listeners.cpp:
        * cuts/arch/dsto/DDS/ModelDDSDataConversion.h:
        * cuts/arch/dsto/DDS/ModelDDSDataConversion.cpp:
        * cuts/arch/dsto/DDS/ModelDDSData_export.h:
        * cuts/arch/dsto/DDS/PubAppDDS.h:
        * cuts/arch/dsto/DDS/PubAppDDS.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter_export.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.cpp:
        * cuts/arch/dsto/DDS/PubAppDDS_export.h:
        * cuts/arch/dsto/DDS/README:
        * cuts/arch/dsto/DDS/SubAppDDS.h:
        * cuts/arch/dsto/DDS/SubAppDDS.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter_export.h:
        * cuts/arch/dsto/DDS/SubAppDDS_export.h:
        * cuts/arch/dsto/DDS/driver.cpp:
        * cuts/arch/dsto/DDS/dsto_dds.mpc.old:
        * cuts/arch/dsto/DDS/run_test.pl:
        * cuts/arch/dsto/DSTO_AdapterBase.h:
        * cuts/arch/dsto/DSTO_AdapterBase.cpp:
        * cuts/arch/dsto/DSTO_Adapter_T.h:
        * cuts/arch/dsto/DSTO_Adapter_T.cpp:
        * cuts/arch/dsto/DSTO_ContextBase.h:
        * cuts/arch/dsto/DSTO_ContextBase.cpp:
        * cuts/arch/dsto/DSTO_EventConsumer.h:
        * cuts/arch/dsto/DSTO_EventConsumer.cpp:
        * cuts/arch/dsto/DSTO_ExecBase.h:
        * cuts/arch/dsto/DSTO_ExecBase.cpp:
        * cuts/arch/dsto/DSTO_Utilities_export.h:
        * cuts/arch/dsto/FromCORBA.h:
        * cuts/arch/dsto/FromCORBA.cpp:
        * cuts/arch/dsto/FromCORBA_T.h:
        * cuts/arch/dsto/ModelData.idl:
        * cuts/arch/dsto/ModelDataConversion.h:
        * cuts/arch/dsto/ModelDataConversion.cpp:
        * cuts/arch/dsto/ModelData_export.h:
        * cuts/arch/dsto/PubApp.h:
        * cuts/arch/dsto/PubApp.cpp:
        * cuts/arch/dsto/PubAppAdapter.h:
        * cuts/arch/dsto/PubAppAdapter.cpp:
        * cuts/arch/dsto/PubAppAdapter_export.h:
        * cuts/arch/dsto/PubAppComponent.idl:
        * cuts/arch/dsto/PubAppContext.h:
        * cuts/arch/dsto/PubAppContext.cpp:
        * cuts/arch/dsto/PubApp_export.h:
        * cuts/arch/dsto/README:
        * cuts/arch/dsto/SubApp.h:
        * cuts/arch/dsto/SubApp.cpp:
        * cuts/arch/dsto/SubAppAdapter.h:
        * cuts/arch/dsto/SubAppAdapter.cpp:
        * cuts/arch/dsto/SubAppAdapter_export.h:
        * cuts/arch/dsto/SubAppComponent.idl:
        * cuts/arch/dsto/SubApp_export.h:
        * cuts/arch/dsto/ToCORBA.h:
        * cuts/arch/dsto/ToCORBA.cpp:
        * cuts/arch/dsto/ToCORBA_T.h:
        * cuts/arch/dsto/dsto.mpc.old:
        * cuts/arch/dsto/main.cpp:
        * cuts/arch/dsto/run_test.pl:

          Removed these files.

Sun Jun  7 06:55:38 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_chaos_ccm.mpb:
        * cuts/arch/chaos/ccm/CHAOS_CCM.mpc:
        * cuts/arch/chaos/ccm/CHAOS_CCM_EventConsumer.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.cpp:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Single_Subscriber.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Subscriber_Table.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.cpp:
        * cuts/arch/chaos/server/server.mpc:
        * cuts/arch/opensplice/OpenSplice.mpc:
        * cuts/arch/opensplice/OpenSplice_Servant.h:
        * cuts/arch/opensplice/OpenSplice_Servant.inl:
        * cuts/arch/opensplice/OpenSplice_Servant.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Events.idl:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.h:
        * cuts/arch/tcpip/ccm/TCPIP_Events.idl:
        * examples/arch/chaos/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/chaos/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/chaos/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/chaos/SimpleExample/SimpleComponent.idl:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.mpc:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.cpp:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt.h:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt.cpp:
        * examples/arch/chaos/SimpleExample/descriptors/run_test.pl:
        * examples/arch/opensplice/SimpleExample/descriptors/run_test.pl:

          . First complete working version of CHAOS using the
            running example at the following location:

                $CUTS_ROOT/examples/arch/chaos/SimpleExample

        * cuts/arch/opensplice/ccm/Events.idl:
        * cuts/arch/tcpip/ccm/Events.idl:

          Removed these files.

Sun Jun  7 06:42:05 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/chaos/SimpleExample/descriptors/SimpleExample.cdp:
        * examples/arch/chaos/SimpleExample/models:
        * examples/arch/chaos/SimpleExample/models/SimpleExample.xme:

          . Update the model w/ a DDS input/output event port.

          . Created a simple DDS-like connection in the model.

Sun Jun  7 04:54:41 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_tcpip.mpb:
        * MPC/config/cuts_tcpip_componentserver.mpb:

          . Added requires_tcpip as a base project.

Sun Jun  7 04:04:42 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/chaos/server/CHAOS_CCM_Container.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_Container.cpp:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.cpp:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.h:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.inl:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.cpp:

          . Fixed compile bugs on non-Windows systems.

Sun Jun  7 03:33:27 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_EventConsumer_T.cpp:

          . Bug fix where the wrong variable was passed to the
            push_event (). This caused the application to enter an
            infinite loop!!

        * cuts/arch/ccm/CCM_EventConsumer_T.h:
        * cuts/arch/ccm/CCM_Single_Subscriber_T.h:
        * cuts/arch/ccm/CCM_Traits_T.h:

          . Include the necessary TAO headers to support valuetype
            registration by the servant.

        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.cpp:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt.cpp:

          . Checkpointing the example.

Sun Jun  7 01:26:56 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Aggr_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Event_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Source_Generator.cpp:
        * bin/cuts-generate-ccm-arch-skeleton.py:

          . Fixed bugs in the code generator(s).

        * MPC/config/cuts_tcpip_componentserver.mpb:

          . Base project.

        * cuts/arch/ccm/CCM_EventConsumer.h:
        * cuts/arch/ccm/CCM_EventConsumer_T.h:
        * cuts/arch/ccm/CCM_EventConsumer_T.inl:
        * cuts/arch/ccm/CCM_EventConsumer_T.cpp:
        * cuts/arch/ccm/CCM_Servant.h:
        * cuts/arch/ccm/CCM_Single_Subscriber.h:
        * cuts/arch/ccm/CCM_Single_Subscriber_T.h:
        * cuts/arch/ccm/CCM_Single_Subscriber_T.inl:
        * cuts/arch/ccm/CCM_Single_Subscriber_T.cpp:
        * cuts/arch/ccm/CCM_T.h:
        * cuts/arch/ccm/CCM_T.cpp:
        * cuts/arch/ccm/CCM_Traits_T.h:
        * cuts/arch/ccm/CUTS_CCM.mpc:

          . First version of the CORBA achitecture for CHAOS.

        * cuts/arch/chaos/ccm/CHAOS_CCM.mpc:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.inl:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.cpp:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Single_Subscriber.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Subscriber_Table.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_export.h:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.h:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.cpp:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer_App.h:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer_export.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.cpp:
        * cuts/arch/chaos/server/server.mpc:
        * MPC/config/cuts_chaos_ccm.mpb:
        * MPC/config/cuts_chaos_componentserver.mpb:

          . Checkpointing the CHAOS architecture. Right now, it
            can handle TCP/IP and CCM integrated.

        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.cpp:

          . Moved several of the functions from inline to non-inline.

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_export.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.h:
        * cuts/arch/tcpip/server/server.mpc:

          . Refactored the TCP/IP component server into two separate
            projects: a reusable shared library and a executable.

        * examples/arch/chaos:
        * examples/arch/chaos/SimpleExample:
        * examples/arch/chaos/SimpleExample/ModelDDSData.idl:
        * examples/arch/chaos/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/chaos/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/chaos/SimpleExample/ModelDDSData_skel_export.h:
        * examples/arch/chaos/SimpleExample/ModelDDSData_stub_export.h:
        * examples/arch/chaos/SimpleExample/OpenSplice_SimpleComponent_svnt_export.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent.cidl:
        * examples/arch/chaos/SimpleExample/SimpleComponent.idl:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Basic_Impl_export.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.mpc:
        * examples/arch/chaos/SimpleExample/SimpleComponent_Impl.cpp:
        * examples/arch/chaos/SimpleExample/SimpleComponent_exec_export.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent_skel_export.h:
        * examples/arch/chaos/SimpleExample/SimpleComponent_stub_export.h:
        * examples/arch/chaos/SimpleExample/SimpleExample.mwc:
        * examples/arch/chaos/SimpleExample/TCPIP_ModelDDSDataC.h:
        * examples/arch/chaos/SimpleExample/TCPIP_ModelDDSDataC.cpp:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponentC.h:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponentC.cpp:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_export.h:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt.h:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt.cpp:
        * examples/arch/chaos/SimpleExample/TCPIP_SimpleComponent_svnt_export.h:
        * examples/arch/chaos/SimpleExample/descriptors:
        * examples/arch/chaos/SimpleExample/descriptors/SimpleExample.cdp:
        * examples/arch/chaos/SimpleExample/descriptors/nodemap.dat:
        * examples/arch/chaos/SimpleExample/descriptors/run_test.pl:
        * examples/arch/chaos/SimpleExample/lib:

          . Checkpointing the CHAOS running example.

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_Opts.h:

          Removed this file.

Sat Jun  6 19:19:35 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xmp:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_uml.xme:

          . Updated the CUTS_DSML language as per the new updates
            in UNITE.xsd

Sat Jun  6 17:27:33 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_Strategy_T.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:

          . Implemented the remove_servant () method, which is used
            to notify the strategy of a servant's removal.

        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:

          . Implemented a method for searching for an servant's UUID

Sat Jun  6 16:57:31 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * bin/cuts-generate-ccm-arch-skeleton.py:

          . Fixed several bugs in the code generator.

        * cuts/arch/ccm/CCM_Container_Strategy_T.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:

          . Converted the container_ variable to a reference so it
            does not tempt the strategy to delete the container.

        * cuts/arch/chaos:
        * cuts/arch/chaos/ccm:
        * cuts/arch/chaos/ccm/CHAOS_CCM.mpc:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.inl:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant.cpp:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.h:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.inl:
        * cuts/arch/chaos/ccm/CHAOS_CCM_Servant_T.cpp:
        * cuts/arch/chaos/server:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.h:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer.cpp:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer_App.h:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer_App.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_ComponentServer_App.cpp:
        * cuts/arch/chaos/server/CHAOS_CCM_Container.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_Container.cpp:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.h:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.inl:
        * cuts/arch/chaos/server/CHAOS_CCM_Container_Strategy.cpp:
        * cuts/arch/chaos/server/server.cpp:
        * cuts/arch/chaos/server/server.mpc:

          . Skeleton code for CHAOS integration with CCM/DAnCE.

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:

          . Moved the code that activates the TCP/IP servant to
            the configure_servant () method.

          . Removed load_servant () and load_executor ().

        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.cpp:

          . Added an output message to show that events are being
            sent/received via TCP/IP.

Sat Jun  6 15:28:52 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * bin/cuts-generate-ccm-arch-skeleton.py:

          . Added support for command-line options.

Sat Jun  6 14:27:08 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_ccm.mpb:

          . Fixed errors in the base project specification.

        * bin/cuts-generate-ccm-arch-skeleton.py:

          . Helper script to generate skeleton files for an architecture
            that uses CUTS's CCM template pattern lanugage.

Sat Jun  6 05:19:22 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_Strategy_T.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.inl:
        * cuts/arch/ccm/CCM_Container_Strategy_T.cpp:
        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.inl:
        * cuts/arch/ccm/CCM_Servant_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.inl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.h:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.h:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:

          . Moved the code for loading an executor/servant to the template
            class container's strategy so it can be used as a defualt
            method.

          . Added a configure_servant () method, which all different
            architectures to configure their servants based on configuration
            values in the deployment plan.

        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:

          . The servant's factory method no longer needs the
            a reference to the domain participant. This is set
            via the configure () method.

Sat Jun  6 01:51:35 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.cpp:

          . Actaully, the architecture below works!! The example was
            not publishing any data.

Sat Jun  6 01:40:31 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/opensplice/OpenSplice.mpc:
        * cuts/arch/opensplice/OpenSplice_Endpoint.h:
        * cuts/arch/opensplice/OpenSplice_Endpoint.inl:
        * cuts/arch/opensplice/OpenSplice_Endpoint.cpp:
        * cuts/arch/opensplice/OpenSplice_export.h:
        * cuts/arch/opensplice/ccm/Events.idl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.inl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.inl:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table_T.cpp:
        * cuts/arch/opensplice/server/OpenSplice_Container.h:
        * cuts/arch/opensplice/server/OpenSplice_Container.inl:
        * cuts/arch/opensplice/server/OpenSplice_Container.cpp:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.cpp:

          . Checkpointing the OpenSplice architecture. Right now, the
            the component is able to connect. It is, however, not able
            to properly send events.

        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.cpp:
        * examples/arch/opensplice/SimpleExample/descriptors/SimpleExample.cdp:
        * examples/arch/opensplice/SimpleExample/descriptors/run_test.pl:

          . Checkpoint the example with the lastest version of the
            OpenSplice architecture.

Fri Jun  5 19:29:55 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample:
        * examples/arch/opensplice/SimpleExample/descriptors:
        * examples/arch/opensplice/SimpleExample/descriptors/SimpleExample.cdp:
        * examples/arch/opensplice/SimpleExample/descriptors/nodemap.dat:
        * examples/arch/opensplice/SimpleExample/descriptors/run_test.pl:

          . First draft of files for running the example.

        * examples/arch/tcpip/HelloWorld/descriptors/run_test.pl:

          . Updated the script so the example runs for 10 seconds.

Fri Jun  5 19:12:26 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_Strategy_T.h:

          . Changed the name of a variable.

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.h:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.mpc:

          . First version of the component's implementation.

        * examples/arch/opensplice/SimpleExample/models:
        * examples/arch/opensplice/SimpleExample/models/SimpleExample.xme:

          . Model for the SimpleComponent example.

Fri Jun  5 18:41:30 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_ComponentServer_T.h:
        * cuts/arch/ccm/CCM_ComponentServer_T.inl:
        * cuts/arch/ccm/CCM_ComponentServer_T.cpp:

          . Fixed compilation errors on non-Windows systems.

        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.inl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.inl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_Servant_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_export.h:
        * cuts/arch/opensplice/server:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer.h:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer.inl:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer.cpp:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer_App.h:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer_App.inl:
        * cuts/arch/opensplice/server/OpenSplice_ComponentServer_App.cpp:
        * cuts/arch/opensplice/server/OpenSplice_Container.h:
        * cuts/arch/opensplice/server/OpenSplice_Container.inl:
        * cuts/arch/opensplice/server/OpenSplice_Container.cpp:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.h:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.inl:
        * cuts/arch/opensplice/server/OpenSplice_Container_Strategy.cpp:
        * cuts/arch/opensplice/server/server.cpp:
        * cuts/arch/opensplice/server/server.mpc:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:

          . First complete implementation of OpenSplice integrated with
            CCM and DAnCE. It still remains to be tested.

Fri Jun  5 15:58:37 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_T.h:
        * cuts/arch/ccm/CCM_Container_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:

          . The container template class now stores the component server
            that created it.

Fri Jun  5 14:48:06 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.inl:

          . Derived the CUTS_TCPIP_CCM_Servant class from the
            CUTS_CCM_Servant class since it contains the required
            methods/properties for all CCM servants that integrate
            with the container.

Fri Jun  5 13:56:31 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.cpp:

          . Updated the code generator to support the design/implementation
            of the TCP/IP servants.

Fri Jun  5 13:52:25 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . The servant no longer needs to pass a pointer to itself to
            the CUTS_CCM_Servant_T base class.

Fri Jun  5 07:30:34 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_ComponentServer_T.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.mpc:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:

          . Fixed build errors on non-Windows systems.

Fri Jun  5 07:14:28 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Context_Generator.cpp:

          . Bug fix where template paramters where missing leading
            and trailing space.

Fri Jun  5 07:10:46 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Project_Generator.cpp:

          . Bug fix where the excutor project was misspelled.

        * examples/arch/tcpip/HelloWorld/descriptors/run_test.pl:

          . Script for running the example.

Fri Jun  5 06:57:43 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_ComponentServer_App_T.h:
        * cuts/arch/ccm/CCM_ComponentServer_App_T.inl:
        * cuts/arch/ccm/CCM_ComponentServer_App_T.cpp:
        * cuts/arch/ccm/CCM_ComponentServer_T.h:
        * cuts/arch/ccm/CUTS_CCM.mpc:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_Opts.h:

          . Templatized the application server's code. It should now be
            a LOT easier to create application for component servers.

Fri Jun  5 05:44:52 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_ComponentServer_Callback.h:
        * cuts/arch/ccm/CCM_ComponentServer_Callback.inl:
        * cuts/arch/ccm/CCM_ComponentServer_Callback.cpp:
        * cuts/arch/ccm/CCM_ComponentServer_T.h:
        * cuts/arch/ccm/CCM_ComponentServer_T.inl:
        * cuts/arch/ccm/CCM_ComponentServer_T.cpp:
        * cuts/arch/ccm/CUTS_CCM.mpc:
        * cuts/arch/tcpip/TCPIP_ComponentServer.h:
        * cuts/arch/tcpip/TCPIP_ComponentServer.inl:
        * cuts/arch/tcpip/TCPIP_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:
        * cuts/arch/tcpip/server/server.cpp:

          . Implemented a common template for a component server's servant
            implementation.

Fri Jun  5 01:08:21 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.inl:
        * cuts/arch/ccm/CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:

          . Refactored the servant's template class so that it can be
            used with other architectures more easily.

        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Updated the generated servant's source code.

Thu Jun  4 23:49:54 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_T.h:
        * cuts/arch/ccm/CCM_Container_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/ccm/CCM_Servant.h:
        * cuts/arch/ccm/CCM_Servant.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:

          . The container template is now parameterizable by the servant
            base type. This allows the container to cast the ServantBase
            to a more domain-specific servant base for configuration
            purposes.

Thu Jun  4 23:23:19 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/opensplice/OpenSplice.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:

          . Added the requires_opensplice base project.

        * MPC/config/cuts_opensplice.mpb:
        * MPC/config/cuts_tcpip_ccm_stub.mpb:

          . Fixed errors in the project specification.

        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:
        * cuts/arch/ccm/CCM_Container_Strategy_T.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.inl:
        * cuts/arch/ccm/CCM_Container_T.h:
        * cuts/arch/ccm/CCM_Container_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:

          . Updates the container's strategy template so that it is
            parameterizable by the actual container instead of parent
            of the container, i.e., the component server.

        * cuts/arch/ccm/CCM_Servant.h:

          . Derived the object from ::PortableServer::ServantBase instead
            of ::POA_Components::CCMObject.

Wed Jun  3 21:45:15 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/CHAOS/transformation:
        * MDE/GME/paradigms/CHAOS/transformation/chaos2picml.xsl:
        * MDE/GME/paradigms/CHAOS/transformation/picml2chaos.xsl:

          . Transformation script for converting PICML models to CHAOS
            models and visa versa.

        * MDE/GME/paradigms/PICML/examples/SLICE.xme:

          . Just changed the name of the file.

        * MDE/GME/paradigms/PICML/examples/SLICE-cpu-bound.xme:

          Removed this file.

Wed Jun  3 21:11:41 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/CHAOS:
        * MDE/GME/paradigms/CHAOS/paradigms:
        * MDE/GME/paradigms/CHAOS/paradigms/CHAOS.xme:
        * MDE/GME/paradigms/CHAOS/paradigms/CHAOS.xmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Any.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ApplicationTask.gif:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Assembly.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/AttributeMapping.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Average.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/BandedConnection.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/BandedConnectionRef.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/BranchState.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Bridge.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Capability.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ComponentImplementationArtifact.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ComponentPackage.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ComponentProperty.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ComponentServantArtifact.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ComponentSet.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ConnectionBand.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Connector.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/DataType.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Discrete-Benchmark.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/DoWhileState.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Domain.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/EnvironmentConf.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ExternalReferenceEndPoint.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/FOU.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ForState.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ImplementationArtifact.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ImplementationArtifactReference.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ImplementationDependency.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ImplementationReference.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ImplementationRequirement.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/InputAction.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Interconnect.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Jitter.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Latency.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Max.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Min.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/MonolithicImplementation.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/MultiInputAction.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Node.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/NodeGroup.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/OutputAction.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PackageConfiguration.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PackageConfigurationReference.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PackageReference.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Periodic-Bench.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PolicySet.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PolicySetRef.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/PriorityModelPolicy.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Property.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/QueryAction.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/QueryInputAction.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/RPG.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/RTModel.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Requirement.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Resource.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ResourceContainer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/SatisfierProperty.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/SharedResource.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/SharedRiskGroup.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/SimpleThreadPool.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/State.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ThreadPoolLane.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ThreadPoolRef.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ThreadPoolWithLanes.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Throughput.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/TopLevelPackage.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/Trigger-Bench.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/WhileState.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/action.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/aggregate.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/aggregateref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/alias.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/aliasref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/attribute.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/boolean.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/boxed.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/boxedref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/byte.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/comp-proj.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/component.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/componentassembly.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/componentassemblyref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/componentfactory.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/componentfactoryref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/componentref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/composite.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/conjunction_group.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/const.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/discriminator.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/disjunction_group.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_dependency.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_event.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_option.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_proxy.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_proxy_consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_proxy_supplier.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_resource_factory.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_supplier.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ec_supplier_id.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/enum.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/enumref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/enumvalue.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/environment.gif:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/event.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/event_sink.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/event_source.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/eventref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/eventtype-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/eventtype.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/exception.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/exceptionref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/factory.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/file.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/fileref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/genericobject.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/genericvalue.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/genericvalueobject.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/getexception.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/in.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/inevent_lf.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/inevent_rt.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ineventport.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/inherits.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/inout.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/label.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/logical_and_group.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/long.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/lookup.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/lookupkey.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/member.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/multiinvocations.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_admin.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_config.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_constraint.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_event.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_filter-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_filter.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_option.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_proxy.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_proxy_consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_proxy_supplier.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_qos-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_qos.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_resource_factory-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_resource_factory.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/ns_supplier.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/object.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/objectref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/oneway.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/operationref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/out.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/outevent_lf.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/outevent_rt.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/outeventport.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/package.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/periodic.gif:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/private.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/project.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/providedrequestport.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/provider.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/readonlyattribute.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/realnumber.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/receptacle_lf.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/receptacle_rt.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/refarrow.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/requiredrequestport.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/return.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rt_info-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rt_info.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rtec_proxy_consumer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rtec_proxy_supplier.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rtec_resource_factory-port.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rtec_resource_factory.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/rtrequirements.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/servicelevels.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/setexception.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/setexceptionref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/sharedcomponentref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/short.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/string.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/supports.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/switchedaggregate.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/switchedaggregateref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/task.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/taskset.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/timer.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/twoway.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/typeencoding.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/typekind.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/value.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/valueref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/variablecollection.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/variablecollectionref.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/vertex.bmp:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/worker.gif:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/workerref.gif:
        * MDE/GME/paradigms/CHAOS/paradigms/icons/workspace.bmp:

          . Initial version of the CHAOS paradigm, which is just an extended
            version on PICML.

Wed Jun  3 18:58:10 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_Table_T.cpp:

          . Added support for handling 'publishes' connections specified
            in the deployment plan. We now have fully functiona servants,
            that can been integrated in CCM. The next step to create the
            component server.

        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:

          . Checkpointing the example.

Wed Jun  3 17:50:51 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/opensplice/OpenSplice.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_Subscriber_T.cpp:

          . Added support to the servant for handling 'emits'
            connections in a deployment plan.

        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/ModelDDSData_DDS.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:

          . Checkpointing the example.

Wed Jun  3 15:19:03 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_opensplice_ccm_stub.mpb:

          . Update the base projects.

        * cuts/arch/opensplice/OpenSplice_Traits_T.h:

          . Trait class for events.

        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.cpp:

          . Update the consumer to use the CUTS DDS trait class.

        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_ModelDDSDataC.cpp:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.cidl:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.mpc:

          . Checkpointing the example.

Wed Jun  3 07:44:45 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts_opensplice.mpb:
        * MPC/config/cuts_opensplice_ccm.mpb:
        * MPC/config/cuts_opensplice_ccm_skel.mpb:
        * MPC/config/cuts_opensplice_ccm_stub.mpb:
        * MPC/config/cuts_tcpip_ccm_stub.mpb:

          . Base project for building the integrated version.

        * cuts/arch/ccm/CCM_Context_T.h:
        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.cpp:

          . Fixed serveral compilation errors.

        * cuts/arch/dsto/DDS/dsto_dds.mpc.old:
        * cuts/arch/dsto/dsto.mpc.old:

          . Disabled the DSTO projects while integrating everthing!!

        * cuts/arch/opensplice:
        * cuts/arch/opensplice/OpenSplice.mpc:
        * cuts/arch/opensplice/OpenSplice.mpc~:
        * cuts/arch/opensplice/OpenSplice_ListenerBase.h:
        * cuts/arch/opensplice/OpenSplice_ListenerBase.h~:
        * cuts/arch/opensplice/OpenSplice_ListenerBase.cpp:
        * cuts/arch/opensplice/OpenSplice_export.h:
        * cuts/arch/opensplice/ccm:
        * cuts/arch/opensplice/ccm/Events.idl:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM.mpc:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_export.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_skel_export.h:
        * cuts/arch/opensplice/ccm/OpenSplice_CCM_stub_export.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer.cpp:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.h:
        * cuts/arch/opensplice/ccm/OpenSplice_EventConsumer_T.cpp:

          . Checkpoint the OpenSplice runtime architecture.

        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.mpc:

          . Checkpoint the OpenSplice example. Right now, we are able
            to build a partial servant that has a *easy* pattern to
            auto-generate.

        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/dsto.mpc:

          Removed these files.

Wed Jun  3 04:08:41 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.inl:
        * cuts/arch/ccm/CCM_Servant_T.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:

          . Moved the CCM-specific template code into the CCM
            project.

Wed Jun  3 03:12:07 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table_T.cpp:

          . Fixed build error related to moving cookie implementation.

Wed Jun  3 03:02:43 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Container_T.cpp:

          . Fixed compilation errors on non-Windows systems. This may also
            fix the run-time error that on Windows.

Wed Jun  3 01:15:02 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.h:
        * examples/arch/opensplice/SimpleExample/OpenSplice_SimpleComponent_svnt.cpp:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.cidl:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent_Base.mpc:

          . Checkpointing the example.

Wed Jun  3 01:12:41 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/SimpleComponent_Impl.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mwc:

          . Checkpointing the example.

        * examples/arch/opensplice/SimpleExample/SimpleComponent.mpc:
        * examples/arch/opensplice/SimpleExample/SubAppDDSComponent.idl:

          Removed these files.

Wed Jun  3 00:41:31 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Context_T.h:
        * cuts/arch/ccm/CCM_Context_T.inl:
        * cuts/arch/ccm/CCM_Context_T.cpp:

          . Moved the template context from TCP/IP.

        * cuts/arch/tcpip/ccm/TCPIP_CCM_Context_T.h:

          . Removed the export include file since it is not necessary
            for template files.

Wed Jun  3 00:24:11 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice/SimpleExample/ModelDDSData_Base.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.idl:
        * examples/arch/opensplice/SimpleExample/SimpleComponent.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mwc:

          . Checkpoint the example.

        * examples/arch/opensplice/SimpleExample/PubAppDDSComponent.idl:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mpc:
        * examples/arch/opensplice/SimpleExample/base.mpb:

          Removed these files.

Tue Jun  2 23:13:41 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/dsto/dsto.mpc:
        * cuts/arch/dsto/main.cpp:
        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/PubAppDDSComponent.idl:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mpc:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mwc:
        * examples/arch/opensplice/SimpleExample/SubAppDDSComponent.idl:
        * examples/arch/opensplice/SimpleExample/base.mpb:

          . Checkpoint the example.

        * examples/arch/opensplice/SimpleExample/DummyEvent.idl:

          Removed this file.

Tue Jun  2 22:29:04 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/dsto/DDS/dsto_dds.mpc:

          . Commited out the driver program.

Tue Jun  2 22:26:14 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/opensplice:
        * examples/arch/opensplice/SimpleExample:
        * examples/arch/opensplice/SimpleExample/DummyEvent.idl:
        * examples/arch/opensplice/SimpleExample/ModelDDSData.idl:
        * examples/arch/opensplice/SimpleExample/PubAppDDSComponent.idl:
        * examples/arch/opensplice/SimpleExample/SimpleExample.mpc:
        * examples/arch/opensplice/SimpleExample/SubAppDDSComponent.idl:

          . Slowly but surely moving the OpenSplice example to the
            cuts/examples directory. This will better help integrate the
            OpenSplice with DDS in CUTS.

        * cuts/arch/dsto/DDS/DummyEvent.idl:
        * cuts/arch/dsto/DDS/ModelDDSData.idl:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:

          Removed these files.

Tue Jun  2 22:12:11 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Cookie.h:
        * cuts/arch/ccm/CCM_Cookie.inl:
        * cuts/arch/ccm/CCM_Cookie.cpp:
        * cuts/arch/ccm/CUTS_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:

          . Moved the cookie implementation from the TCP/IP project to the
            CUTS CCM project.

        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.cpp:

          Removed these files.

Tue Jun  2 21:16:20 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Component_Impl_Generator.cpp:

          . Bug fix where the code generator failed to configure, register,
            and activate periodic events.

        * MPC/config/cuts_ccm.mpb:
        * MPC/config/cuts_tcpip_ccm.mpb:

          . Fixed build errors related to the base project missing
            some project specifications.

        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.h:
        * cuts/arch/ccm/CCM_Container_Strategy_T.inl:
        * cuts/arch/ccm/CCM_Container_Strategy_T.cpp:
        * cuts/arch/ccm/CCM_Container_T.h:
        * cuts/arch/ccm/CCM_Container_T.inl:
        * cuts/arch/ccm/CCM_Container_T.cpp:
        * cuts/arch/ccm/CCM_EventConsumer.h:
        * cuts/arch/ccm/CCM_EventConsumer.inl:
        * cuts/arch/ccm/CCM_EventConsumer.cpp:
        * cuts/arch/ccm/CCM_Servant.h:
        * cuts/arch/ccm/CCM_Servant.inl:
        * cuts/arch/ccm/CCM_Servant.cpp:
        * cuts/arch/ccm/CCM_Servant_T.h:
        * cuts/arch/ccm/CCM_Servant_T.inl:
        * cuts/arch/ccm/CCM_Servant_T.cpp:
        * cuts/arch/ccm/CCM_Single_Subscriber.h:
        * cuts/arch/ccm/CCM_Single_Subscriber.inl:
        * cuts/arch/ccm/CCM_Single_Subscriber.cpp:
        * cuts/arch/ccm/CCM_Subscriber_Table.h:
        * cuts/arch/ccm/CCM_Subscriber_Table.inl:
        * cuts/arch/ccm/CCM_Subscriber_Table.cpp:
        * cuts/arch/ccm/CCM_export.h:
        * cuts/arch/ccm/CUTS_CCM.mpc:

          . Factored out a LOT of the CCM code related to creating
            a component server.

        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container_Strategy.cpp:
        * cuts/arch/tcpip/server/server.mpc:

          . First complete implementation of TCP/IP for CCM that is able
            to deploy application using deployment plans generated from
            PICML.

        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/descriptors/HelloWorld.cdp:

          . Re-generated the example's code using an updated version of the
            model interpreter.

        * cuts/arch/ccm/CUTS_CIAO.mpc:

          Removed this file.

Tue Jun  2 04:50:19 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld.cidl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mwc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Base.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/models/HelloWorld.xme:

          . Regenerated the examples code using the fully functional
            CUTS model interpreter.

Tue Jun  2 04:48:40 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld.cidl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mwc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Common.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_exec_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_skel_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_stub_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt_export.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_stub_export.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt_export.h:
        * examples/arch/tcpip/HelloWorld/base.mpb:

          Removed these files.

Tue Jun  2 04:45:10 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:

          .  Changed the name decoration for the implementation file.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Project_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Workspace_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Workspace_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Workspace_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:
        * MPC/config/cuts_base.mpb:
        * MPC/config/cuts_codegen_defaults.mpb:

          . First complete version of the code generator for TCP/IP.

        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Common.mpc:

          . Updated the example.

        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:

          Removed this file.

Mon Jun  1 14:55:25 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager_T.cpp:

          . Bug fix in invoking CUTS_BE_Finalize_T.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Component_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:

          . Added support for generating the component's implementation using
            the CCM specification.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc.old:

          Removed this file.

Mon Jun  1 03:04:47 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.inl:

          . Bug fix where the CUTS_BE_Component_Impl_End_T implementation was
            missing.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:

          . Updated the implementation generator to use an architecture
            trait to enable backend generators to customize the architecture
            and behavior separately.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Implementation.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.cpp:

          . Factored out the C++ bindings of CCM so it can be reused
            across multiple projects.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Impl_Generator.cpp:

          Removed these files.

Sun May 31 23:08:49 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/ComponentConfig.h:

          . Updated the interpreter's name.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Env_Visitor_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Env_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Execution_Visitor_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Execution_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Manager_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Project_Generators_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Project_Generators_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Project_Generators_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Visitor_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Visitor_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Visitor_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generator_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generators_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generators_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Workspace_Generators_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_export.h:

          . Redesigned the backend generator architecture so that it
            better supports MIME's design goals.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/EISA/BE_EISA.mpc.old:

          . Disabled the EISA interpreter.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/Port_Manager_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/Port_Manager_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/Port_Manager_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/TIOA/TIOA.mpc.old:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/UDM_Abstract_Type_Dispatcher_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/UDM_Abstract_Type_Dispatcher_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/XML/XML.mpc.old:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/XML/XML_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/XML/XML_Generators.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/XML/XML_Generators.cpp:

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI.mpc.old:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Generators.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XML_Mapping_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XSD_File_Generator.cpp:

          . Disabled the CAPI interpreter until it is updated to the
            support the new backend generator architecture.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/CCM_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ccm/Component_Impl_Generator.cpp:

          . Move the variable type generator to the C++ backend
            generator project.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/BE_CIAO.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Proxy_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Proxy_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Component_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Event_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Include_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc.old:

          . Updated the generator to support the new backend generator
            architecture.

          . Temporarily disabled the generator so it can be updated to
            use the C++ backend generators for behavior.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Behavior_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/CUTS_BE_CPP.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Component_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Component_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Cpp.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Cpp.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Cpp_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Variable_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Variable_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/lang/cpp/Variable_Type.cpp:

          . Moved the reusable C++ generators from CIAO to this
            project.

        * MPC/config/cuts_be_ccm.mpb:
        * MPC/config/cuts_be_cpp.mpb:

          . Base projects for the backend generator.

        * MPC/config/requires_tcpip.mpb:

          . Base project for prevent inclusion of the TCP/IP project.

        * bin/cuts.config:

          . Moved the disabled backend generators.

        * default.features:

          . Updated the default features to exclude TCP/IP.

        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Re-generated the example using the CUTS model interpreter.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/EISA/BE_EISA.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/TIOA/TIOA.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/XML/XML.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_In_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_In_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_In_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Inout_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Inout_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Inout_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Out_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Out_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Out_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Retn_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Retn_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Retn_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits_Base.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits_Base.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Var_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Var_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Var_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/Port_Manager_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/Port_Manager_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/Port_Manager_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/natural-lang:
        * examples/arch/tcpip/HelloWorld/HelloWorld_impl_export.h:

          Removed these files.

Wed May 27 13:53:09 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/manual/appendix/thirdparty.tex:
        * docs/manual/manual.pdf:

          . Updated the documentation for XSC's build process.

Tue May 26 21:09:31 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/utils/Property_Evaluator_List_Actor_T.cpp:
        * cuts/utils/archiving/client/Test_Archive_Client.h:
        * cuts/utils/db/DB_Record.h:
        * cuts/utils/logging/server/Logging_Server.h:
        * cuts/utils/testing/Test_Configuration_File.h:
        * cuts/utils/testing/Test_Database.h:
        * cuts/utils/testing/svcs/summary/streams.h:

          . Fixed compile errors related to supporting versioned namespace
            variant of ACE+TAO+CIAO.

Tue May 26 04:48:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/manual/abstract.tex:
        * docs/manual/manual.pdf:

          . Updated the abstract for the user's manual.

Sat May 23 04:45:22 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * docs/manual/analysis:
        * docs/manual/analysis/analysis.tex:
        * docs/manual/analysis/unite.tex:
        * docs/manual/appendix:
        * docs/manual/appendix/appendix.tex:
        * docs/manual/appendix/thirdparty.tex:
        * docs/manual/install.tex:
        * docs/manual/manual.pdf:
        * docs/manual/manual.tex:

          . Updated the manual to include instructions on building and
            installing third-party libraries for CUTS.

Thu May 21 01:03:20 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Context_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Source_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:

          . Now able to generate a full servant from the model. This
            includes both the source and header files.

        * cuts/arch/ccm/CCM_Events_T.cpp:

          . Bug fix in compilation.

        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Updated the source code with the auto-generated code.

Wed May 20 21:46:54 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Context_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Context_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Include_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Servant_Header_Include_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:

          . The TCP/IP code generator is now able to generate code for
            the servant's header file.

        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:

          . Fixed compile errors in generated code.

        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt_export.h:

          . Generated the files using the TCP/IP code generator.

Wed May 20 13:51:49 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/java/logging/client/log4j/HelloWorld.datagraph:
        * examples/java/logging/client/log4j/HelloWorld.unite:

          . Added UNITE configurations for analyzing test results for
            this simple example.

Wed May 20 06:32:58 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/utils/logging/client/interceptors/log4j/cuts.log4j.build.xml:
        * examples/java/logging/client/log4j/HelloWorld.java:

          . Fixed build errors related to porting.

Wed May 20 06:05:51 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/utils/logging/client/interceptors/log4j/cuts/log4j/LoggingClientAppender.java:

          . Bug fix where the appender was not initializing the
            test logger properly.

        * cuts/java/workers/logging/CUTS/Logger.java:

          . Switched to using a fully qualified IOR when connecting
            to the test manager server.

          . Bug fix where the logger was connecting during its
            construction.

          . Bug fix where the logger was not properly started/stopped
            during creation/destruction.

        * examples/arch/tcpip/HelloWorld/HelloWorld.cidl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/models/HelloWorld.xme:

          . Updated the example to use more auto-generated code.

        * examples/java/logging/client/log4j/HelloWorld.java:
        * examples/java/logging/client/log4j/build.xml:
        * examples/java/logging/client/log4j/cutsnode.config:
        * examples/java/logging/client/log4j/cutstest.config:
        * examples/java/logging/client/log4j/log4j.properties:
        * examples/java/logging/client/log4j/logging.config:
        * examples/java/logging/client/log4j/run_test.pl:

          . Simple example illustrating the usage of the log4j appender,
            which connects to the CUTS logging facilities.

Tue May 19 22:57:03 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/icons:
        * MDE/GME/paradigms/CUTS/paradigm/icons/logformat.bmp:

          . Initial icon for log formats.

Tue May 19 21:34:30 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Generators_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Options.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/UDM_Abstract_Type_Dispatcher_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/UDM_Utility_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.h:

          . Updated the backend generator so that it contains a point-of-generation
            for the entrypoint of an implementation.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/BE_TCPIP_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Aggr_Member_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Aggr_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Event_Member_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Source_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Input_Stream_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Aggr_Member_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Aggr_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Event_Member_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Event_Member_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Source_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Output_Stream_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Header_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Source_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/Stub_Source_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/TCPIP_Manager_Factory.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip/tcpip.mpc:

          . First version of the code generator for TCP/IP. It is able to
            generate the stub source/header files.

        * bin/cuts.config:

          . Added TCPIP to the configuration.

        * examples/arch/tcpip/HelloWorld/models/HelloWorld.xme:

          . Updated the model to the latest version of PICML.

Tue May 19 04:02:57 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/examples/SLICE-cpu-bound.xme:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Graph_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Node.h:

          . Update the backend generator architecture to the latest
            version of PICML.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/BE_CIAO.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits_Base.cpp:

          . Updated the CIAO code generator to the latest version of CIAO/DAnCE.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Project_Generator.cpp:

          Removed these files.

Fri May 15 02:28:04 UTC 2009  Pooja Varshneya  <varshneya_p@local>

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.cpp:

          . Updated the CUTS interpreter files for configuration file
            generation.

Fri May 15 01:55:40 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/examples/SLICE-cpu-bound.xme:

          . Update the SLICE example to the latest version of
            PICML and DAnCE.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/BE_CIAO.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.cpp:
        * MPC/config/cuts_base.mpb:
        * MPC/config/cuts_cosmic.mpb:
        * MPC/config/cuts_coworker_exec.mpb:
        * MPC/config/cuts_coworker_skel.mpb:
        * MPC/config/cuts_coworker_stub.mpb:
        * MPC/config/cuts_stub.mpb:
        * cuts/arch/ccm/CCM_Events_T.h:
        * cuts/arch/ccm/CCM_Events_T.cpp:

          . Updated the CIAO code generator to the latest version of
            CIAO and the CUTS runtime architecture.

Thu May 14 19:41:57 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * examples/java:
        * examples/java/logging:

          . Moved the log4j example.

        * tests/cuts/java/logging:
        * tests/cuts/java/logging/client:
        * tests/cuts/java/logging/client/log4j:
        * tests/cuts/java/logging/client/log4j/HelloWorld.java:
        * tests/cuts/java/logging/client/log4j/cutsnode.config:
        * tests/cuts/java/logging/client/log4j/log4j.properties:
        * tests/cuts/java/logging/client/log4j/run_test.pl:

          Removed these files.

Thu May 14 19:35:20 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * CUTS_Runtime_Arch.mwc:

          . Fixed errors in the workspace specification. Right now, the
            ANT platform is removed.

        * cuts/java/utils/logging/client/interceptors/log4j/cuts.log4j.build.xml:
        * cuts/java/utils/logging/client/interceptors/log4j/cuts/log4j/LoggingClientAppender.java:
        * cuts/java/utils/logging/client/interceptors/log4j/log4j.mpc:

          . First version of CUTS's log4j appender.

        * cuts/java/workers/logging/CUTS/Logger.java:
        * cuts/java/workers/logging/TestLogger.build:

        * cuts/utils/Node_Daemon/Node_Daemon_i.cpp:

          . Bug fix where the test condition for parsing test was
            invalide.

        * tests/cuts/java/logging:
        * tests/cuts/java/logging/client:
        * tests/cuts/java/logging/client/log4j:
        * tests/cuts/java/logging/client/log4j/HelloWorld.java:
        * tests/cuts/java/logging/client/log4j/cutsnode.config:
        * tests/cuts/java/logging/client/log4j/log4j.properties:
        * tests/cuts/java/logging/client/log4j/run_test.pl:

          . Working example for using the CUTS's log4j appender.

Thu May 14 15:50:26 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/workers/logging/CUTS:

          . Moving the files.

        * cuts/java/workers/logging/cuts.new:
        * cuts/java/workers/logging/cuts.new/Logger.java:

          Removed these files.

Thu May 14 15:48:47 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/workers/logging/cuts.new:
        * cuts/java/workers/logging/cuts.new/Logger.java:

          . Moving the files.

        * cuts/java/workers/logging/cuts:
        * cuts/java/workers/logging/cuts/Logger.java:

          Removed these files.

Thu May 14 15:36:29 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/utils/logging/client/interceptors/log4j/log4j.mwc:

          Removed this file.

Thu May 14 15:30:21 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/arch:
        * cuts/java/arch/capi:

          . Moved the CAPI architecture under the Java directory.

        * cuts/arch/capi:
        * cuts/arch/capi/cuts:
        * cuts/arch/capi/cuts.java.jbi.build:
        * cuts/arch/capi/cuts/jbi:
        * cuts/arch/capi/cuts/jbi/JbiShutdownInterface.java:
        * cuts/arch/capi/cuts/jbi/JbiShutdownThread.java:
        * cuts/arch/capi/cuts/jbi/client:
        * cuts/arch/capi/cuts/jbi/client/JbiAnyEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiClient.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEventBase.java:
        * cuts/arch/capi/cuts/jbi/client/JbiPort.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:
        * cuts/arch/capi/cuts/jbi/deployment:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiClientApp.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiExecutionManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiNodeManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiPlanLauncher.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/mapping.xml:
        * cuts/arch/capi/cuts/jbi/idl:
        * cuts/arch/capi/cuts/jbi/idl/Application.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcess.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcessManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/Deployment.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ExecutionManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeManager.idl:
        * cuts/arch/capi/cuts/jbi/utils:
        * cuts/arch/capi/cuts/jbi/utils/ConnectionString.java:
        * cuts/arch/capi/cuts/jbi/utils/RegisterMioType.java:
        * cuts/arch/capi/cuts/jbi/utils/UserCredentials.java:

          Removed these files.

Thu May 14 15:25:17 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * CUTS_Runtime_Arch.mwc:

          . Added an exclude statement for ANT.

        * cuts/java/workers/logging/TestLogger.build:

          . Fixed errors in the build specification.

Thu May 14 15:10:37 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/workers/logging/TestLogger.build:

          . The build file for the test logger.

        * cuts/workers/logging/TestLogger.build:

          Removed this file.

Thu May 14 15:06:09 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/models/workers:
        * MDE/GME/paradigms/PICML/models/workers/CUTS_CPU_Worker.xme:
        * MDE/GME/paradigms/PICML/models/workers/TestLogger.xme:

          . Moved the WML models of the workload generators to a
            common location under the MDE directory.

        * cuts/workers/CPU/CUTS_CPU_Worker.xme:
        * cuts/workers/logging/TestLogger.xme:

          Removed these files.

Thu May 14 14:56:25 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/workers:
        * cuts/java/workers/logging:
        * cuts/java/workers/logging/cuts:

          . Moved the location of the TestLogger for Java.

        * cuts/workers/logging/CUTS:
        * cuts/workers/logging/CUTS/Logger.java:

          Removed these files.

Thu May 14 14:51:32 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/svcs/dbase/DB_Registry.mpc:
        * cuts/utils/antispam/antispam.mpc:
        * cuts/utils/logging/client/interceptors/acelog/ACE_Log_Interceptor.mpc:
        * cuts/utils/utils.mpc:

          . Fixed build errors on non-Windows systems.

Thu May 14 14:48:22 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * cuts/java/utils:
        * cuts/java/utils/logging:
        * cuts/java/utils/logging/client:
        * cuts/java/utils/logging/client/interceptors:
        * cuts/java/utils/logging/client/interceptors/log4j:
        * cuts/java/utils/logging/client/interceptors/log4j/cuts/log4j/LoggingClientAppender.java:
        * cuts/java/utils/logging/client/interceptors/log4j/log4j.mpc:

          . Separating the Java projects from the C++ projects.

        * cuts/utils/logging/client/interceptors/log4j:
        * cuts/utils/logging/client/interceptors/log4j/cuts:
        * cuts/utils/logging/client/interceptors/log4j/cuts/log4j:
        * cuts/utils/logging/client/interceptors/log4j/cuts/log4j/LoggingClientAppender.java:
        * cuts/utils/logging/client/interceptors/log4j/log4j.mpc:
        * cuts/utils/logging/client/interceptors/log4j/log4j.mwc:

          Removed these files.

Thu May 14 06:07:36 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * MPC/config/cuts4java.mpb:

          . Base projects for Java projects.

        * MPC/config/cuts_base.mpb:

          . Inserted common configurations.

        * MPC/config/cutslib.mpb:

          . Removed the acelib base project.

        * cuts/java/cuts.java.mpc:

          . Include the cuts4java base project.

        * cuts/utils/logging/client/interceptors/log4j:
        * cuts/utils/logging/client/interceptors/log4j/cuts:
        * cuts/utils/logging/client/interceptors/log4j/cuts/log4j:
        * cuts/utils/logging/client/interceptors/log4j/cuts/log4j/LoggingClientAppender.java:
        * cuts/utils/logging/client/interceptors/log4j/log4j.mpc:
        * cuts/utils/logging/client/interceptors/log4j/log4j.mwc:

          . Logging client intercepter for log4j.

Thu May 14 05:33:24 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:

          . Fixed build errors.

Thu May 14 05:26:45 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/server/server.cpp:
        * cuts/utils/Config_List_Parser_T.h:
        * cuts/utils/Property_Evaluator_Stream_Actor_T.cpp:
        * cuts/utils/Property_Evaluator_T.h:

          . Fixed compilation errors on non-Windows systems.

        * cuts/utils/antispam/Antispam_App.cpp:
        * cuts/utils/antispam/Component_Manager.cpp:
        * cuts/utils/antispam/Response_Time_Evaluator.h:
        * cuts/utils/antispam/Response_Time_Evaluator.cpp:
        * examples/PICML/AntiSPAM/descriptors/e2e/e2e-template-assembly1.antispam:
        * examples/PICML/AntiSPAM/descriptors/e2e/generate-DnC.sh:
        * examples/PICML/AntiSPAM/process.sh:

          . Fixed errors.

Thu May 14 05:08:47 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/descriptors/HelloWorld.cdp:

          . Descriptor generated from a PICML model.

        * examples/arch/tcpip/HelloWorld/descriptors/DeploymentPlan.cdp:

          Removed this file.

Thu May 14 04:26:23 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_test_logger.mpb:
        * cuts/utils/logging/client/interceptors/acelog/ACE_Log_Interceptor.mpc:

          . Defined a base project for the CUTS_Test_Logger.

Thu May 14 04:21:38 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/ccm/CCM_Component_T.h:
        * cuts/arch/ccm/CCM_Component_T.inl:
        * cuts/arch/ccm/CCM_Event_Handler_T.h:

          . Fixed include errors.

        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:

          . Updated the example to use the CUTS_CCM_Component_T template
            class. This will prevent the code generator from having to
            define all the required methods of a component.

Thu May 14 01:42:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.cpp:

          . Removed unnecessary comments.

        * examples/arch/tcpip/HelloWorld:
        * examples/arch/tcpip/HelloWorld/models:
        * examples/arch/tcpip/HelloWorld/models/HelloWorld.xme:

          . PICML model of the Hello, World TCP/IP example.

Wed May 13 21:51:38 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:

          . Bug fix where the UUID generator was not initialized.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Project_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Project_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Workspace_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Workspace_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_In_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Inout_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Out_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Preprocessor.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Proxy_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Proxy_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Retn_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits_Base.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Traits_Base.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao/CIAO_Var_Type.h:
        * cuts/utils/logging/client/interceptors/acelog/ACE_Log_Callback.h:
        * cuts/utils/logging/client/interceptors/acelog/ACE_Msg_Backend.h:

          . Fixed compilation errors related to moving files around.

        * cuts/workers/logging:
        * cuts/workers/Test_Logger:
        * cuts/workers/Test_Logger/CUTS:
        * cuts/workers/Test_Logger/CUTS/Logger.java:
        * cuts/workers/Test_Logger/Format_Parser.h:
        * cuts/workers/Test_Logger/Format_Parser.cpp:
        * cuts/workers/Test_Logger/TestLogger.build:
        * cuts/workers/Test_Logger/TestLogger.xme:
        * cuts/workers/Test_Logger/Test_Logger.h:
        * cuts/workers/Test_Logger/Test_Logger.cpp:
        * cuts/workers/Test_Logger/Test_Logger.mpc:
        * cuts/workers/Test_Logger/Test_Logger_export.h:
        * cuts/workers/Test_Logger/Test_Logger_i.h:
        * cuts/workers/Test_Logger/Test_Logger_i.cpp:

          Removed these files.

Wed May 13 19:48:20 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/SubApp.h:
        * cuts/arch/dsto/SubAppAdapter.h:
        * cuts/arch/dsto/DSTO_Adapter_T.h:
        * cuts/arch/dsto/DSTO_ContextBase.cpp:
        * cuts/arch/dsto/DSTO_AdapterBase.h:
        * cuts/arch/dsto/DSTO_ExecBase.h:
        * cuts/arch/dsto/DSTO_EventConsumer.cpp:
        * cuts/arch/dsto/PubAppAdapter.cpp:
        * cuts/arch/dsto/DDS/Listeners.cpp:
        * cuts/arch/dsto/DDS/DSTO_ListenerBase.cpp:
        * cuts/arch/dsto/DDS/DummyConsumer.h:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/DDS_Utility.h:
        * cuts/arch/dsto/DDS/DummyConsumer.cpp:
        * cuts/arch/dsto/DDS/Listeners.h:
        * cuts/arch/dsto/DDS/DSTO_ListenerBase.h:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDS.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/SubAppDDS.h:
        * cuts/arch/dsto/DDS/DDS_Utility.cpp:
        * cuts/arch/dsto/SubAppAdapter.cpp:
        * cuts/arch/dsto/DSTO_Adapter_T.cpp:
        * cuts/arch/dsto/PubApp.h:
        * cuts/arch/dsto/PubAppContext.h:
        * cuts/arch/dsto/DSTO_AdapterBase.cpp:
        * cuts/arch/dsto/dsto.mpc:
        * cuts/arch/dsto/DSTO_ExecBase.cpp:
        * cuts/arch/dsto/DSTO_ContextBase.h:
        * cuts/arch/dsto/DSTO_EventConsumer.h:
        * cuts/arch/dsto/PubAppAdapter.h:

          - Changed 'DSTO' namespace to 'CUTS_DSTO'.

          - Added 'CUTS_DDS' namespace to the DDS utility class
            declarations.

          - Added CUTS MPC base projects.

Wed May 13 16:46:34 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DummyConsumer.h:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/DDS_Utility.h:
        * cuts/arch/dsto/DDS/DummyConsumer.cpp:
        * cuts/arch/dsto/DDS/DummyEvent.idl:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSContext.cpp::
        * cuts/arch/dsto/DDS/PubAppDDS.h:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/SubAppDDS.h:
        * cuts/arch/dsto/DDS/driver.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:

          - Scoped DummyEvent IDL declaration with module CUTS_DDS, and
            updated references to this and related data types accordingly.

          - Separate MPC project to generate IDL and TypeSupport mappings
            for ModelDDSData IDL files.

          - Moved DDS publisher, subscriber, datawriter and datareader
            creation from {Pub,Sub}AppDDSAdapter constructors to
            SubAppDDSAdapter::get_consumer() and
            PubAppDDSContext::subscribe_app_op_recv().

          - Added newlines to the end of several header files.

Wed May 13 14:00:57 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Preprocessor.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/CAPI_Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/Set_Classpath_Script_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XML_Mapping_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XML_Mapping_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XSD_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/capi/XSD_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/ciao:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/arch/tcpip:

          . Changed the location of the files below.

          MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Manager_Factory.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Preprocessor.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Project_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Project_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_export.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/Register_Type_Script_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/Register_Type_Script_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/Set_Classpath_Script_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/Set_Classpath_Script_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XML_Mapping_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XML_Mapping_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/BE_CIAO.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Exec_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Exec_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Header_Traits.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_In_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_In_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_In_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Inout_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Inout_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Inout_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Manager.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Manager_Factory.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Manager_Factory.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Out_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Out_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Out_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Preprocessor.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Project_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Project_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Proxy_Header_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Proxy_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Retn_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Retn_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Retn_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Source_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Source_Traits.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Traits.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Traits.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Traits_Base.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Traits_Base.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Var_Type.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Var_Type.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/CIAO_Var_Type.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/Port_Manager_T.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/Port_Manager_T.inl:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/Port_Manager_T.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CIAO/UDM_CIAO_Export.h:

          Removed these files.

Wed May 13 06:58:49 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:

          . Made the code more consistent.

Wed May 13 06:54:28 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/client.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          Removed these files.

Wed May 13 06:51:57 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:

          Removed these files.

Wed May 13 06:47:23 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_OutputCDR.h:
        * cuts/arch/tcpip/TCPIP_OutputCDR.inl:
        * cuts/arch/tcpip/TCPIP_OutputCDR.cpp:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.cpp:
        * cuts/arch/tcpip/TCPIP_SPEC.h:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:

          . Improved the marshalling/unmarshalling code for events.

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:

          . Bug fix where all threads had not exited before the main
            application exited.

Wed May 13 06:23:03 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:
        * cuts/arch/tcpip/server/server.cpp:

          . Bug fix where the component server failed to exit when
            it received the shutdown notification.

Wed May 13 06:06:13 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.cpp:

          . Implemented the methods invoked during shutdown.

        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . The name of the component instance is now stored in
            the servant.

Wed May 13 05:05:08 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.cpp:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Cookie.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Subscriber_Table_T.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/descriptors/DeploymentPlan.cdp:

          . Added support for *publishes* connections.

        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:
        * cuts/arch/tcpip/server/server.mpc:

          . The component server now initializes its own valuetype factory
            objects instead of relying on CIAO. One step closer to decoupling
            the TCPIP architecture for CIAO.

        * cuts/arch/tcpip/server/TCPIP_CCM_Container.cpp:

          . Fixed debug output.

        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.cpp:

          Removed these files.

Tue May 12 21:42:29 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xmp:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_uml.xme:

          . Updated metamodel for CUTS_DSML

Tue May 12 20:04:11 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_T.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Moved more of the servant code into templates, which will
            further reduce the complexity of code generation.

          . Made the *dispatch* methods on the servant static. This
            will prevent the servant from accidentally calling those
            methods.

Tue May 12 18:23:55 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_OutputCDR.h:
        * cuts/arch/tcpip/TCPIP_OutputCDR.inl:
        * cuts/arch/tcpip/TCPIP_OutputCDR.cpp:

          . Missing source files.

Tue May 12 18:20:47 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_InputCDR.h:
        * cuts/arch/tcpip/TCPIP_InputCDR.inl:
        * cuts/arch/tcpip/TCPIP_InputCDR.cpp:

          . Added missing files.

        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Remote_Endpoint_T.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Pushed code that was originally in servant code for creating
            the connection into a template class. This will further reduce
            the complexity of the code generator.

Tue May 12 16:45:00 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Context_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Context_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Context_T.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:

          . Implemented a template base class for contexts.

        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:

          . Updated the example to use the template context class.

Tue May 12 16:28:01 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/README:

          Additional instructions about setting $LD_LIBRARY_PATH.

Tue May 12 15:00:12 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_ComponentServer.h:
        * cuts/arch/tcpip/TCPIP_ComponentServer.inl:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Servant_T.cpp:
        * cuts/arch/tcpip/server:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_App.cpp:
        * cuts/arch/tcpip/server/TCPIP_CCM_ComponentServer_Opts.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.h:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.inl:
        * cuts/arch/tcpip/server/TCPIP_CCM_Container.cpp:
        * cuts/arch/tcpip/server/server.mpc:
        * cuts/arch/tcpip/server/server.cpp:

          . First working version of the TCP/IP that can be deployed
            using DAnCE.

        * default.features:

          . Disabled OpenSplice.

        * cuts/utils/unite/unite.mpc:

          . Changed the name of the project since it clashes with
            the UNITE interpreter project.


        * examples/arch/tcpip/HelloWorld/HelloWorld.cidl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_skel_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_stub_export.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/base.mpb:
        * examples/arch/tcpip/HelloWorld/descriptors:
        * examples/arch/tcpip/HelloWorld/descriptors/DeploymentPlan.cdp:
        * examples/arch/tcpip/HelloWorld/descriptors/nodemap.dat:

          . First full working version of the HelloWorld example that
            can be deployed using DAnCE.

        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.inl:

          Removed these files.

Sun May 10 22:29:35 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.cpp:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xmp:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_uml.xme:

          . Fixed design errors in the metamodel that was preventing
            the UNITE interpreter from working correctly.

Sun May 10 21:41:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xmp:

          . Binary version of the CUTS paradigm.

        * MDE/GME/paradigms/CUTS/paradigm/CUTS_export.h:
        * MDE/GME/paradigms/CUTS/paradigm/cuts_uml.xme:

          Removed these files.

Sun May 10 18:52:23 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS_export.h:

          Restoring the file to previous version

        * MPC/config/cuts_dsml.mpb:

          Updated the file for linker error

Sun May 10 00:09:43 UTC 2009  Pooja Varshneya  <varshneya_p@local>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS_DSML.mpc:

          Removed -g option for udmflags

Sat May  9 23:59:21 UTC 2009  Pooja Varshneya  <varshneya_p@local>


        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:

          Removed the export symbol

        * MDE/GME/paradigms/CUTS/paradigm/CUTS_export.h:

          Updated to remove linking error

Thu May  7 19:42:57 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/CUTS_UNITE.reg:

          Added file for registration

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/CUTS_UNITEd.reg:

          Added file for registration

Thu May  7 18:14:36 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:

          Updated file as per changes in the model

        * MDE/GME/paradigms/CUTS/paradigm/cuts_uml.xme:

          Updated file as per changes in the model

Wed May  6 21:20:31 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/cuts_uml.xme:

          Added files for CUTS DSML

Wed May  6 20:15:13 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DDS_Utility.h:

          Wrapped type name passed to register_topic() with
          CORBA::string_dup, since it is for now a hard-coded
          string constant and not the return value from
          get_type_name().

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Removed unused code.

        * cuts/arch/dsto/DDS/driver.cpp:

          Added newline at the end of the file.

        * cuts/arch/dsto/DDS/README:

          New file.

Wed May  6 20:10:04 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MPC/config/cuts_dsml.mpb:

         Added base project for CUTS DSML

Wed May  6 19:49:16 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/run_test.pl:

          New file.

Wed May  6 19:33:04 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Updated the workspace to add CUTS_UNITE interpreter

        * MDE/GME/paradigms/CUTS:

          Added folder for CUTS DSML

        * MDE/GME/paradigms/CUTS/addons:
        * MDE/GME/paradigms/CUTS/interpreters:

        * MDE/GME/paradigms/CUTS/interpreters/UNITE:

          UNITE interpreter contains files for CUTS_UNITE interpreter

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/ComponentConfig.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/StdAfx.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/StdAfx.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UNITE.mpc:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmApp.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmApp.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmConfig.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/resource.h:

        * MDE/GME/paradigms/CUTS/paradigm:

          Folder containing CUTS DSML files

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_DSML.mpc:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_export.h:

Wed May  6 18:36:51 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DummyConsumer.idl:
        * cuts/arch/dsto/DDS/DummyEvent.idl:

          Renamed DummyConsumer.idl as DummyEvent.idl.

        * cuts/arch/dsto/DDS/DummyConsumer.h:
        * cuts/arch/dsto/DDS/DummyConsumer.cpp:

          New files, containing the implementation of the
          DummyConsumer interface.

        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:

          Changes resulting from the above.

Wed May  6 16:37:37 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/ModelDDSData_EV.idl:
        * cuts/arch/dsto/DDS/DummyConsumer.idl:

          Renamed ModelDDSData_EV.idl as DummyConsumer.idl,
          and moved it to the DDS_Utilities project.

        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSContext.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/driver.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:

         - Changes resulting from the file rename above.

         - Added override of get_consumer() to SubAppDDSAdapter,
           so a DummyConsumer reference can be generated directly
           and returned, without storing it in the consumer table.

Tue May  5 22:24:49 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/requires_opensplice.mpb:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:

          . Added base project that adds 'opensplice' to the requires
            project attribute. This will prevent building OpenSplice
            projects in CUTS is OpenSplice is not installed.

Tue May  5 19:17:57 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cp:

          Added overlooked call to populate_consumer_table().

Tue May  5 19:12:00 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Restored mechanism to populate the event consumer table.

Tue May  5 18:33:18 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Added init() call for DDS_Utility subscriber member,
          and expanded error reporting for this call on both pub
          and sub sides.

Tue May  5 17:33:06 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DDS_Utility.h:

          Temporary workaround for the fact that OpenSpliceDDS's
          register_type() won't accept any scoping in the type name.

Mon May  4 19:53:08 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/dsto_dds.mpc:

          Fixed typo in library name.

Mon May  4 19:40:48 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/SubApp.cpp:
        * cuts/arch/dsto/DDS/SubAppDDS.cpp:

          Fixed case errors in #includes.

Mon May  4 19:15:48 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/PubAppDDS.cpp:
        * cuts/arch/dsto/DDS/SubAppDDS.cpp:
        * cuts/arch/dsto/DDS/PubAppDDS.h:
        * cuts/arch/dsto/DDS/SubAppDDS.h:

          New files.

        * cuts/arch/dsto/PubApp.cpp:

          Fixed case error in #include

Thu Apr 30 18:28:26 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:

          . Simplified the servant code.

Thu Apr 30 18:19:46 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_ComponentServer.h:
        * cuts/arch/tcpip/TCPIP_ComponentServer.inl:
        * cuts/arch/tcpip/TCPIP_ComponentServer.cpp:
        * cuts/arch/tcpip/TCPIP_Connector.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.inl:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.cpp:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.inl:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.cpp:

          . Extracted the *endpoint* code for connecting to a remote
            client and sending events into a reusable class.

        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:

          . Updated the example to use the CUTS_TCPIP_Remote_Endpoint
            classes.

Thu Apr 30 17:50:40 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/*.*:

          New subdirectory, containing a copy of the original DSTO example,
          modified to use OpenSpliceDDS to send the data instead of
          using CORBA eventtypes.

Thu Apr 30 16:06:00 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.cpp:

          . Bug fix where using INADDR_ANY or INADDR6_ANY for the TCPIP
            acceptor did not return the right address for the event consumer's
            endpoint.

        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:

          . Separated the component server's active object from the
            actual component server.

Thu Apr 30 15:21:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Implemented a basic TCPIP component server, which the TCPIP
            CCM component server extends.

        * cuts/utils/utils.mpc:

          . Removed an obsolete source file.

Thu Apr 30 07:22:06 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_tcpip_ccm.mpb:
        * MPC/config/cuts_tcpip_ccm_skel.mpb:
        * MPC/config/cuts_tcpip_ccm_stub.mpb:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/ccm:
        * cuts/arch/tcpip/ccm/Events.idl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_export.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_skel_export.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_stub_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . First prototype of TCPIP component that is able to send
            and receive events.

          . Update the example to have a *simple* component server that
            goes through the component's lifecycle methods.

Thu Apr 30 01:07:06 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Component.h:
        * cuts/arch/tcpip/TCPIP_Component.inl:
        * cuts/arch/tcpip/TCPIP_Component.cpp:
        * cuts/arch/tcpip/TCPIP_Context.h:
        * cuts/arch/tcpip/TCPIP_Context.inl:
        * cuts/arch/tcpip/TCPIP_Context.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * cuts/arch/tcpip/TCPIP_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Added the notion of a *context* to the components.

Wed Apr 29 23:28:29 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Connector.h:
        * cuts/arch/tcpip/TCPIP_Connector.inl:
        * cuts/arch/tcpip/TCPIP_Connector.cpp:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.h:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.inl:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.cpp:

          . Initial implementation of the TCPIP connector used by the
            client components.

        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:

          . Removed dead code.

        * examples/arch/tcpip/HelloWorld/client.cpp:

          . Updated the example to use the CUTS_TCPIP_CONNECTOR.

Tue Apr 28 23:20:28 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/plugins/cute/CUTE.mpc:
        * MDE/GME/plugins/cute/CUTE_Dialog.h:
        * MDE/GME/plugins/cute/CUTE_Dialog.inl:
        * MDE/GME/plugins/cute/CUTE_Dialog.cpp:
        * MDE/GME/plugins/cute/CUTS_CUTE.rc:
        * MDE/GME/plugins/cute/Interpreter_List.h:
        * MDE/GME/plugins/cute/Model_Interpreter.h:
        * MDE/GME/plugins/cute/Model_Interpreter.inl:
        * MDE/GME/plugins/cute/Model_Interpreter.cpp:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.h:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.inl:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.cpp:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.h:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.inl:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.cpp:
        * MDE/GME/plugins/cute/Property_Element_Map.h:
        * MDE/GME/plugins/cute/Property_Locator.h:
        * MDE/GME/plugins/cute/Property_Locator.inl:
        * MDE/GME/plugins/cute/Property_Locator.cpp:
        * MDE/GME/plugins/cute/RawComponent.h:
        * MDE/GME/plugins/cute/RawComponent.cpp:

          . First prototype/implementation of CUTE for GME.

Tue Apr 28 13:42:49 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_template.mpb:

          Removed this file.

Tue Apr 28 13:32:34 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/Config_List_Parser_T.cpp:

          . Removed an include.

Tue Apr 28 13:22:58 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/Config_List_Parser_T.h:
        * cuts/utils/Config_List_Parser_T.inl:
        * cuts/utils/Config_List_Parser_T.cpp:
        * cuts/utils/template/File_Generator.h:
        * cuts/utils/template/Template_App.cpp:
        * cuts/utils/template/cutstmpl.mpc:
        * cuts/utils/utils.mpc:

          . Moved the configuration list parser to the cuts/utils
            directory so it can be reused.

          . Parameterized the configuration list parser so different
            applications can leverage configuration list parser.

        * cuts/utils/template/Template_Config_Handler.h:
        * cuts/utils/template/Template_Config_Handler.inl:
        * cuts/utils/template/Template_Config_Handler.cpp:
        * cuts/utils/template/Template_Config_List_Parser.h:
        * cuts/utils/template/Template_Config_List_Parser.inl:
        * cuts/utils/template/Template_Config_List_Parser.cpp:

          Removed these files.

Tue Apr 28 12:00:56 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/models/CAPI.xme:
        * MDE/GME/paradigms/PICML/models/XMLSchema.xme:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Updated the model to the latest version of PICML.

Fri Apr 24 21:35:28 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Project_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.cpp:

          . Bug fix where the generated code for getting the metadata
            of an event in object format was incorrect.

          . Added 'debug' and 'debuglevel' flags to the generated
            ANT scripts.

        * MDE/GME/plugins:

        * MDE/GME/plugins/cute:

        * MDE/GME/plugins/cute/CUTE.ico:
        * MDE/GME/plugins/cute/CUTE.mpc:
        * MDE/GME/plugins/cute/CUTE_Dialog.h:
        * MDE/GME/plugins/cute/CUTE_Dialog.inl:
        * MDE/GME/plugins/cute/CUTE_Dialog.cpp:
        * MDE/GME/plugins/cute/CUTS_CUTE.rc:
        * MDE/GME/plugins/cute/CUTS_CUTEd.reg:
        * MDE/GME/plugins/cute/ComponentConfig.h:
        * MDE/GME/plugins/cute/Property_Locator.h:
        * MDE/GME/plugins/cute/Property_Locator.inl:
        * MDE/GME/plugins/cute/Property_Locator.cpp:
        * MDE/GME/plugins/cute/RawComponent.h:
        * MDE/GME/plugins/cute/RawComponent.cpp:
        * MDE/GME/plugins/cute/resource.h:
        * MDE/GME/plugins/cute/stdafx.h:
        * MDE/GME/plugins/cute/stdafx.cpp:
        * MDE/GME/plugins/cute/Windows_Registry.cpp:
        * MDE/GME/plugins/cute/Windows_Registry.h:
        * MDE/GME/plugins/cute/Windows_Registry.inl:

          . Checkpoint CUTE. Right now, it is able to open a dialog
            so end-users can select a template configuration, and
            show all the intepreters for the current parasdigm. It also
            has code that will gather all the elements that have a
            template parameter.

Thu Apr 23 20:20:42 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/main.cpp:

          Added comments explaining why cleanup code is
          commented out.

        * cuts/arch/dsto/PubAppAdapter.cpp:

          Fixed typos.

        * cuts/arch/dsto/SubApp.cpp:

          Minor change to debugging output.

Thu Apr 23 19:12:40 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/PubAppAdapter.cpp:
        * cuts/arch/dsto/PubApp.h:
        * cuts/arch/dsto/PubApp.cpp:
        * cuts/arch/dsto/PubAppAdapter.h:

          - Added a duplication of the PubApp pointer in
            the extern "C" method to create the PubAppAdpater,
            before it is passed to the PubAppAdpater constructor.
            The pointer to the PubApp instance passed into this
            method belongs to a _var in the middleware, and so
            was having its refcount go to 0 at initialization time.

          - Removed debugging methods and code from PubApp
            and PubAppAdapter.

          - Added a destructor to PubAppAdpater, where the
            context and 'executor' allocations are cleaned up.

Thu Apr 23 01:55:35 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:

          . Bug fix where the source was not publihsing data. The line of
            code that published the data was removed a LONG time ago on
            accident.

        * cuts/utils/Property_Evaluator_List_Actor.h:
        * cuts/utils/Property_Evaluator_List_Actor.inl:
        * cuts/utils/Property_Evaluator_List_Actor.cpp:
        * cuts/utils/Property_Evaluator_List_Actor_T.cpp:
        * cuts/utils/utils.mpc:

          . Implemented an actor strategy for creating a list of all the
            template parameters in a string of text.

Tue Apr 21 20:14:38 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_ORB.cpp:

          . Fixed compilation error.

Tue Apr 21 20:11:18 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_SPEC.h:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.cpp:
        * cuts/arch/tcpip/TCPIP_Var_T.h:
        * cuts/arch/tcpip/TCPIP_Var_T.inl:
        * cuts/arch/tcpip/TCPIP_Var_T.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_impl_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/client.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . First successful implementation of the TCP/IP that
            can create servers/servants and receive events.

Tue Apr 21 16:49:14 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/gme_base.mpb:

          . Updated base project to include later version of Visual Studio
            and disabled some compile flags.

        * cuts/utils/Command_Substitution.h:
        * cuts/utils/Command_Substitution.cpp:
        * cuts/utils/Node_Daemon/Node_Daemon_i.cpp:
        * cuts/utils/Property_Evaluator_Stream_Actor.h:
        * cuts/utils/Property_Evaluator_Stream_Actor.inl:
        * cuts/utils/Property_Evaluator_Stream_Actor.cpp:
        * cuts/utils/Property_Evaluator_Stream_Actor_T.cpp:
        * cuts/utils/Property_Evaluator_T.h:
        * cuts/utils/Property_Evaluator_T.inl:
        * cuts/utils/Property_Evaluator_T.cpp:
        * cuts/utils/Text_Processor.h:
        * cuts/utils/Text_Processor.inl:
        * cuts/utils/Text_Processor.cpp:
        * cuts/utils/Text_Processor_T.cpp:
        * cuts/utils/template/File_Generator.cpp:
        * cuts/utils/template/Template_App.cpp:
        * cuts/utils/testing/Test_Configuration_File.cpp:
        * cuts/utils/utils.mpc:

          . Updated the property evaluator so that is can be strategized
            with application-specific actors.

          . Added support for customizing the open/close tags for properties
            in a template file. The default is still ${}.

        * cuts/utils/Property_Expander.h:
        * cuts/utils/Property_Expander.cpp:

          Removed these files.

Mon Apr 20 01:15:03 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/UUID.cpp:

          . Updated the UUID to support updates to ACE_Utils::UUID.

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_exec_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_stub_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Checkpointing the TCPIP architecture for CUTS. The servant framework
            is almost complete. Working the executor framework.

Fri Apr 17 17:56:09 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_tcpip.mpb:
        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:

          . Bug fixed where the servant failed to initialize its
            virtual table.

        * examples/arch:
        * examples/arch/tcpip:
        * examples/arch/tcpip/HelloWorld:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mwc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt_export.h:
        * examples/arch/tcpip/HelloWorld/base.mpb:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          .Simple HelloWorld example for TCP/IP.

        * tests/cuts/arch:
        * tests/cuts/arch/tcpip:
        * tests/cuts/arch/tcpip/TCPIP_ORB_Test.cpp:
        * tests/cuts/arch/tcpip/tests.mpc:

          . Unit test for the TCP/IP architecture.

        * cuts/arch/tcpip/TCPIP_Acceptor_T.h:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.cpp:

          Removed these files.

Fri Apr 17 15:31:19 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/*.*:

          New example - pub and sub applications, built as executors
          in a stripped-down version of a CIAO component, pass a
          message via CORBA eventtype. Files include replacement
          CIAO base classes, basic type conversion between native
          data type and CORBA eventtype, plus files that will
          ultimately be generated by a GME model interpreter
          (hand-crafted for now) that handle type-specific data
          conversion and play the roles of CCM servant and
          context. CORBA-only message passing for now, ultimately
          DDS and tcp/ip alternatives will be added.

Fri Apr 17 06:17:01 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip:
        * cuts/arch/tcpip/TCPIP.h:
        * cuts/arch/tcpip/TCPIP.cpp:
        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Acceptor.h:
        * cuts/arch/tcpip/TCPIP_Acceptor.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor.cpp:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.h:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.cpp:
        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.inl:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_Object.h:
        * cuts/arch/tcpip/TCPIP_Object.inl:
        * cuts/arch/tcpip/TCPIP_Object.cpp:
        * cuts/arch/tcpip/TCPIP_Object_T.h:
        * cuts/arch/tcpip/TCPIP_Object_T.inl:
        * cuts/arch/tcpip/TCPIP_Object_T.cpp:
        * cuts/arch/tcpip/TCPIP_SPEC.h:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant.inl:
        * cuts/arch/tcpip/TCPIP_Servant.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:
        * cuts/arch/tcpip/TCPIP_export.h:
        * cuts/arch/tcpip/config-default.h:

          . Checkpoint the TCP/IP component-based architecture.

Thu Apr 16 23:11:58 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/utils/ConnectionString.java:
        * cuts/arch/capi/cuts/jbi/utils/RegisterMioType.java:
        * cuts/arch/capi/cuts/jbi/utils/UserCredentials.java:

          . Bug fix where the packages where inconsistent with the
            directory structure.

Thu Apr 16 22:15:00 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/dsto:

          . Sandbox for the DSTO work.

Thu Apr 16 18:41:55 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_ciao_stub.mpb:
        * cuts/BDC/Benchmark_Data_Collector.mpc:

          . Fixed build errors on non-Windows systems.

Thu Apr 16 17:23:54 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/utils/calibrate/Calibrate_App.cpp:
        * cuts/utils/calibrate/Calibrate_Options.h:
        * cuts/workers/CPU/CPU_Worker_T.h:
        * cuts/workers/CPU/CPU_Worker_T.cpp:

          . Added support for sending command-line arguments to the
            calibration.

Thu Apr 16 17:09:43 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/calibrate/Calibrate_App.h:
        * cuts/utils/calibrate/Calibrate_App.cpp:

          . Added --help command-line option.

Thu Apr 16 17:00:25 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/calibrate/Calibrate_App.h:
        * cuts/utils/calibrate/Calibrate_App.inl:
        * cuts/utils/calibrate/Calibrate_App.cpp:
        * cuts/utils/calibrate/Calibrate_Options.h:
        * cuts/utils/calibrate/calibrate.cpp:
        * cuts/utils/calibrate/calibrate.mpc:

          . Re-designed the application so that uses a C++ application
            object instead of C functions.

Wed Apr 15 06:18:21 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/models/CAPI.xme:
        * MDE/GME/paradigms/PICML/models/XMLSchema.xme:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Upgraded models to latest version of PICML.

        * install/CUTS_CoSMIC.wxs:
        * install/CUTS_CoSMIC_installers.mpc:
        * install/CUTS_PICML.wxs:

          . Included example models in installer.

          . The installer updates all GME models, if necessary, as part
            of the build process.

Wed Apr 15 03:56:23 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/unite/Unite_App.cpp:

          . Bug fix where the application crashed if the configuration
            did not contain any services.

Tue Apr 14 23:07:42 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:

          . Removed dead code.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.cpp:

          . Added modeling support for the dynamic source/sink capabilities
            recently added to the CAPI runtime architecture.

        * MDE/GME/paradigms/PICML/models/CAPI.xme:

          . Common reusable artifacts for the CAPI code generator.

        * MDE/GME/paradigms/PICML/models/examples:
        * MDE/GME/paradigms/PICML/models/examples/capi:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Simple example that illustrates usage of the JbiAnyEvent.

Tue Apr 14 20:07:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/client/JbiAnyEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEventBase.java:
        * cuts/arch/capi/cuts/jbi/client/JbiPort.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:

          . Added support the dynamic source/sinks (i.e., ones that can
            be configured at runtime, and any events (i.e., events that
            are not bound to a static type). Using such events, however,
            does not enable support for manipulating an event's metadata.

Tue Apr 14 18:50:11 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:

          . Updated the code generator to be consistent with the lastest
            version of CUTS runtime architecture for the CAPI.

Tue Apr 14 18:34:55 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts.java.jbi.build:
        * cuts/arch/capi/cuts/jbi/client/JbiClient.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:

          . Added support for changing the predicate at runtime, i.e.,
            after the client has been activated.

Tue Apr 14 17:38:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/capi/ExecutionManager.bat:
        * bin/capi/ExecutionManager.sh:
        * bin/capi/NodeManager.bat:
        * bin/capi/NodeManager.sh:
        * bin/capi/PlanLauncher.bat:
        * bin/capi/PlanLauncher.sh:
        * bin/capi/RegisterMioType.sh:
        * bin/capi/SingleProcess.bat:
        * bin/capi/SingleProcess.sh:

          . Updated the classpath to contain the new name for the
            CUTS CAPI jarfile.

Tue Apr 14 17:33:12 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/capi:

          . Changed the name of the directory to be in sync with the
            runtime architecture's directory.

        * bin/jbi:
        * bin/jbi/ExecutionManager.bat:
        * bin/jbi/ExecutionManager.sh:
        * bin/jbi/NameService.bat:
        * bin/jbi/NameService.sh:
        * bin/jbi/NodeManager.bat:
        * bin/jbi/NodeManager.sh:
        * bin/jbi/PlanLauncher.bat:
        * bin/jbi/PlanLauncher.sh:
        * bin/jbi/RegisterMioType.sh:
        * bin/jbi/SingleProcess.bat:
        * bin/jbi/SingleProcess.sh:

          Removed these files.

Tue Apr 14 17:29:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi:
        * cuts/arch/capi/cuts:
        * cuts/arch/capi/cuts.java.jbi.build:
        * cuts/arch/capi/cuts/jbi:
        * cuts/arch/capi/cuts/jbi/JbiShutdownInterface.java:
        * cuts/arch/capi/cuts/jbi/JbiShutdownThread.java:
        * cuts/arch/capi/cuts/jbi/client/JbiClient.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiPort.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiClientApp.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiExecutionManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiNodeManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiPlanLauncher.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/idl/Application.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcess.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcessManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/Deployment.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ExecutionManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeManager.idl:

          . Moved the CAPI runtime architecture to the cuts/arch/capi
            directory to be consistent with the other supported architectures.

        * etc/ANT/include/cuts.build:

          . Updated the pathelement for the cuts.java.capi.jar.

        * cuts/java/CUTS/jbi:
        * cuts/java/CUTS/jbi/JbiShutdownInterface.java:
        * cuts/java/CUTS/jbi/JbiShutdownThread.java:
        * cuts/java/CUTS/jbi/client:
        * cuts/java/CUTS/jbi/client/JbiClient.java:
        * cuts/java/CUTS/jbi/client/JbiEvent.java:
        * cuts/java/CUTS/jbi/client/JbiPort.java:
        * cuts/java/CUTS/jbi/client/JbiSink.java:
        * cuts/java/CUTS/jbi/client/JbiSource.java:
        * cuts/java/CUTS/jbi/deployment:
        * cuts/java/CUTS/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/CUTS/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/DomainApplicationImpl.java:
        * cuts/java/CUTS/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/JbiClientApp.java:
        * cuts/java/CUTS/jbi/deployment/JbiExecutionManager.java:
        * cuts/java/CUTS/jbi/deployment/JbiNodeManager.java:
        * cuts/java/CUTS/jbi/deployment/JbiPlanLauncher.java:
        * cuts/java/CUTS/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/CUTS/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/NodeManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/mapping.xml:
        * cuts/java/CUTS/jbi/idl:
        * cuts/java/CUTS/jbi/idl/Application.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationProcess.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationProcessManager.idl:
        * cuts/java/CUTS/jbi/idl/Deployment.idl:
        * cuts/java/CUTS/jbi/idl/DomainApplication.idl:
        * cuts/java/CUTS/jbi/idl/DomainApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/ExecutionManager.idl:
        * cuts/java/CUTS/jbi/idl/NodeApplication.idl:
        * cuts/java/CUTS/jbi/idl/NodeApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/NodeManager.idl:
        * cuts/java/CUTS/jbi/utils:
        * cuts/java/CUTS/jbi/utils/ConnectionString.java:
        * cuts/java/CUTS/jbi/utils/RegisterMioType.java:
        * cuts/java/CUTS/jbi/utils/UserCredentials.java:
        * cuts/java/cuts.java.jbi.build:

          Removed these files.

Tue Apr 14 16:55:59 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/cuts.java.build:

          . Fixed build errors related to location of the IDL files.

Tue Apr 14 16:52:47 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_Runtime_Arch.mwc:

          . Update the workspace to exclude Java-based projects unless
            ANT is specified as the build engine.

Tue Apr 14 16:33:37 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_archiving_skel.mpb:
        * MPC/config/cuts_archiving_stub.mpb:
        * MPC/config/cuts_barrier_skel.mpb:
        * MPC/config/cuts_barrier_stub.mpb:
        * MPC/config/cuts_bdcsvc.mpb:
        * MPC/config/cuts_ciao_stub.mpb:
        * MPC/config/cuts_db.mpb:
        * MPC/config/cuts_lib.mpb:
        * MPC/config/cuts_logging_client_skel.mpb:
        * MPC/config/cuts_logging_skel.mpb:
        * MPC/config/cuts_logging_stub.mpb:
        * MPC/config/cuts_skel.mpb:
        * MPC/config/cuts_stub.mpb:
        * MPC/config/cuts_testing_skel.mpb:
        * MPC/config/cuts_testing_stub.mpb:
        * MPC/config/cutsexe.mpb:
        * MPC/config/cutslib.mpb:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/Benchmark_Agent_i.h:
        * cuts/CUTS.mpc:
        * cuts/CUTS_i.h:
        * cuts/UUID.h:
        * cuts/arch/ccm/CUTS_CIAO.mpc:
        * cuts/idl/CUTS.idl:
        * cuts/idl/CUTS.mpc:
        * cuts/idl/CUTS_skel_export.h:
        * cuts/idl/CUTS_stub_export.h:
        * cuts/idl/TimeValue.idl:
        * cuts/idl/UUID.idl:
        * cuts/idl/exceptions.idl:
        * cuts/idl/performance.idl:
        * cuts/performance_i.h:
        * cuts/utils/archiving/archiving.idl:
        * cuts/utils/archiving/archiving.mpc:
        * cuts/utils/archiving/client/cutsarc.mpc:
        * cuts/utils/archiving/server/cutsarc_d.mpc:
        * cuts/utils/barrier/barrier.mpc:
        * cuts/utils/barrier/client/barrier.mpc:
        * cuts/utils/barrier/server/barrier_d.mpc:
        * cuts/utils/calibrate/calibrate.mpc:
        * cuts/utils/db/DB.mpc:
        * cuts/utils/logging/client/client.mpc:
        * cuts/utils/logging/logging.idl:
        * cuts/utils/logging/logging.mpc:
        * cuts/utils/logging/server/server.mpc:
        * cuts/utils/testing/svcs/logging/logging.mpc:
        * cuts/utils/testing/svcs/server/server.mpc:
        * cuts/utils/testing/svcs/server/testing.idl:
        * cuts/workers/CPU/CPU_Worker.mpc:
        * cuts/workers/Test_Logger/Test_Logger.mpc:
        * cuts/workers/dbase/Database_Worker.mpc:
        * cuts/workers/memory/Memory_Worker.mpc:
        * MPC/config/cuts.mpb:

          . Moved all the runtime IDL files to cuts/idl. This force much
            needed refactoring of the project builds to ensure the CORBA
            related projects are included by default in the non-runtime
            projects, such as the modeling and analysis.

        * cuts/CUTS.idl:
        * cuts/TimeValue.idl:
        * cuts/UUID.idl:
        * cuts/exceptions.idl:
        * cuts/performance.idl:

          Removed these files.

Tue Apr 14 04:01:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.cpp:

          . Removed all dependency on xerces.

Mon Apr 13 22:26:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Main_Dialog.cpp:

          . Fixed compilation errors related the XSC updates.

        * cuts/idl:

          . Location of all CUTS IDL files.

Mon Apr 13 22:12:17 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/mpi:

          . Move the MPI backend to the architecture directory.

        * cuts/MPI:
        * cuts/MPI/CUTS_MPI.mpc:
        * cuts/MPI/Datatype_Port_Manager.h:
        * cuts/MPI/Datatype_Port_Manager.inl:
        * cuts/MPI/Datatype_Port_Manager.cpp:
        * cuts/MPI/MPI_Env.h:
        * cuts/MPI/MPI_Env.inl:
        * cuts/MPI/MPI_Env.cpp:
        * cuts/MPI/mpi.cpp:
        * cuts/MPI/mpi_export.def:

          Removed these files.

Mon Apr 13 22:01:48 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_client_dnc.mpb:
        * MPC/config/cuts_component_dnc.mpb:
        * MPC/config/cuts_servant_dnc.mpb:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/client/client.mpc:
        * cuts/MPI/CUTS_MPI.mpc:
        * cuts/arch:
        * cuts/utils/Node_Daemon/Node_File_Reader.h:
        * cuts/utils/antispam/Antispam_Config_File.h:
        * cuts/utils/db/DB_Parameter.h:
        * cuts/utils/db/ODBC/ODBC_Parameter.h:
        * cuts/utils/db/ODBC/ODBC_Parameter.cpp:
        * cuts/utils/logging/server/Logging_Server_File.h:
        * cuts/utils/testing/Test_Configuration_File.h:
        * cuts/utils/unite/Unite_Config_File.h:
        * cuts/utils/unite/Unite_Datagraph_File.h:
        * default.features:

          . Updated CUTS to the latest version of ACE+TAO+CIAO.

        * cuts/arch/ccm:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.h:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.cpp:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.h:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/arch/ccm/CCM_CoWorkEr_T.h:
        * cuts/arch/ccm/CCM_CoWorkEr_T.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_T.cpp:
        * cuts/arch/ccm/CCM_Component_T.h:
        * cuts/arch/ccm/CCM_Component_T.inl:
        * cuts/arch/ccm/CCM_Component_T.cpp:
        * cuts/arch/ccm/CCM_Context_T.h:
        * cuts/arch/ccm/CCM_Context_T.inl:
        * cuts/arch/ccm/CCM_Context_T.cpp:
        * cuts/arch/ccm/CCM_Event_Handler_T.h:
        * cuts/arch/ccm/CCM_Event_Handler_T.inl:
        * cuts/arch/ccm/CCM_Event_Handler_T.cpp:
        * cuts/arch/ccm/CCM_Event_Producer_T.h:
        * cuts/arch/ccm/CCM_Event_Producer_T.inl:
        * cuts/arch/ccm/CCM_Event_Producer_T.cpp:
        * cuts/arch/ccm/CCM_Events_T.h:
        * cuts/arch/ccm/CCM_Events_T.inl:
        * cuts/arch/ccm/CCM_Events_T.cpp:
        * cuts/arch/ccm/CCM_Factory_T.h:
        * cuts/arch/ccm/CCM_Factory_T.cpp:
        * cuts/arch/ccm/CUTS_CIAO.idl:
        * cuts/arch/ccm/CUTS_CIAO.mpc:
        * cuts/arch/ccm/CUTS_stub_export.h:
        * cuts/arch/ccm/events_i.h:
        * cuts/arch/ccm/events_i.inl:
        * cuts/arch/ccm/events_i.cpp:

          . Moved the CCM/CIAO specific abstraction to their own directory
            under the architectures.

        * cuts/CCM_CoWorkEr_Proxy.h:
        * cuts/CCM_CoWorkEr_Proxy.inl:
        * cuts/CCM_CoWorkEr_Proxy.cpp:
        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Component_T.h:
        * cuts/CCM_Component_T.inl:
        * cuts/CCM_Component_T.cpp:
        * cuts/CCM_Context_T.h:
        * cuts/CCM_Context_T.inl:
        * cuts/CCM_Context_T.cpp:
        * cuts/CCM_Event_Handler_T.h:
        * cuts/CCM_Event_Handler_T.inl:
        * cuts/CCM_Event_Handler_T.cpp:
        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:
        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:
        * cuts/CCM_Factory_T.h:
        * cuts/CCM_Factory_T.cpp:
        * cuts/CUTS_CIAO.idl:
        * cuts/CUTS_CIAO.mpc:
        * cuts/CUTS_stub_export.h:
        * cuts/events_i.h:
        * cuts/events_i.inl:
        * cuts/events_i.cpp:

          Removed these files.

Sat Apr 11 18:41:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/cuts/workers/CPU/Thread_Test.cpp:

          . Added support to print results to standard out.

Sat Apr 11 18:31:29 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_cpu_worker.mpb:

          . Base project for including the CUTS_CPU_Worker.

        * tests/cuts/workers/CPU:
        * tests/cuts/workers/CPU/Thread_Test.cpp:
        * tests/cuts/workers/CPU/Thread_Test.mpc:

          . Test for validating the CPU worker with multiple
            threads of execution.

Tue Apr  7 16:51:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-0_0_0_2:
        * PROBLEM-REPORT-FORM:
        * VERSION:

          . Release CUTS beta version 0.0.0.2
