Thu Jul 24 18:30:11 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/schemas/naomi:
        * etc/schemas/naomi/attribute.xsd:
        * etc/schemas/naomi/constraint_depends.xsd:
        * etc/schemas/naomi/interface.xsd:
        * etc/schemas/naomi/naomi_models.xsd:
        * etc/schemas/naomi/notification.xsd:

          Removed these files.

Thu Jul 24 18:28:45 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/schemas:
        * etc/schemas/naomi:
        * etc/schemas/naomi/attribute.xsd:
        * etc/schemas/naomi/constraint_depends.xsd:
        * etc/schemas/naomi/interface.xsd:
        * etc/schemas/naomi/naomi_models.xsd:
        * etc/schemas/naomi/notification.xsd:

          Removed these files.

Thu Jul 24 18:19:14 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/schemas/naomi.old:

          . Moved the old NAOMI schemas to a temporary directory until
            we successfully update to the new schemas.

        * etc/schemas/naomi:
        * etc/schemas/naomi/attribute_simple.xsd:
        * etc/schemas/naomi/interface.xsd:

          Removed these files.

Thu Jul 24 17:32:24 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/naomi/GNC_App.cpp:

          . Bug fix where the interface file is now determined by a
            single path.

Thu Jul 24 16:53:55 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/T2M/parsers/Scatter_Deployment/Scatter_Deployment_Parser.cpp:

          . Added some debug output to the parser.

        * MDE/GME/naomi/GNC_App.cpp:

          . Fixed bug in a debug statement.

Thu Jul 24 15:56:14 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/naomi/GNC_App.h:
        * MDE/GME/naomi/GNC_App.cpp:

          . Bug fix where the complex attribute parser was not
            constructing a valid path for the complex attribute filename.

Thu Jul 24 15:10:38 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/naomi/GNC.cpp:
        * MDE/GME/naomi/GNC_App.h:
        * MDE/GME/naomi/GNC_App.cpp:

          . Bug fix where the temporary file created for the .xme was
            not deleted when the program exited.

          . Updated the log messages to use ACE_Log_Msg correctly. ;-)

Thu Jul 24 04:56:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/T2M/T2M.mpc:

          . Change the name of the project file, and the name of the
            target executable.

        * MDE/GME/T2M/Text2Model.mpc:

          Removed this file.

Thu Jul 24 04:50:27 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/T2M/parsers/Scatter_Deployment:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Deployment_Map.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache.cpp:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache_Manager.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache_Manager.cpp:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache_T.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Model_Cache_T.cpp:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Scatter_Deployment_Parser.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Scatter_Deployment_Parser.mpc:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Scatter_Deployment_Parser.cpp:
        * MDE/GME/T2M/parsers/Scatter_Deployment/Scatter_Deployment_Parser_export.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/stdafx.h:
        * MDE/GME/T2M/parsers/Scatter_Deployment/stdafx.cpp:

          . Text-2-model parser for convert Scatter deployments into a PICML
            deployment plan.

Thu Jul 24 04:42:28 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/config/gme_t2m.mpb:
        * MDE/GME/T2M/parsers:
        * MDE/GME/T2M/parsers/T2M_Parser.h:
        * MDE/GME/T2M/parsers/T2M_Parser.inl:
        * MDE/GME/T2M/parsers/T2M_Parser.cpp:
        * MDE/GME/T2M/parsers/T2M_Parser.mpc:
        * MDE/GME/T2M/parsers/T2M_Parser_export.h:

          . Initial architecture for creating text-2-model parsers for
            GME.

        * MDE/GME/naomi/GNC.mpc:
        * MDE/GME/naomi/GNC_App.h:
        * MDE/GME/naomi/GNC_App.cpp:
        * MDE/GME/naomi/gnc.mwc:

          . Updated the naomi connector to use GME's parser architecture
            for reading complex attributes (or resources).

        * cuts/BDC/Benchmark_Data_Collector.mpc:

          . Updated the CIDL custom definition to remove the .ccd
            documentation extension since it's not being generated and
            force the skeleton project to always build itself.

        * MDE/GME/paradigms/PICML/modelin:
        * MDE/GME/paradigms/PICML/modelin/Deployment_Map.h:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache.h:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache.cpp:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache_Manager.h:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache_Manager.cpp:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache_T.h:
        * MDE/GME/paradigms/PICML/modelin/Model_Cache_T.cpp:
        * MDE/GME/paradigms/PICML/modelin/Picmlin_App.h:
        * MDE/GME/paradigms/PICML/modelin/Picmlin_App.cpp:
        * MDE/GME/paradigms/PICML/modelin/Picmlin_Options.h:
        * MDE/GME/paradigms/PICML/modelin/Picmlin_Options.cpp:
        * MDE/GME/paradigms/PICML/modelin/Scatter_To_Picml.h:
        * MDE/GME/paradigms/PICML/modelin/Scatter_To_Picml.cpp:
        * MDE/GME/paradigms/PICML/modelin/picmlin.cpp:
        * MDE/GME/paradigms/PICML/modelin/picmlin.mpc:
        * MDE/GME/paradigms/PICML/modelin/picmlin.mwc:
        * MDE/GME/paradigms/PICML/modelin/stdafx.h:
        * MDE/GME/paradigms/PICML/modelin/stdafx.cpp:

          Removed these files.

Thu Jul 24 03:14:36 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/website/App_Code/DataSetActions.cs:
        * utils/BMW/website/App_Code/LogFormatActions.cs:
        * utils/BMW/website/App_Code/LogVariables.cs:
        * utils/BMW/website/App_Code/UnitTestActions.cs:
        * utils/BMW/website/BMW.master:
        * utils/BMW/website/BMW.master.cs:
        * utils/BMW/website/Log_Formats.aspx:
        * utils/BMW/website/Log_Formats.aspx.cs:
        * utils/BMW/website/unittest.aspx.cs:

          Updated code with comments that need to be addressed by
          Hamilton Turner.

Thu Jul 24 02:07:29 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * utils/BMW/website/temp.aspx:
        * utils/BMW/website/temp.aspx.cs:

          Removed these files.

Wed Jul 23 21:34:41 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * utils/BMW/website/BMW.master:
        * utils/BMW/website/BMW.master.cs:

          . Added in standard messaging capability. Using three Panels it is
              possible to add messages at any time. Note that the setup is
              very specific, and converting the panels into custom user controls
              or any other dynamically added control will result in a very
              complex situation where the controls will work, EXCEPT when
              a sub-ASPX page reports a message inside its Page_Load function

        * utils/BMW/website/styles/default.css:

          . Added a standard class to control the feel of the message panels,
             one class each for the specific look of each of the types, and a
             class to deal with the button appearances and locations

        * utils/BMW/website/temp.aspx:
        * utils/BMW/website/temp.aspx.cs:

          . Temporary file so that JH can see how to easily use the messaging
              feature. James, please delete this once you have seen it

        * utils/BMW/website/unittest.aspx.cs:

          . Starting to use the new messaging system

Wed Jul 23 02:11:46 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * THANKS:

          . Updated the file with more contributors.

Wed Jul 23 02:06:11 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/T2M:
        * MDE/GME/T2M/T2M.cpp:
        * MDE/GME/T2M/T2M_Actors_T.h:
        * MDE/GME/T2M/T2M_Parser_Generator.h:
        * MDE/GME/T2M/T2M_Parser_Generator.cpp:
        * MDE/GME/T2M/Text2Model.mpc:

          . Initial commit of the text-2-model transformation engine that
            was initially started by Matt DeVries as a independent study
            project.

Tue Jul 22 21:22:45 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * etc/SQL/CUTS-unittest.sql:

          . Added a procedure and updated a table to conform with the current
               BMW conventions. Database structure will need to be re-imported
               if you would like to create Unit Tests

        * utils/BMW/website/App_Code/UnitTestActions.cs:

          . Minor changes

        * utils/BMW/website/BMW.master:
        * utils/BMW/website/BMW.master.cs:

           . Working on updating the messaging system

        * utils/BMW/website/UT_Create.aspx:
        * utils/BMW/website/UT_Create.aspx.cs:

        * utils/BMW/website/controls/AddLogFormat.ascx.cs:

          . Should now have most of the capability needed to do relationships

        * utils/BMW/website/unittest.aspx.cs:

          . Relationship basics added

Tue Jul 22 02:27:53 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:

          . Each logger is now given a unique integer for identification
            purposes.

Sun Jul 20 05:50:52 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerFactory_i.inl:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:

          . Bug fix where the message queue was not being flushed when
            the logger was stopped. This resulted in final messages not
            being placed in the database.

Sun Jul 20 01:50:19 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLogger_i.cpp:

          . Updated debug messages for the logger.

Sat Jul 19 08:53:40 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:

          . Bug fix where the TestLoggerFactory objects were not being
            activated in the correct POA.

Sat Jul 19 01:24:41 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.inl:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/workers/Test_Logger/CUTS/Logger.java:

          . Re-designed the logger client such (1) the TestLoggerClient is
            activated under the RootPOA, (2) all TestLoggerFactory servants
            are activated under the same POA and only one TestLoggerFactory
            exist per test, and (3) each TestLoggerFactory servant has its
            own POA for activating/managing TestLogger objects.

          . Now, the factory objects are responsible for destorying the
            objects they created since letting the objects destroy
            themselves causes a OBJ_NOT_EXIST exception to occur.

Fri Jul 18 23:28:52 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:

          . Fixed small bug where procedure name was stored incorrectly in a
              drop

        * etc/SQL/CUTS-unittest.sql:

          . Minor update to a stored proc

        * etc/SQL/install-mysql.bat:

          . Replaced the harder to use install-mysql.sql with this bat file,
              which is complete with feedback

        * etc/SQL/CUTS-install-mysql.sql:

          Removed this file.

Fri Jul 18 21:33:58 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/Test_Logger/CUTS/Logger.java:

          . Updated the worker to destroy the factory when the
            disconnect () method is invoked.

Fri Jul 18 21:25:21 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:

          . Implemented destroy () methods on the logger and logger factory
            so objects can release their resources.

Sat Jul 19 02:58:40 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:
        * cuts/utils/logging/logging.idl:

          . Bug fix that was causing the loggers to segfault when it was
            logging messages to the database.

          . Bug fix where stopping a logger failed to flush its message
            queue to the database.

          . First complete version of the re-design and optimization
            of the test logger.

Fri Jul 18 13:40:30 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLogger_i.inl:

          . File that was not added to the repo.

Fri Jul 18 12:38:03 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:

          . Updated the behavior such that create () always returns a
            reference to a new servant object.

        * cuts/workers/Test_Logger/CUTS/Logger.java:

          . Changed the name of the class from TestLogger to Logger since
            there was a naming conflict with the generated stub files.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          Removed this file.

Fri Jul 18 05:12:29 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/Logging_Client_Options.h:
        * cuts/utils/logging/Logging_Client_Server.h:
        * cuts/utils/logging/Logging_Client_Server.cpp:
        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/TestLoggerFactory_i.h:
        * cuts/utils/logging/TestLoggerFactory_i.cpp:
        * cuts/utils/logging/TestLogger_i.h:
        * cuts/utils/logging/TestLogger_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.h:
        * cuts/utils/logging/Test_Log_Message_Handler.inl:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/utils/logging/logging.mpc:

          . Re-designed the logger so that it uses a three-tier architecture
            where the first tier is for accessing the logging client. The
            next tier is for creating a factory for a specific test. The
            third, and final, tier is the actual loggers given to client
            applications for logging messages.

          . Each test is given its own POA, which is multi-threaded. This
            should help optimize the logging infrastructure.

Thu Jul 17 23:43:09 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * etc/SQL/CUTS-install-mysql.sql:

          . Added install script that calls (in correct order) all of the
              sql files needed to install the DB
          . NOTE: This file needs to have fully - qualified paths, so it
              would need to be generated by an installer :(
          . NOTE: This file is only for mySQL. Other SQL flavors will have
              different calling syntax

        * etc/SQL/CUTS-unittest.sql:

          . Updated file majorly - all comments are in the correct place and
              file should now fully represent SQL, rather than just mySQL.
          . Also, because of desc being a reserved keywork, I renamed a column
              to description in my tables

        * utils/BMW/website/unittest.aspx.cs:

          . Changed the file to reflect desc -> description

Fri Jul 18 05:22:57 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:

          . Updated the debug statements to print the thread id.

Thu Jul 17 17:16:20 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * utils/BMW/website/App_Code/UnitTestActions.cs:

          . Created the select for evaluating a UT as pass or fail

        * utils/BMW/website/BMW.master:

          . Added in a panel for generating help panes, and updated page load
              to clear the left over log messages

        * utils/BMW/website/Log_Formats.aspx.cs:

          . Fixed bug where log format was being added even if an error was
              thrown

        * utils/BMW/website/UT_Chart.aspx:
        * utils/BMW/website/UT_Chart.aspx.cs:

          . Fixed minor bug. Need to ask james H how to tell a clients
              browser NOT to cache the auto_generated.xml

        * utils/BMW/website/UT_Create.aspx:
        * utils/BMW/website/UT_Create.aspx.cs:

          . Updated the warn/fail comparison stuff so we end up with mySQL
              comparison operators the ones being stored in the DB. This means
              there can be dynamic sql in our procedures to get unit test
              results

        * utils/BMW/website/controls/AddLogFormat.ascx.cs:

          . Minor change

        * utils/BMW/website/images/Unit_Testing_Concept.png:

          . Added this in so that it can be displayed on the unittest help
              panel

        * utils/BMW/website/performance.aspx:
        * utils/BMW/website/performance.aspx.cs:

          . Majorly updated unit test view, so that a lot more info is now
              displayed

        * utils/BMW/website/styles/default.css:

          . Added in some classes at the bottom that are specific to the
              performance unit test view

        * utils/BMW/website/unittest.aspx:
        * utils/BMW/website/unittest.aspx.cs:

          . Added in the help panel, fixed a number of bugs related to faulty
              user entry

Thu Jul 17 23:38:42 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/Logging_Client_Options.h:
        * cuts/utils/logging/Logging_Client_Server.h:
        * cuts/utils/logging/Logging_Client_Server.cpp:

          . Fixed compilation errors related to deleting the files in
            the previous comment.

Thu Jul 17 16:01:47 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/logging.mpc:
        * cuts/utils/logging/Logging_Client_Server.cpp:
        * cuts/utils/logging/Logging_Client_Task.cpp:
        * cuts/utils/logging/Logging_Client_Task.h:
        * cuts/utils/logging/Logging_Client_Task.inl:

          . Simplified the threadpool implemenation for the server by using
            subclassing ACE_Task_Base. This way, we can all the activate ()
            method with the correct number of threads we want to instantiatate
            in the ORB's threadpool. ;-)

        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.h:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          . Updated the IDL specification so that the log () method doesn't
            take a structure containing the message's information, but passes
            each piece of information as a parameter.

        * cuts/utils/logging/Server_Thread_Strategy.h:
        * cuts/utils/logging/Server_Thread_Strategy.inl:
        * cuts/utils/logging/Server_Thread_Strategy.cpp:
        * cuts/utils/logging/Single_Thread_Server_Strategy.h:
        * cuts/utils/logging/Single_Thread_Server_Strategy.cpp:
        * cuts/utils/logging/Threadpool_Server_Strategy.h:
        * cuts/utils/logging/Threadpool_Server_Strategy.inl:
        * cuts/utils/logging/Threadpool_Server_Strategy.cpp:

          . Removed these files.

Thu Jul 17 02:26:41 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          . Switched from using a 'string' type for the message to a
            'sequence <char>' type. This will remove the needed of
            calculating the length of the string on the server side
            since it's provided by the sequence.

Wed Jul 16 23:36:51 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/Logging_Client_Options.h:
        * cuts/utils/logging/Logging_Client_Server.h:
        * cuts/utils/logging/Logging_Client_Server.cpp:
        * cuts/utils/logging/Server_Thread_Strategy.h:
        * cuts/utils/logging/Server_Thread_Strategy.inl:
        * cuts/utils/logging/Server_Thread_Strategy.cpp:
        * cuts/utils/logging/Single_Thread_Server_Strategy.h:
        * cuts/utils/logging/Single_Thread_Server_Strategy.cpp:
        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Threadpool_Server_Strategy.h:
        * cuts/utils/logging/Threadpool_Server_Strategy.inl:
        * cuts/utils/logging/Threadpool_Server_Strategy.cpp:
        * cuts/utils/logging/logging.mpc:

          . Strategized the server so that it can be either single-threaded
            or multi-threaded via a threadpool for handling CORBA requests.

          . Moved the logging client options into their own class that is
            accessible via the ACE_Singleton.

Wed Jul 16 13:50:22 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/JbiExecutionManager.java:
        * cuts/java/jbi/deployment/JbiNodeManager.java:
        * cuts/java/jbi/deployment/JbiPlanLauncher.java:

          . The naming service is now resolved based on the system property
            named ORBInitRef.NameService.

Wed Jul 16 12:09:41 UTC 2008  James H. Hill  <j.hill@vanderbilt.edu>

        * cuts/utils/testing/Testing_App.cpp:

          . Updated the log messages for deploy/teardown to include the
            command for deploy/teardown.

Wed Jul 16 07:50:12 UTC 2008  James H. Hill  <j.hill@vanderbilt.edu>

        * bin/jbi/ExecutionManager.sh:
        * bin/jbi/NameService.sh:
        * bin/jbi/NodeManager.sh:
        * bin/jbi/PlanLauncher.sh:
        * bin/jbi/SingleProcess.sh:

          . Bug fix where the CUTS_CLASSPATH was missing the JacORB JAR
            files that are needed by the deployment framework.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          . Added a simple printout that tells the location of the
            CUTS.TestLogger.config used by the CUTS.TestLogger.

        * etc/SQL/CUTS-msglog.sql:

          . Bug fix where the foreign key specification for the test_number
            was using ON DELETE RESTRICT instead of ON DELETE CASCADE.

Tue Jul 15 23:36:46 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * utils/BMW/website/BMW.master.cs:

          . Cleared any previous error text on master page load. Fixes bug where
              error text just stays around

        * utils/BMW/website/performance.aspx.cs:
        * utils/BMW/website/unittest.aspx.cs:

          . Ensured default minimum width on all controls - even if there is no
              data


Tue Jul 15 23:17:48 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * utils/BMW/website/xml:
        * utils/BMW/website/xml/README.txt:

         . auto_generated.xml file was causing problems with SVN because of
             conflicts always arising in the working copy. I added it to my
             ignore list and have uploaded a readme that explains what goes in
             that directory. I will change the code soon to just automatically
             delete the auto_generated file. For now, it is useful for debug
             purposes


Tue Jul 15 23:06:26 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * utils/BMW/website/App_Code/DataSetActions.cs:
        * utils/BMW/website/App_Code/UnitTestActions.cs:

          . Minor Changes

        * utils/BMW/website/BMW.master:

          Updated link to Unit Test

        * utils/BMW/website/UT_Chart.aspx.cs:
        * utils/BMW/website/performance.aspx:
        * utils/BMW/website/performance.aspx.cs:

          . Added initial view for Unit Tests. Ability to choose a Test Suite
              and see Packages and Unit Tests - evaluates unit tests and lists
              results and evaluation scalar

        * utils/BMW/website/unittest.aspx:
        * utils/BMW/website/unittest.aspx.cs:

          . Small UI updates, added in a Default Minimum Width on controls

        * utils/BMW/website/xml/auto_generated.xml:

          . This file is updated every time something is charted

        * utils/BMW/website/unittesting.aspx:
        * utils/BMW/website/unittesting.aspx.cs:

          Removed these files. Renames per james request

Tue Jul 15 19:17:15 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/SQL/CUTS-create.sql:

          . Temporarily gave DROP privileges to the cuts user.

Tue Jul 15 18:39:29 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.h:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:

          . Re-implemented the storage object for the actual text of a
            log message. Instead of using a ACE_Auto_String_Free object,
            we switched to using an ACE_Array. This will help reduce the
            number of buffer allocation as long as the actual size of the
            array is big enough to hold the text of the message.

            We are not using an ACE_CString because we only need a buffer
            and not all the functionality of a ACE_CString. Also, the
            ACE_CString does not work with SQL prepared statements.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          . Bug fix where the previous comment remove the method call to
            configure (), which allowed the client to connect to the local
            logging client.

          . Changed the name of the system property to access the configuration
            for the CUTS.TestLogger to 'CUTS.TestLogger.config'.

Tue Jul 15 17:57:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:

          . Compilation fix where the return value on (non-)Windows
            for a thread is different and the code for handling that
            difference was wrong.

Tue Jul 15 05:10:09 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/MBT/CAPI_Logging_Overhead.xme:

          . Updated the model to use the disconnect () method of the
            CUTS.TestLogger during the fini () environment action.

          . Bug fix where the eventCount in the SurveillanceClient was
            not being incremented.

Tue Jul 15 05:06:21 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:

          . Bug fix where the register-with-ns command-line option was
            misspelled and resulted in the test manager daemon not
            registering itself with the naming service.

Tue Jul 15 04:55:50 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/SingleProcess.sh:

          . Bug fix where the script was missing the deployment jar file
            and the main class was invalid.

Tue Jul 15 04:28:22 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          . Bug fix where the connect (String) method failed to connect to
            the TestManager in the naming service with the specified name.

          . Added a new method named disconnect () for disconnecting from
            the test manager.

Mon Jul 14 21:08:04 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * integration/include/MPC:
        * integration/include/MPC/devenv.build:
        * integration/include/MPC/nmake.build:
        * integration/include/MPC/vc8.build:
        * integration/include/mpc.build:

          Slowly but surely trying to add support for different build
          types to CruiseControl scripts.

        * integration/include/devenv.build:

          Removed this file.

Mon Jul 14 19:52:23 UTC 2008  Hamilton Turner  <hamilton.a.turner@vanderbilt.edu>

        * etc/SQL/CUTS-unittest.sql:

          . Added SQL needed for unit tests

        * utils/BMW/website/App_Code/DataSetActions.cs:
        * utils/BMW/website/App_Code/LogVariables.cs:
        * utils/BMW/website/App_Code/UnitTestActions.cs:

          . Updates to go from log to msg_log and TestID to test_number

        * utils/BMW/website/UT_Chart.aspx.cs:
        * utils/BMW/website/UT_Create.aspx:
        * utils/BMW/website/UT_Create.aspx.cs:

          . Minor Updates

        * utils/BMW/website/charts:

          . Added charting library to BMW in correct place

        * utils/BMW/website/unittesting.aspx:
        * utils/BMW/website/unittesting.aspx.cs:

          . Overhauled the UI code to enforce data integrity. There should be
              almost no exceptions unhandled now

        * utils/BMW/website/xml/auto_generated.xml:

          . This file is auto-modified every time something is charted

Mon Jul 14 18:58:12 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * NEWS:

          Updated the NEW file.

Mon Jul 14 18:50:29 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/MBT:
        * tests/MBT/CAPI_Logging_Overhead.xme:

          Test for benchmarking the logging overhead introduced in the
          CAPI client's runtime performance. This model contains a test
          that can be configured to log everything, or log nothing.

Mon Jul 14 18:41:44 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/be/BE_Options.h:
        * MDE/GME/paradigms/PICML/be/BE_Options.cpp:

          Switched over to using the ACE_Singleton class to implement
          the singleton for the options.

        * MDE/GME/paradigms/PICML/be/CAPI/CAPI.mpc:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Ctx.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Workspace_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/XML_Mapping_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/XSD_File_Generator.h:
        * MDE/GME/paradigms/PICML/be/CAPI/XSD_File_Generator.cpp:

          Implemented support for generating the schema definition for
          basic event types that is composed of predefined types and
          aggregates.

Mon Jul 14 06:40:21 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/be/BE.mpc:
        * MDE/GME/paradigms/PICML/be/BE_Condition_Parser_T.h:
        * MDE/GME/paradigms/PICML/be/BE_IDL_Graph.h:
        * MDE/GME/paradigms/PICML/be/BE_Impl_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/be/BE_Impl_Graph_T.h:
        * MDE/GME/paradigms/PICML/be/BE_Impl_Graph_T.cpp:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor_Handlers_T.h:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor_T.h:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor_T.inl:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor_T.cpp:
        * MDE/GME/paradigms/PICML/be/BE_Workspace_Generator_T.h:
        * MDE/GME/paradigms/PICML/be/BE_Workspace_Generator_T.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI.mpc:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Ctx.h:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Ctx.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Generators.h:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Manager.h:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Preprocessor.h:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Preprocessor_Handlers.h:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Preprocessor_Handlers.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/CAPI_Project_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/CAPI/XML_Mapping_File_Generator.h:
        * MDE/GME/paradigms/PICML/be/CAPI/XML_Mapping_File_Generator.cpp:
        * MDE/GME/paradigms/PICML/be/CIAO/CIAO_Exec_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/be/CIAO/CIAO_Exec_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/be/CIAO/CIAO_Proxy_Header_Traits.cpp:
        * MDE/GME/paradigms/PICML/be/CIAO/CIAO_Proxy_Source_Traits.cpp:
        * MDE/GME/paradigms/PICML/be/CIAO/CIAO_Traits_Base.cpp:
        * MDE/GME/paradigms/PICML/be/TIOA/TIOA_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/XML/XML_Generators.cpp:
        * MDE/GME/paradigms/PICML/be/natural-lang/Natural_Lang_Generators.cpp:

          . Parameterized the preprocessor by the backend generators's
            type. Right now, only the implementation dependency graph is
            parameterized. The IDL graph is not parameterized.

          . Updated all the backend generators to use the parameterized
            version of the prepreocessor.

          . Update the CAPI generator so that it will include the
            appropriate worker libraries in the CLASSPATH during
            compilation.

        * MDE/GME/paradigms/PICML/be/BE_Env_Variable_Parser_T.h:
        * MDE/GME/paradigms/PICML/be/BE_Env_Variable_Parser_T.cpp:

          . Implemented a Boost Spirit grammar for allowing backend
            generators to convert an environment variable defined in the
            model to an environment variable that is understood by their
            backend generator. Environment variables have the following
            syntax: $(VAR_NAME).

          . Incorporated the environment variable converter into the
            CAPI backend generator.

        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:

          Fixed compilation errors on Windows-based systems.

        * MDE/GME/paradigms/PICML/be/BE_Impl_Graph.h:
        * MDE/GME/paradigms/PICML/be/BE_Impl_Graph.cpp:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor.h:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor.inl:
        * MDE/GME/paradigms/PICML/be/BE_Preprocessor.cpp:

          Removed these files.

Sun Jul 13 03:47:47 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App_Server.cpp:

          Bug fix where the return value from the spawned service thread was
          not corrct on non-Windows system. This was fixed by using the
          ACE_THR_RETURN_FUNC type as the retval variable's type.

Sat Jul 12 20:21:54 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/Logging_Client_Server.cpp:

          Bug fix where the --database option was using the long_option ()
          instead of the opt_arg () to set the database value. This resulted
          in the database parameter being set to 'database'.

Sat Jul 12 21:43:35 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Connection.cpp:

          Updated the data source name to be 'CUTS'.

Sat Jul 12 07:32:41 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * VERSION:

          Fixed the version number in this file as well.

Sat Jul 12 07:31:19 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PROBLEM-REPORT-FORM:

          Updated the version number of the problem report form.

Sat Jul 12 07:28:52 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * THANKS:

          Added a THANKS file to the project repo for listing those who
          have contributed to CUTS and help my vision come true. :o)

Sat Jul 12 06:59:32 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.cpp:

          Bug fix where the UUID generated were the same due to not
          initializing the UUID generator before it was used.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:

          Added support for associating a UUID with a specific test. We
          are slowly migrating to using auto-generated UUIDs for the
          test instead of integers because (1) the integer test id couples
          the test manager to the database and (2) we have a larger range
          of values to select from with UUIDs.

Sat Jul 12 06:34:02 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/naomi/GNC.mpc:
        * cuts/BDC/Benchmark_Data_Collector.mpc:

          Fixed compilation bugs where custom build would ALWAYS run
          even if the generated files were up-to-date.

        * cuts/utils/logging/Logging_Client_Server.cpp:

          Fixed the format of the ACE_DEBUG and ACE_ERROR log messages.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_Options.h:
        * cuts/utils/testing/cutstest_d.cpp:

          Implemented the --deploy and --teardown options for the test
          manager.

Fri Jul 11 21:01:37 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Task.h:
        * cuts/utils/testing/Testing_Base_export.h:
        * cuts/utils/testing/Testing_Options.h:
        * cuts/utils/testing/testing.mpc:

          Refactored the project so that the classes shared between the
          cutstest and cutstest_d are in the CUTS_Test_Base project.

        * cuts/utils/testing/cutstest_d.cpp:

          Missing source file.

Fri Jul 11 14:33:12 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          Bug fix where the TestLogger would fail to unregister itself with the
          logging client if it was collected by the garbage collector.

Fri Jul 11 14:17:39 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Types.h:

          The destructor was missing the 'virtual' keyword.

        * cuts/utils/logging:
        * cuts/utils/logging/Logging_Client_Server.h:
        * cuts/utils/logging/Logging_Client_Server.cpp:
        * cuts/utils/logging/Logging_skel_export.h:
        * cuts/utils/logging/Logging_stub_export.h:
        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.h:
        * cuts/utils/logging/Test_Log_Message_Handler.inl:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:
        * cuts/utils/logging/cutslog_d.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/utils/logging/logging.mpc:
        * etc/config/cuts_logging_skel.mpb:
        * etc/config/cuts_logging_stub.mpb:

          Initialize version of the CUTS test logging client. The logging
          client is similar to the ACE logging client, but it allows you to
          associate log messages with a specific test. It also submits the
          log messages into a test database, by default. Eventually, we would
          like to strategize this client so we can submit the log messages
          to arbitrary locations, such as a database or another logging
          client.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_App_Task.cpp:
        * cuts/utils/testing/cutstest.cpp:
        * cuts/utils/testing/testing.idl:
        * cuts/utils/testing/testing.mpc:

          Improved the log messaging so that you users can control how
          much information is printed to the screen using the --verbose (-v)
          and --debug command-line options.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:
        * cuts/workers/Test_Logger/TestLogger.build:

          Bug fix where the logger would not unregister itself with the
          logging client server. This was fixed by making the subclassing
          the TestLogger from the Thread class and registering it as a
          shutdown hook with the virtual machine. This will ensure the logger
          is called when the VM is destroy. We still need to overload the
          finalize () method so we can unregister the TestLogger is the
          garbage collector is run.

        * etc/SQL/CUTS-create.sql:
        * etc/SQL/CUTS-msglog.sql:

          Implemented stored procedures to simplify inserting log messages
          into the database.


Thu Jul 10 02:18:26 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/testing.mpc:

          . The CUTS_Testing_App_Server is now a subclass of the
            CUTS_Testing_App. This helps with reusing the basic testing
            application within the server version. This also caused
            the basic testing application expose private variables via
            accesor methods.

          . The testing server application has the option of registering
            itself with the naming service using the specified name. The
            naming convention for the naming service is:

              CUTS/TestManager/<name>

Wed Jul  9 22:13:44 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.bat:

          Removed unncessary command-line options.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/cutstest.cpp:
        * cuts/utils/testing/testing.mpc:

          Separated the CUTS testing application into a regular and
          deamon application. The daemon application allows clients to
          remotely control the lifecycle of the test.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          Implemented a method named getTestNumber (), which is
          responsible for getting the cached test number of the client.

        * cuts/utils/testing/cuts_test.cpp:

          Removed this file.

Wed Jul  9 15:41:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/cuts.java.build:

          Moved the logger class to cuts/workers/Test_Logger directory.

        * cuts/utils/testing:
        * cuts/utils/testing/TestManager_i.h:
        * cuts/utils/testing/TestManager_i.cpp:
        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_App_Task.h:
        * cuts/utils/testing/Testing_App_Task.cpp:
        * cuts/utils/testing/Testing_skel_export.h:
        * cuts/utils/testing/Testing_stub_export.h:
        * cuts/utils/testing/cuts_test.cpp:
        * cuts/utils/testing/testing.idl:
        * cuts/utils/testing/testing.mpc:

          First phase of developing a test management application. So far
          it is able to start/stop test in a database. The next step is to
          allow it to deploy/teardown distributed applications.

        * cuts/workers/Test_Logger:
        * cuts/workers/Test_Logger/CUTS:
        * cuts/workers/Test_Logger/CUTS/TestLogger.java:
        * cuts/workers/Test_Logger/TestLogger.build:

          The newest addition to the workload generator family. This is
          a logger that associates log messages with a test number. It
          works in conjunction with the TestManager and TestLoggerClient
          interface.

        * cuts/java/LogPriority.java:
        * cuts/java/Logger.java:

          Removed these files.

Tue Jul  8 21:21:23 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/java/jbi/deployment/JbiNodeManager.java:
        * cuts/java/jbi/deployment/NodeManagerImpl.java:

          The <location> tag in the deployment plan now refers to an
          alias. The alias maps to the name that a node manager is given
          when it is deployed.

Tue Jul  8 18:32:40 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/ANT/include/cuts.build:

          Added cuts.install.dir property, which contains the location of
          the install directory in CUTS.

        * install/jbi.bundler.build:

          Finish defining script that will build a tarfile for the
          CUTS JBI architecture.

Tue Jul  8 18:02:09 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/NameService.bat:
        * bin/jbi/NameService.sh:

          Helper scripts to start the naming service.

        * install/jbi.bundler.build:

          Location of the script for creating the JBI tarball for
          binary distribution.

Wed Jul  9 00:22:17 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/idl/ApplicationProcess.idl:

          Bug fix where the node application did not implement the
          start () method. Now, which start () is invoked, all the clients
          are activated.

Tue Jul  8 15:59:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.sh:
        * bin/jbi/NodeManager.sh:
        * bin/jbi/PlanLauncher.sh:

          Scripts for launching portions of the deployment framework
          on non-Windows systems.

Tue Jul  8 15:38:24 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.bat:
        * bin/jbi/PlanLauncher.bat:
        * bin/jbi/SingleProcess.bat:
        * bin/jbi/SingleProcess.sh:
        * cuts/cuts.java.jbi.build:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/JbiPlanLauncher.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/mapping.xml:
        * etc/schemas/jbi:
        * etc/schemas/jbi/deployment.xsd:

          First version of the distributed deployment framework that is able
          to both deploy and teardown JBI applications.

Mon Jul  7 01:36:09 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/idl/ApplicationProcess.idl:

          The runtime portion of the deployment framework is complete. It
          is now possible to programmatically deploy clients onto multiple
          node and into multiple processes.

Sun Jul  6 22:36:34 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/NodeManager.bat:
        * bin/jbi/SingleProcess.bat:
        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:

          Another snapshot of the deployment framework. I have resolved
          the problem below w.r.t. not being able to instantiate the
          ApplicationProcessImpl class. This had to do with specify
          the command-line parameters incorrectly.

Sat Jul  5 16:03:16 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/cuts.java.build:
        * cuts/java/ProcessHandler.java:
        * cuts/java/ProcessStreamReader.java:

          Apparently, if you spawn an application using Runtime.exec (),
          you must get the input/error streams of the spawned process and
          empty them occassionally. So, these are some helper classes that
          given a process, it will empty their buffer so the spawned
          child application does not freeze.

        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/DomainApplicationImpl.java:
        * cuts/java/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/JbiNodeManager.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/NodeManagerImpl.java:

          Checkpoint the deployment framework. Right now, the spawned
          application process register themselves, however, I'm having
          trouble creating the ApplicationProcessImpl class. There is
          something wrong with the CLASSPATH because it is not able
          to create the ConnectionManager that is needed by the clients
          to connect to the server.

Fri Jul  4 04:49:55 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * ChangeLog
        * ChangeLogs/ChangeLog-0_0_0_1:

          This marks the first official beta release of the Component
          Workload Emulator (CoWorkEr) Utilization Test Suite (CUTS). This
          also marks the first birthday of CUTS. Happy 1st birthday CUTS,
          and may you have many more!! :-)
