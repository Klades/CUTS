Thu May  7 19:42:57 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/CUTS_UNITE.reg:
        
          Added file for registration
        
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/CUTS_UNITEd.reg:
        
        	Added file for registration

Thu May  7 18:14:36 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:

                Updated file as per changes in the model

        * MDE/GME/paradigms/CUTS/paradigm/cuts_uml.xme:

                Updated file as per changes in the model

Wed May  6 21:20:31 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MDE/GME/paradigms/CUTS/paradigm/cuts_uml.xme:

          Added files for CUTS DSML

Wed May  6 20:15:13 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DDS_Utility.h:

          Wrapped type name passed to register_topic() with
          CORBA::string_dup, since it is for now a hard-coded
          string constant and not the return value from
          get_type_name().

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Removed unused code.

        * cuts/arch/dsto/DDS/driver.cpp:

          Added newline at the end of the file.

        * cuts/arch/dsto/DDS/README:

          New file.

Wed May  6 20:10:04 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * MPC/config/cuts_dsml.mpb:

         Added base project for CUTS DSML

Wed May  6 19:49:16 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/run_test.pl:

          New file.

Wed May  6 19:33:04 UTC 2009  Pooja Varshneya  <varshneya_p@n1.vanderbilt.edu>

        * CUTS_CoSMIC.mwc:

          Updated the workspace to add CUTS_UNITE interpreter

        * MDE/GME/paradigms/CUTS:

          Added folder for CUTS DSML

        * MDE/GME/paradigms/CUTS/addons:
        * MDE/GME/paradigms/CUTS/interpreters:

        * MDE/GME/paradigms/CUTS/interpreters/UNITE:

          UNITE interpreter contains files for CUTS_UNITE interpreter

        * MDE/GME/paradigms/CUTS/interpreters/UNITE/ComponentConfig.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/RawComponent.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/StdAfx.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/StdAfx.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UNITE.mpc:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmApp.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmApp.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UdmConfig.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.h:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/UniteVisitor.cpp:
        * MDE/GME/paradigms/CUTS/interpreters/UNITE/resource.h:

        * MDE/GME/paradigms/CUTS/paradigm:

          Folder containing CUTS DSML files

        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xme:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS.xml:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_DSML.mpc:
        * MDE/GME/paradigms/CUTS/paradigm/CUTS_export.h:

Wed May  6 18:36:51 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DummyConsumer.idl:
        * cuts/arch/dsto/DDS/DummyEvent.idl:

          Renamed DummyConsumer.idl as DummyEvent.idl.

        * cuts/arch/dsto/DDS/DummyConsumer.h:
        * cuts/arch/dsto/DDS/DummyConsumer.cpp:

          New files, containing the implementation of the
          DummyConsumer interface.

        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:

          Changes resulting from the above.

Wed May  6 16:37:37 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/ModelDDSData_EV.idl:
        * cuts/arch/dsto/DDS/DummyConsumer.idl:

          Renamed ModelDDSData_EV.idl as DummyConsumer.idl,
          and moved it to the DDS_Utilities project.

        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/PubAppDDSContext.h:
        * cuts/arch/dsto/DDS/SubAppDDSComponent.idl:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSContext.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/driver.cpp:
        * cuts/arch/dsto/DDS/PubAppDDSComponent.idl:

         - Changes resulting from the file rename above.

         - Added override of get_consumer() to SubAppDDSAdapter,
           so a DummyConsumer reference can be generated directly
           and returned, without storing it in the consumer table.

Tue May  5 22:24:49 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/requires_opensplice.mpb:
        * cuts/arch/dsto/DDS/dsto_dds.mpc:

          . Added base project that adds 'opensplice' to the requires
            project attribute. This will prevent building OpenSplice
            projects in CUTS is OpenSplice is not installed.

Tue May  5 19:17:57 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cp:

          Added overlooked call to populate_consumer_table().

Tue May  5 19:12:00 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/SubAppDDSAdapter.h:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Restored mechanism to populate the event consumer table.

Tue May  5 18:33:18 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/PubAppDDSAdapter.cpp:
        * cuts/arch/dsto/DDS/SubAppDDSAdapter.cpp:

          Added init() call for DDS_Utility subscriber member,
          and expanded error reporting for this call on both pub
          and sub sides.

Tue May  5 17:33:06 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/DDS_Utility.h:

          Temporary workaround for the fact that OpenSpliceDDS's
          register_type() won't accept any scoping in the type name.

Mon May  4 19:53:08 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/dsto_dds.mpc:

          Fixed typo in library name.

Mon May  4 19:40:48 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/SubApp.cpp:
        * cuts/arch/dsto/DDS/SubAppDDS.cpp:

          Fixed case errors in #includes.

Mon May  4 19:15:48 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/PubAppDDS.cpp:
        * cuts/arch/dsto/DDS/SubAppDDS.cpp:
        * cuts/arch/dsto/DDS/PubAppDDS.h:
        * cuts/arch/dsto/DDS/SubAppDDS.h:

          New files.

        * cuts/arch/dsto/PubApp.cpp:

          Fixed case error in #include

Thu Apr 30 18:28:26 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:

          . Simplified the servant code.

Thu Apr 30 18:19:46 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_ComponentServer.h:
        * cuts/arch/tcpip/TCPIP_ComponentServer.inl:
        * cuts/arch/tcpip/TCPIP_ComponentServer.cpp:
        * cuts/arch/tcpip/TCPIP_Connector.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.inl:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint.cpp:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.h:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.inl:
        * cuts/arch/tcpip/TCPIP_Remote_Endpoint_T.cpp:

          . Extracted the *endpoint* code for connecting to a remote
            client and sending events into a reusable class.

        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:

          . Updated the example to use the CUTS_TCPIP_Remote_Endpoint
            classes.

Thu Apr 30 17:50:40 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/DDS/*.*:

          New subdirectory, containing a copy of the original DSTO example,
          modified to use OpenSpliceDDS to send the data instead of
          using CORBA eventtypes.

Thu Apr 30 16:06:00 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.cpp:

          . Bug fix where using INADDR_ANY or INADDR6_ANY for the TCPIP
            acceptor did not return the right address for the event consumer's
            endpoint.

        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:

          . Separated the component server's active object from the
            actual component server.

Thu Apr 30 15:21:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Implemented a basic TCPIP component server, which the TCPIP
            CCM component server extends.

        * cuts/utils/utils.mpc:

          . Removed an obsolete source file.

Thu Apr 30 07:22:06 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_tcpip_ccm.mpb:
        * MPC/config/cuts_tcpip_ccm_skel.mpb:
        * MPC/config/cuts_tcpip_ccm_stub.mpb:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/ccm:
        * cuts/arch/tcpip/ccm/Events.idl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM.mpc:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_ComponentServer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_EventConsumer.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.inl:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_Events_Impl.cpp:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_export.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_skel_export.h:
        * cuts/arch/tcpip/ccm/TCPIP_CCM_stub_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . First prototype of TCPIP component that is able to send
            and receive events.

          . Update the example to have a *simple* component server that
            goes through the component's lifecycle methods.

Thu Apr 30 01:07:06 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Component.h:
        * cuts/arch/tcpip/TCPIP_Component.inl:
        * cuts/arch/tcpip/TCPIP_Component.cpp:
        * cuts/arch/tcpip/TCPIP_Context.h:
        * cuts/arch/tcpip/TCPIP_Context.inl:
        * cuts/arch/tcpip/TCPIP_Context.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * cuts/arch/tcpip/TCPIP_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Added the notion of a *context* to the components.

Wed Apr 29 23:28:29 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Connector.h:
        * cuts/arch/tcpip/TCPIP_Connector.inl:
        * cuts/arch/tcpip/TCPIP_Connector.cpp:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.h:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.inl:
        * cuts/arch/tcpip/TCPIP_Connector_Svc_Handler.cpp:

          . Initial implementation of the TCPIP connector used by the
            client components.

        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:

          . Removed dead code.

        * examples/arch/tcpip/HelloWorld/client.cpp:

          . Updated the example to use the CUTS_TCPIP_CONNECTOR.

Tue Apr 28 23:20:28 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/plugins/cute/CUTE.mpc:
        * MDE/GME/plugins/cute/CUTE_Dialog.h:
        * MDE/GME/plugins/cute/CUTE_Dialog.inl:
        * MDE/GME/plugins/cute/CUTE_Dialog.cpp:
        * MDE/GME/plugins/cute/CUTS_CUTE.rc:
        * MDE/GME/plugins/cute/Interpreter_List.h:
        * MDE/GME/plugins/cute/Model_Interpreter.h:
        * MDE/GME/plugins/cute/Model_Interpreter.inl:
        * MDE/GME/plugins/cute/Model_Interpreter.cpp:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.h:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.inl:
        * MDE/GME/plugins/cute/Model_Interpreter_Action.cpp:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.h:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.inl:
        * MDE/GME/plugins/cute/Model_Interpreter_Action_List.cpp:
        * MDE/GME/plugins/cute/Property_Element_Map.h:
        * MDE/GME/plugins/cute/Property_Locator.h:
        * MDE/GME/plugins/cute/Property_Locator.inl:
        * MDE/GME/plugins/cute/Property_Locator.cpp:
        * MDE/GME/plugins/cute/RawComponent.h:
        * MDE/GME/plugins/cute/RawComponent.cpp:

          . First prototype/implementation of CUTE for GME.

Tue Apr 28 13:42:49 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_template.mpb:

          Removed this file.

Tue Apr 28 13:32:34 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/Config_List_Parser_T.cpp:

          . Removed an include.

Tue Apr 28 13:22:58 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/Config_List_Parser_T.h:
        * cuts/utils/Config_List_Parser_T.inl:
        * cuts/utils/Config_List_Parser_T.cpp:
        * cuts/utils/template/File_Generator.h:
        * cuts/utils/template/Template_App.cpp:
        * cuts/utils/template/cutstmpl.mpc:
        * cuts/utils/utils.mpc:

          . Moved the configuration list parser to the cuts/utils
            directory so it can be reused.

          . Parameterized the configuration list parser so different
            applications can leverage configuration list parser.

        * cuts/utils/template/Template_Config_Handler.h:
        * cuts/utils/template/Template_Config_Handler.inl:
        * cuts/utils/template/Template_Config_Handler.cpp:
        * cuts/utils/template/Template_Config_List_Parser.h:
        * cuts/utils/template/Template_Config_List_Parser.inl:
        * cuts/utils/template/Template_Config_List_Parser.cpp:

          Removed these files.

Tue Apr 28 12:00:56 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/models/CAPI.xme:
        * MDE/GME/paradigms/PICML/models/XMLSchema.xme:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Updated the model to the latest version of PICML.

Fri Apr 24 21:35:28 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Project_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.cpp:

          . Bug fix where the generated code for getting the metadata
            of an event in object format was incorrect.

          . Added 'debug' and 'debuglevel' flags to the generated
            ANT scripts.

        * MDE/GME/plugins:

        * MDE/GME/plugins/cute:

        * MDE/GME/plugins/cute/CUTE.ico:
        * MDE/GME/plugins/cute/CUTE.mpc:
        * MDE/GME/plugins/cute/CUTE_Dialog.h:
        * MDE/GME/plugins/cute/CUTE_Dialog.inl:
        * MDE/GME/plugins/cute/CUTE_Dialog.cpp:
        * MDE/GME/plugins/cute/CUTS_CUTE.rc:
        * MDE/GME/plugins/cute/CUTS_CUTEd.reg:
        * MDE/GME/plugins/cute/ComponentConfig.h:
        * MDE/GME/plugins/cute/Property_Locator.h:
        * MDE/GME/plugins/cute/Property_Locator.inl:
        * MDE/GME/plugins/cute/Property_Locator.cpp:
        * MDE/GME/plugins/cute/RawComponent.h:
        * MDE/GME/plugins/cute/RawComponent.cpp:
        * MDE/GME/plugins/cute/resource.h:
        * MDE/GME/plugins/cute/stdafx.h:
        * MDE/GME/plugins/cute/stdafx.cpp:
        * MDE/GME/plugins/cute/Windows_Registry.cpp:
        * MDE/GME/plugins/cute/Windows_Registry.h:
        * MDE/GME/plugins/cute/Windows_Registry.inl:

          . Checkpoint CUTE. Right now, it is able to open a dialog
            so end-users can select a template configuration, and
            show all the intepreters for the current parasdigm. It also
            has code that will gather all the elements that have a
            template parameter.

Thu Apr 23 20:20:42 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/main.cpp:

          Added comments explaining why cleanup code is
          commented out.

        * cuts/arch/dsto/PubAppAdapter.cpp:

          Fixed typos.

        * cuts/arch/dsto/SubApp.cpp:

          Minor change to debugging output.

Thu Apr 23 19:12:40 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/PubAppAdapter.cpp:
        * cuts/arch/dsto/PubApp.h:
        * cuts/arch/dsto/PubApp.cpp:
        * cuts/arch/dsto/PubAppAdapter.h:

          - Added a duplication of the PubApp pointer in
            the extern "C" method to create the PubAppAdpater,
            before it is passed to the PubAppAdpater constructor.
            The pointer to the PubApp instance passed into this
            method belongs to a _var in the middleware, and so
            was having its refcount go to 0 at initialization time.

          - Removed debugging methods and code from PubApp
            and PubAppAdapter.

          - Added a destructor to PubAppAdpater, where the
            context and 'executor' allocations are cleaned up.

Thu Apr 23 01:55:35 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:

          . Bug fix where the source was not publihsing data. The line of
            code that published the data was removed a LONG time ago on
            accident.

        * cuts/utils/Property_Evaluator_List_Actor.h:
        * cuts/utils/Property_Evaluator_List_Actor.inl:
        * cuts/utils/Property_Evaluator_List_Actor.cpp:
        * cuts/utils/Property_Evaluator_List_Actor_T.cpp:
        * cuts/utils/utils.mpc:

          . Implemented an actor strategy for creating a list of all the
            template parameters in a string of text.

Tue Apr 21 20:14:38 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_ORB.cpp:

          . Fixed compilation error.

Tue Apr 21 20:11:18 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_SPEC.h:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_VTable_T.cpp:
        * cuts/arch/tcpip/TCPIP_Var_T.h:
        * cuts/arch/tcpip/TCPIP_Var_T.inl:
        * cuts/arch/tcpip/TCPIP_Var_T.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_Basic_Impl.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_impl_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/client.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . First successful implementation of the TCP/IP that
            can create servers/servants and receive events.

Tue Apr 21 16:49:14 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/gme_base.mpb:

          . Updated base project to include later version of Visual Studio
            and disabled some compile flags.

        * cuts/utils/Command_Substitution.h:
        * cuts/utils/Command_Substitution.cpp:
        * cuts/utils/Node_Daemon/Node_Daemon_i.cpp:
        * cuts/utils/Property_Evaluator_Stream_Actor.h:
        * cuts/utils/Property_Evaluator_Stream_Actor.inl:
        * cuts/utils/Property_Evaluator_Stream_Actor.cpp:
        * cuts/utils/Property_Evaluator_Stream_Actor_T.cpp:
        * cuts/utils/Property_Evaluator_T.h:
        * cuts/utils/Property_Evaluator_T.inl:
        * cuts/utils/Property_Evaluator_T.cpp:
        * cuts/utils/Text_Processor.h:
        * cuts/utils/Text_Processor.inl:
        * cuts/utils/Text_Processor.cpp:
        * cuts/utils/Text_Processor_T.cpp:
        * cuts/utils/template/File_Generator.cpp:
        * cuts/utils/template/Template_App.cpp:
        * cuts/utils/testing/Test_Configuration_File.cpp:
        * cuts/utils/utils.mpc:

          . Updated the property evaluator so that is can be strategized
            with application-specific actors.

          . Added support for customizing the open/close tags for properties
            in a template file. The default is still ${}.

        * cuts/utils/Property_Expander.h:
        * cuts/utils/Property_Expander.cpp:

          Removed these files.

Mon Apr 20 01:15:03 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/UUID.cpp:

          . Updated the UUID to support updates to ACE_Utils::UUID.

        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_exec_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_stub_export.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldC.cpp:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.h:
        * examples/arch/tcpip/HelloWorld/TCPIP_HelloWorldEC.cpp:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          . Checkpointing the TCPIP architecture for CUTS. The servant framework
            is almost complete. Working the executor framework.

Fri Apr 17 17:56:09 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_tcpip.mpb:
        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_T.h:
        * cuts/arch/tcpip/TCPIP_Servant_T.inl:
        * cuts/arch/tcpip/TCPIP_Servant_T.cpp:

          . Bug fixed where the servant failed to initialize its
            virtual table.

        * examples/arch:
        * examples/arch/tcpip:
        * examples/arch/tcpip/HelloWorld:
        * examples/arch/tcpip/HelloWorld/HelloWorld.idl:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mpc:
        * examples/arch/tcpip/HelloWorld/HelloWorld.mwc:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.h:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.inl:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt.cpp:
        * examples/arch/tcpip/HelloWorld/HelloWorld_svnt_export.h:
        * examples/arch/tcpip/HelloWorld/base.mpb:
        * examples/arch/tcpip/HelloWorld/server.cpp:

          .Simple HelloWorld example for TCP/IP.

        * tests/cuts/arch:
        * tests/cuts/arch/tcpip:
        * tests/cuts/arch/tcpip/TCPIP_ORB_Test.cpp:
        * tests/cuts/arch/tcpip/tests.mpc:

          . Unit test for the TCP/IP architecture.

        * cuts/arch/tcpip/TCPIP_Acceptor_T.h:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.cpp:

          Removed these files.

Fri Apr 17 15:31:19 UTC 2009  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cuts/arch/dsto/*.*:

          New example - pub and sub applications, built as executors
          in a stripped-down version of a CIAO component, pass a
          message via CORBA eventtype. Files include replacement
          CIAO base classes, basic type conversion between native
          data type and CORBA eventtype, plus files that will
          ultimately be generated by a GME model interpreter
          (hand-crafted for now) that handle type-specific data
          conversion and play the roles of CCM servant and
          context. CORBA-only message passing for now, ultimately
          DDS and tcp/ip alternatives will be added.

Fri Apr 17 06:17:01 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/tcpip:
        * cuts/arch/tcpip/TCPIP.h:
        * cuts/arch/tcpip/TCPIP.cpp:
        * cuts/arch/tcpip/TCPIP.mpc:
        * cuts/arch/tcpip/TCPIP_Acceptor.h:
        * cuts/arch/tcpip/TCPIP_Acceptor.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor.cpp:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.h:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.inl:
        * cuts/arch/tcpip/TCPIP_Acceptor_T.cpp:
        * cuts/arch/tcpip/TCPIP_Event_Handler.h:
        * cuts/arch/tcpip/TCPIP_Event_Handler.inl:
        * cuts/arch/tcpip/TCPIP_Event_Handler.cpp:
        * cuts/arch/tcpip/TCPIP_ORB.h:
        * cuts/arch/tcpip/TCPIP_ORB.inl:
        * cuts/arch/tcpip/TCPIP_ORB.cpp:
        * cuts/arch/tcpip/TCPIP_Object.h:
        * cuts/arch/tcpip/TCPIP_Object.inl:
        * cuts/arch/tcpip/TCPIP_Object.cpp:
        * cuts/arch/tcpip/TCPIP_Object_T.h:
        * cuts/arch/tcpip/TCPIP_Object_T.inl:
        * cuts/arch/tcpip/TCPIP_Object_T.cpp:
        * cuts/arch/tcpip/TCPIP_SPEC.h:
        * cuts/arch/tcpip/TCPIP_SPEC.cpp:
        * cuts/arch/tcpip/TCPIP_Servant.h:
        * cuts/arch/tcpip/TCPIP_Servant.inl:
        * cuts/arch/tcpip/TCPIP_Servant.cpp:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.h:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.inl:
        * cuts/arch/tcpip/TCPIP_Servant_Manager.cpp:
        * cuts/arch/tcpip/TCPIP_export.h:
        * cuts/arch/tcpip/config-default.h:

          . Checkpoint the TCP/IP component-based architecture.

Thu Apr 16 23:11:58 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/utils/ConnectionString.java:
        * cuts/arch/capi/cuts/jbi/utils/RegisterMioType.java:
        * cuts/arch/capi/cuts/jbi/utils/UserCredentials.java:

          . Bug fix where the packages where inconsistent with the
            directory structure.

Thu Apr 16 22:15:00 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/dsto:

          . Sandbox for the DSTO work.

Thu Apr 16 18:41:55 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_ciao_stub.mpb:
        * cuts/BDC/Benchmark_Data_Collector.mpc:

          . Fixed build errors on non-Windows systems.

Thu Apr 16 17:23:54 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/Worker.h:
        * cuts/Worker.inl:
        * cuts/utils/calibrate/Calibrate_App.cpp:
        * cuts/utils/calibrate/Calibrate_Options.h:
        * cuts/workers/CPU/CPU_Worker_T.h:
        * cuts/workers/CPU/CPU_Worker_T.cpp:

          . Added support for sending command-line arguments to the
            calibration.

Thu Apr 16 17:09:43 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/calibrate/Calibrate_App.h:
        * cuts/utils/calibrate/Calibrate_App.cpp:

          . Added --help command-line option.

Thu Apr 16 17:00:25 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/calibrate/Calibrate_App.h:
        * cuts/utils/calibrate/Calibrate_App.inl:
        * cuts/utils/calibrate/Calibrate_App.cpp:
        * cuts/utils/calibrate/Calibrate_Options.h:
        * cuts/utils/calibrate/calibrate.cpp:
        * cuts/utils/calibrate/calibrate.mpc:

          . Re-designed the application so that uses a C++ application
            object instead of C functions.

Wed Apr 15 06:18:21 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/models/CAPI.xme:
        * MDE/GME/paradigms/PICML/models/XMLSchema.xme:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Upgraded models to latest version of PICML.

        * install/CUTS_CoSMIC.wxs:
        * install/CUTS_CoSMIC_installers.mpc:
        * install/CUTS_PICML.wxs:

          . Included example models in installer.

          . The installer updates all GME models, if necessary, as part
            of the build process.

Wed Apr 15 03:56:23 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/unite/Unite_App.cpp:

          . Bug fix where the application crashed if the configuration
            did not contain any services.

Tue Apr 14 23:07:42 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/BE_Impl_Generator_T.cpp:

          . Removed dead code.

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Ctx.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Workspace_Generators.cpp:

          . Added modeling support for the dynamic source/sink capabilities
            recently added to the CAPI runtime architecture.

        * MDE/GME/paradigms/PICML/models/CAPI.xme:

          . Common reusable artifacts for the CAPI code generator.

        * MDE/GME/paradigms/PICML/models/examples:
        * MDE/GME/paradigms/PICML/models/examples/capi:
        * MDE/GME/paradigms/PICML/models/examples/capi/AnyEvent.xme:

          . Simple example that illustrates usage of the JbiAnyEvent.

Tue Apr 14 20:07:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts/jbi/client/JbiAnyEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEventBase.java:
        * cuts/arch/capi/cuts/jbi/client/JbiPort.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:

          . Added support the dynamic source/sinks (i.e., ones that can
            be configured at runtime, and any events (i.e., events that
            are not bound to a static type). Using such events, however,
            does not enable support for manipulating an event's metadata.

Tue Apr 14 18:50:11 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Event_Impl_Generator.cpp:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI_Generators.cpp:

          . Updated the code generator to be consistent with the lastest
            version of CUTS runtime architecture for the CAPI.

Tue Apr 14 18:34:55 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi/cuts.java.jbi.build:
        * cuts/arch/capi/cuts/jbi/client/JbiClient.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:

          . Added support for changing the predicate at runtime, i.e.,
            after the client has been activated.

Tue Apr 14 17:38:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/capi/ExecutionManager.bat:
        * bin/capi/ExecutionManager.sh:
        * bin/capi/NodeManager.bat:
        * bin/capi/NodeManager.sh:
        * bin/capi/PlanLauncher.bat:
        * bin/capi/PlanLauncher.sh:
        * bin/capi/RegisterMioType.sh:
        * bin/capi/SingleProcess.bat:
        * bin/capi/SingleProcess.sh:

          . Updated the classpath to contain the new name for the
            CUTS CAPI jarfile.

Tue Apr 14 17:33:12 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/capi:

          . Changed the name of the directory to be in sync with the
            runtime architecture's directory.

        * bin/jbi:
        * bin/jbi/ExecutionManager.bat:
        * bin/jbi/ExecutionManager.sh:
        * bin/jbi/NameService.bat:
        * bin/jbi/NameService.sh:
        * bin/jbi/NodeManager.bat:
        * bin/jbi/NodeManager.sh:
        * bin/jbi/PlanLauncher.bat:
        * bin/jbi/PlanLauncher.sh:
        * bin/jbi/RegisterMioType.sh:
        * bin/jbi/SingleProcess.bat:
        * bin/jbi/SingleProcess.sh:

          Removed these files.

Tue Apr 14 17:29:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/capi:
        * cuts/arch/capi/cuts:
        * cuts/arch/capi/cuts.java.jbi.build:
        * cuts/arch/capi/cuts/jbi:
        * cuts/arch/capi/cuts/jbi/JbiShutdownInterface.java:
        * cuts/arch/capi/cuts/jbi/JbiShutdownThread.java:
        * cuts/arch/capi/cuts/jbi/client/JbiClient.java:
        * cuts/arch/capi/cuts/jbi/client/JbiEvent.java:
        * cuts/arch/capi/cuts/jbi/client/JbiPort.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSink.java:
        * cuts/arch/capi/cuts/jbi/client/JbiSource.java:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiClientApp.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiExecutionManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiNodeManager.java:
        * cuts/arch/capi/cuts/jbi/deployment/JbiPlanLauncher.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/deployment/NodeManagerImpl.java:
        * cuts/arch/capi/cuts/jbi/idl/Application.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcess.idl:
        * cuts/arch/capi/cuts/jbi/idl/ApplicationProcessManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/Deployment.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/DomainApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/ExecutionManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplication.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeApplicationManager.idl:
        * cuts/arch/capi/cuts/jbi/idl/NodeManager.idl:

          . Moved the CAPI runtime architecture to the cuts/arch/capi
            directory to be consistent with the other supported architectures.

        * etc/ANT/include/cuts.build:

          . Updated the pathelement for the cuts.java.capi.jar.

        * cuts/java/CUTS/jbi:
        * cuts/java/CUTS/jbi/JbiShutdownInterface.java:
        * cuts/java/CUTS/jbi/JbiShutdownThread.java:
        * cuts/java/CUTS/jbi/client:
        * cuts/java/CUTS/jbi/client/JbiClient.java:
        * cuts/java/CUTS/jbi/client/JbiEvent.java:
        * cuts/java/CUTS/jbi/client/JbiPort.java:
        * cuts/java/CUTS/jbi/client/JbiSink.java:
        * cuts/java/CUTS/jbi/client/JbiSource.java:
        * cuts/java/CUTS/jbi/deployment:
        * cuts/java/CUTS/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/CUTS/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/DomainApplicationImpl.java:
        * cuts/java/CUTS/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/JbiClientApp.java:
        * cuts/java/CUTS/jbi/deployment/JbiExecutionManager.java:
        * cuts/java/CUTS/jbi/deployment/JbiNodeManager.java:
        * cuts/java/CUTS/jbi/deployment/JbiPlanLauncher.java:
        * cuts/java/CUTS/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/CUTS/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/NodeManagerImpl.java:
        * cuts/java/CUTS/jbi/deployment/mapping.xml:
        * cuts/java/CUTS/jbi/idl:
        * cuts/java/CUTS/jbi/idl/Application.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationProcess.idl:
        * cuts/java/CUTS/jbi/idl/ApplicationProcessManager.idl:
        * cuts/java/CUTS/jbi/idl/Deployment.idl:
        * cuts/java/CUTS/jbi/idl/DomainApplication.idl:
        * cuts/java/CUTS/jbi/idl/DomainApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/ExecutionManager.idl:
        * cuts/java/CUTS/jbi/idl/NodeApplication.idl:
        * cuts/java/CUTS/jbi/idl/NodeApplicationManager.idl:
        * cuts/java/CUTS/jbi/idl/NodeManager.idl:
        * cuts/java/CUTS/jbi/utils:
        * cuts/java/CUTS/jbi/utils/ConnectionString.java:
        * cuts/java/CUTS/jbi/utils/RegisterMioType.java:
        * cuts/java/CUTS/jbi/utils/UserCredentials.java:
        * cuts/java/cuts.java.jbi.build:

          Removed these files.

Tue Apr 14 16:55:59 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/cuts.java.build:

          . Fixed build errors related to location of the IDL files.

Tue Apr 14 16:52:47 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * CUTS_Runtime_Arch.mwc:

          . Update the workspace to exclude Java-based projects unless
            ANT is specified as the build engine.

Tue Apr 14 16:33:37 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_archiving_skel.mpb:
        * MPC/config/cuts_archiving_stub.mpb:
        * MPC/config/cuts_barrier_skel.mpb:
        * MPC/config/cuts_barrier_stub.mpb:
        * MPC/config/cuts_bdcsvc.mpb:
        * MPC/config/cuts_ciao_stub.mpb:
        * MPC/config/cuts_db.mpb:
        * MPC/config/cuts_lib.mpb:
        * MPC/config/cuts_logging_client_skel.mpb:
        * MPC/config/cuts_logging_skel.mpb:
        * MPC/config/cuts_logging_stub.mpb:
        * MPC/config/cuts_skel.mpb:
        * MPC/config/cuts_stub.mpb:
        * MPC/config/cuts_testing_skel.mpb:
        * MPC/config/cuts_testing_stub.mpb:
        * MPC/config/cutsexe.mpb:
        * MPC/config/cutslib.mpb:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/CCM_Component_Registry.h:
        * cuts/Benchmark_Agent_i.h:
        * cuts/CUTS.mpc:
        * cuts/CUTS_i.h:
        * cuts/UUID.h:
        * cuts/arch/ccm/CUTS_CIAO.mpc:
        * cuts/idl/CUTS.idl:
        * cuts/idl/CUTS.mpc:
        * cuts/idl/CUTS_skel_export.h:
        * cuts/idl/CUTS_stub_export.h:
        * cuts/idl/TimeValue.idl:
        * cuts/idl/UUID.idl:
        * cuts/idl/exceptions.idl:
        * cuts/idl/performance.idl:
        * cuts/performance_i.h:
        * cuts/utils/archiving/archiving.idl:
        * cuts/utils/archiving/archiving.mpc:
        * cuts/utils/archiving/client/cutsarc.mpc:
        * cuts/utils/archiving/server/cutsarc_d.mpc:
        * cuts/utils/barrier/barrier.mpc:
        * cuts/utils/barrier/client/barrier.mpc:
        * cuts/utils/barrier/server/barrier_d.mpc:
        * cuts/utils/calibrate/calibrate.mpc:
        * cuts/utils/db/DB.mpc:
        * cuts/utils/logging/client/client.mpc:
        * cuts/utils/logging/logging.idl:
        * cuts/utils/logging/logging.mpc:
        * cuts/utils/logging/server/server.mpc:
        * cuts/utils/testing/svcs/logging/logging.mpc:
        * cuts/utils/testing/svcs/server/server.mpc:
        * cuts/utils/testing/svcs/server/testing.idl:
        * cuts/workers/CPU/CPU_Worker.mpc:
        * cuts/workers/Test_Logger/Test_Logger.mpc:
        * cuts/workers/dbase/Database_Worker.mpc:
        * cuts/workers/memory/Memory_Worker.mpc:
        * MPC/config/cuts.mpb:

          . Moved all the runtime IDL files to cuts/idl. This force much
            needed refactoring of the project builds to ensure the CORBA
            related projects are included by default in the non-runtime
            projects, such as the modeling and analysis.

        * cuts/CUTS.idl:
        * cuts/TimeValue.idl:
        * cuts/UUID.idl:
        * cuts/exceptions.idl:
        * cuts/performance.idl:

          Removed these files.

Tue Apr 14 04:01:19 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/CAPI.mpc:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.h:
        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/be/CAPI/XSD_File_Generator.cpp:

          . Removed all dependency on xerces.

Mon Apr 13 22:26:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/paradigms/PICML/interpreter/CUTS_PICML/Main_Dialog.cpp:

          . Fixed compilation errors related the XSC updates.

        * cuts/idl:

          . Location of all CUTS IDL files.

Mon Apr 13 22:12:17 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/arch/mpi:

          . Move the MPI backend to the architecture directory.

        * cuts/MPI:
        * cuts/MPI/CUTS_MPI.mpc:
        * cuts/MPI/Datatype_Port_Manager.h:
        * cuts/MPI/Datatype_Port_Manager.inl:
        * cuts/MPI/Datatype_Port_Manager.cpp:
        * cuts/MPI/MPI_Env.h:
        * cuts/MPI/MPI_Env.inl:
        * cuts/MPI/MPI_Env.cpp:
        * cuts/MPI/mpi.cpp:
        * cuts/MPI/mpi_export.def:

          Removed these files.

Mon Apr 13 22:01:48 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_client_dnc.mpb:
        * MPC/config/cuts_component_dnc.mpb:
        * MPC/config/cuts_servant_dnc.mpb:
        * cuts/BDC/Benchmark_Data_Collector.idl:
        * cuts/BDC/Benchmark_Data_Collector.mpc:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.h:
        * cuts/BDC/Benchmark_Data_Collector_exec_i.cpp:
        * cuts/BDC/client/client.mpc:
        * cuts/MPI/CUTS_MPI.mpc:
        * cuts/arch:
        * cuts/utils/Node_Daemon/Node_File_Reader.h:
        * cuts/utils/antispam/Antispam_Config_File.h:
        * cuts/utils/db/DB_Parameter.h:
        * cuts/utils/db/ODBC/ODBC_Parameter.h:
        * cuts/utils/db/ODBC/ODBC_Parameter.cpp:
        * cuts/utils/logging/server/Logging_Server_File.h:
        * cuts/utils/testing/Test_Configuration_File.h:
        * cuts/utils/unite/Unite_Config_File.h:
        * cuts/utils/unite/Unite_Datagraph_File.h:
        * default.features:

          . Updated CUTS to the latest version of ACE+TAO+CIAO.

        * cuts/arch/ccm:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.h:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy.cpp:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.h:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/arch/ccm/CCM_CoWorkEr_T.h:
        * cuts/arch/ccm/CCM_CoWorkEr_T.inl:
        * cuts/arch/ccm/CCM_CoWorkEr_T.cpp:
        * cuts/arch/ccm/CCM_Component_T.h:
        * cuts/arch/ccm/CCM_Component_T.inl:
        * cuts/arch/ccm/CCM_Component_T.cpp:
        * cuts/arch/ccm/CCM_Context_T.h:
        * cuts/arch/ccm/CCM_Context_T.inl:
        * cuts/arch/ccm/CCM_Context_T.cpp:
        * cuts/arch/ccm/CCM_Event_Handler_T.h:
        * cuts/arch/ccm/CCM_Event_Handler_T.inl:
        * cuts/arch/ccm/CCM_Event_Handler_T.cpp:
        * cuts/arch/ccm/CCM_Event_Producer_T.h:
        * cuts/arch/ccm/CCM_Event_Producer_T.inl:
        * cuts/arch/ccm/CCM_Event_Producer_T.cpp:
        * cuts/arch/ccm/CCM_Events_T.h:
        * cuts/arch/ccm/CCM_Events_T.inl:
        * cuts/arch/ccm/CCM_Events_T.cpp:
        * cuts/arch/ccm/CCM_Factory_T.h:
        * cuts/arch/ccm/CCM_Factory_T.cpp:
        * cuts/arch/ccm/CUTS_CIAO.idl:
        * cuts/arch/ccm/CUTS_CIAO.mpc:
        * cuts/arch/ccm/CUTS_stub_export.h:
        * cuts/arch/ccm/events_i.h:
        * cuts/arch/ccm/events_i.inl:
        * cuts/arch/ccm/events_i.cpp:

          . Moved the CCM/CIAO specific abstraction to their own directory
            under the architectures.

        * cuts/CCM_CoWorkEr_Proxy.h:
        * cuts/CCM_CoWorkEr_Proxy.inl:
        * cuts/CCM_CoWorkEr_Proxy.cpp:
        * cuts/CCM_CoWorkEr_Proxy_T.h:
        * cuts/CCM_CoWorkEr_Proxy_T.inl:
        * cuts/CCM_CoWorkEr_Proxy_T.cpp:
        * cuts/CCM_CoWorkEr_T.h:
        * cuts/CCM_CoWorkEr_T.inl:
        * cuts/CCM_CoWorkEr_T.cpp:
        * cuts/CCM_Component_T.h:
        * cuts/CCM_Component_T.inl:
        * cuts/CCM_Component_T.cpp:
        * cuts/CCM_Context_T.h:
        * cuts/CCM_Context_T.inl:
        * cuts/CCM_Context_T.cpp:
        * cuts/CCM_Event_Handler_T.h:
        * cuts/CCM_Event_Handler_T.inl:
        * cuts/CCM_Event_Handler_T.cpp:
        * cuts/CCM_Event_Producer_T.h:
        * cuts/CCM_Event_Producer_T.inl:
        * cuts/CCM_Event_Producer_T.cpp:
        * cuts/CCM_Events_T.h:
        * cuts/CCM_Events_T.inl:
        * cuts/CCM_Events_T.cpp:
        * cuts/CCM_Factory_T.h:
        * cuts/CCM_Factory_T.cpp:
        * cuts/CUTS_CIAO.idl:
        * cuts/CUTS_CIAO.mpc:
        * cuts/CUTS_stub_export.h:
        * cuts/events_i.h:
        * cuts/events_i.inl:
        * cuts/events_i.cpp:

          Removed these files.

Sat Apr 11 18:41:05 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * tests/cuts/workers/CPU/Thread_Test.cpp:

          . Added support to print results to standard out.

Sat Apr 11 18:31:29 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MPC/config/cuts_cpu_worker.mpb:

          . Base project for including the CUTS_CPU_Worker.

        * tests/cuts/workers/CPU:
        * tests/cuts/workers/CPU/Thread_Test.cpp:
        * tests/cuts/workers/CPU/Thread_Test.mpc:

          . Test for validating the CPU worker with multiple
            threads of execution.

Tue Apr  7 16:51:15 UTC 2009  James H. Hill  <hillj@isis.vanderbilt.edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-0_0_0_2:
        * PROBLEM-REPORT-FORM:
        * VERSION:

          . Release CUTS beta version 0.0.0.2
