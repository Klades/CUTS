Sat Jul 12 20:21:54 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/logging/Logging_Client_Server.cpp:
        
          Bug fix where the --database option was using the long_option ()
          instead of the opt_arg () to set the database value. This resulted
          in the database parameter being set to 'database'.

Sat Jul 12 21:43:35 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Connection.cpp:

          Updated the data source name to be 'CUTS'.

Sat Jul 12 07:32:41 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * VERSION:

          Fixed the version number in this file as well.

Sat Jul 12 07:31:19 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * PROBLEM-REPORT-FORM:

          Updated the version number of the problem report form.

Sat Jul 12 07:28:52 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * THANKS:

          Added a THANKS file to the project repo for listing those who
          have contributed to CUTS and help my vision come true. :o)

Sat Jul 12 06:59:32 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/BDC/BDC_Service_Manager.cpp:

          Bug fix where the UUID generated were the same due to not
          initializing the UUID generator before it was used.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:

          Added support for associating a UUID with a specific test. We
          are slowly migrating to using auto-generated UUIDs for the
          test instead of integers because (1) the integer test id couples
          the test manager to the database and (2) we have a larger range
          of values to select from with UUIDs.

Sat Jul 12 06:34:02 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * MDE/GME/naomi/GNC.mpc:
        * cuts/BDC/Benchmark_Data_Collector.mpc:

          Fixed compilation bugs where custom build would ALWAYS run
          even if the generated files were up-to-date.

        * cuts/utils/logging/Logging_Client_Server.cpp:

          Fixed the format of the ACE_DEBUG and ACE_ERROR log messages.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_Options.h:
        * cuts/utils/testing/cutstest_d.cpp:

          Implemented the --deploy and --teardown options for the test
          manager.

Fri Jul 11 21:01:37 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Task.h:
        * cuts/utils/testing/Testing_Base_export.h:
        * cuts/utils/testing/Testing_Options.h:
        * cuts/utils/testing/testing.mpc:

          Refactored the project so that the classes shared between the
          cutstest and cutstest_d are in the CUTS_Test_Base project.

        * cuts/utils/testing/cutstest_d.cpp:

          Missing source file.

Fri Jul 11 14:33:12 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          Bug fix where the TestLogger would fail to unregister itself with the
          logging client if it was collected by the garbage collector.

Fri Jul 11 14:17:39 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/ODBC/ODBC_Types.h:

          The destructor was missing the 'virtual' keyword.

        * cuts/utils/logging:
        * cuts/utils/logging/Logging_Client_Server.h:
        * cuts/utils/logging/Logging_Client_Server.cpp:
        * cuts/utils/logging/Logging_skel_export.h:
        * cuts/utils/logging/Logging_stub_export.h:
        * cuts/utils/logging/TestLoggerClient_i.h:
        * cuts/utils/logging/TestLoggerClient_i.cpp:
        * cuts/utils/logging/Test_Log_Message_Handler.h:
        * cuts/utils/logging/Test_Log_Message_Handler.inl:
        * cuts/utils/logging/Test_Log_Message_Handler.cpp:
        * cuts/utils/logging/cutslog_d.cpp:
        * cuts/utils/logging/logging.idl:
        * cuts/utils/logging/logging.mpc:
        * etc/config/cuts_logging_skel.mpb:
        * etc/config/cuts_logging_stub.mpb:

          Initialize version of the CUTS test logging client. The logging
          client is similar to the ACE logging client, but it allows you to
          associate log messages with a specific test. It also submits the
          log messages into a test database, by default. Eventually, we would
          like to strategize this client so we can submit the log messages
          to arbitrary locations, such as a database or another logging
          client.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_App_Task.cpp:
        * cuts/utils/testing/cutstest.cpp:
        * cuts/utils/testing/testing.idl:
        * cuts/utils/testing/testing.mpc:

          Improved the log messaging so that you users can control how
          much information is printed to the screen using the --verbose (-v)
          and --debug command-line options.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:
        * cuts/workers/Test_Logger/TestLogger.build:

          Bug fix where the logger would not unregister itself with the
          logging client server. This was fixed by making the subclassing
          the TestLogger from the Thread class and registering it as a
          shutdown hook with the virtual machine. This will ensure the logger
          is called when the VM is destroy. We still need to overload the
          finalize () method so we can unregister the TestLogger is the
          garbage collector is run.

        * etc/SQL/CUTS-create.sql:
        * etc/SQL/CUTS-msglog.sql:

          Implemented stored procedures to simplify inserting log messages
          into the database.


Thu Jul 10 02:18:26 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/testing.mpc:

          . The CUTS_Testing_App_Server is now a subclass of the
            CUTS_Testing_App. This helps with reusing the basic testing
            application within the server version. This also caused
            the basic testing application expose private variables via
            accesor methods.

          . The testing server application has the option of registering
            itself with the naming service using the specified name. The
            naming convention for the naming service is:

              CUTS/TestManager/<name>

Wed Jul  9 22:13:44 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.bat:

          Removed unncessary command-line options.

        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/cutstest.cpp:
        * cuts/utils/testing/testing.mpc:

          Separated the CUTS testing application into a regular and
          deamon application. The daemon application allows clients to
          remotely control the lifecycle of the test.

        * cuts/workers/Test_Logger/CUTS/TestLogger.java:

          Implemented a method named getTestNumber (), which is
          responsible for getting the cached test number of the client.

        * cuts/utils/testing/cuts_test.cpp:

          Removed this file.

Wed Jul  9 15:41:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/cuts.java.build:

          Moved the logger class to cuts/workers/Test_Logger directory.

        * cuts/utils/testing:
        * cuts/utils/testing/TestManager_i.h:
        * cuts/utils/testing/TestManager_i.cpp:
        * cuts/utils/testing/Testing_App.h:
        * cuts/utils/testing/Testing_App.cpp:
        * cuts/utils/testing/Testing_App_Server.h:
        * cuts/utils/testing/Testing_App_Server.cpp:
        * cuts/utils/testing/Testing_App_Task.h:
        * cuts/utils/testing/Testing_App_Task.cpp:
        * cuts/utils/testing/Testing_skel_export.h:
        * cuts/utils/testing/Testing_stub_export.h:
        * cuts/utils/testing/cuts_test.cpp:
        * cuts/utils/testing/testing.idl:
        * cuts/utils/testing/testing.mpc:

          First phase of developing a test management application. So far
          it is able to start/stop test in a database. The next step is to
          allow it to deploy/teardown distributed applications.

        * cuts/workers/Test_Logger:
        * cuts/workers/Test_Logger/CUTS:
        * cuts/workers/Test_Logger/CUTS/TestLogger.java:
        * cuts/workers/Test_Logger/TestLogger.build:

          The newest addition to the workload generator family. This is
          a logger that associates log messages with a test number. It
          works in conjunction with the TestManager and TestLoggerClient
          interface.

        * cuts/java/LogPriority.java:
        * cuts/java/Logger.java:

          Removed these files.

Tue Jul  8 21:21:23 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ExecutionManagerImpl.java:
        * cuts/java/jbi/deployment/JbiNodeManager.java:
        * cuts/java/jbi/deployment/NodeManagerImpl.java:

          The <location> tag in the deployment plan now refers to an
          alias. The alias maps to the name that a node manager is given
          when it is deployed.

Tue Jul  8 18:32:40 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * etc/ANT/include/cuts.build:

          Added cuts.install.dir property, which contains the location of
          the install directory in CUTS.

        * install/jbi.bundler.build:

          Finish defining script that will build a tarfile for the
          CUTS JBI architecture.

Tue Jul  8 18:02:09 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/NameService.bat:
        * bin/jbi/NameService.sh:

          Helper scripts to start the naming service.

        * install/jbi.bundler.build:

          Location of the script for creating the JBI tarball for
          binary distribution.

Wed Jul  9 00:22:17 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/idl/ApplicationProcess.idl:

          Bug fix where the node application did not implement the
          start () method. Now, which start () is invoked, all the clients
          are activated.

Tue Jul  8 15:59:48 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.sh:
        * bin/jbi/NodeManager.sh:
        * bin/jbi/PlanLauncher.sh:

          Scripts for launching portions of the deployment framework
          on non-Windows systems.

Tue Jul  8 15:38:24 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/ExecutionManager.bat:
        * bin/jbi/PlanLauncher.bat:
        * bin/jbi/SingleProcess.bat:
        * bin/jbi/SingleProcess.sh:
        * cuts/cuts.java.jbi.build:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/JbiPlanLauncher.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/mapping.xml:
        * etc/schemas/jbi:
        * etc/schemas/jbi/deployment.xsd:

          First version of the distributed deployment framework that is able
          to both deploy and teardown JBI applications.

Mon Jul  7 01:36:09 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/idl/ApplicationProcess.idl:

          The runtime portion of the deployment framework is complete. It
          is now possible to programmatically deploy clients onto multiple
          node and into multiple processes.

Sun Jul  6 22:36:34 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * bin/jbi/NodeManager.bat:
        * bin/jbi/SingleProcess.bat:
        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:

          Another snapshot of the deployment framework. I have resolved
          the problem below w.r.t. not being able to instantiate the
          ApplicationProcessImpl class. This had to do with specify
          the command-line parameters incorrectly.

Sat Jul  5 16:03:16 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * cuts/cuts.java.build:
        * cuts/java/ProcessHandler.java:
        * cuts/java/ProcessStreamReader.java:

          Apparently, if you spawn an application using Runtime.exec (),
          you must get the input/error streams of the spawned process and
          empty them occassionally. So, these are some helper classes that
          given a process, it will empty their buffer so the spawned
          child application does not freeze.

        * cuts/java/jbi/deployment/ApplicationProcessImpl.java:
        * cuts/java/jbi/deployment/ApplicationProcessManagerImpl.java:
        * cuts/java/jbi/deployment/DomainApplicationImpl.java:
        * cuts/java/jbi/deployment/DomainApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/JbiClientApp.java:
        * cuts/java/jbi/deployment/JbiNodeManager.java:
        * cuts/java/jbi/deployment/NodeApplicationImpl.java:
        * cuts/java/jbi/deployment/NodeApplicationManagerImpl.java:
        * cuts/java/jbi/deployment/NodeManagerImpl.java:

          Checkpoint the deployment framework. Right now, the spawned
          application process register themselves, however, I'm having
          trouble creating the ApplicationProcessImpl class. There is
          something wrong with the CLASSPATH because it is not able
          to create the ConnectionManager that is needed by the clients
          to connect to the server.

Fri Jul  4 04:49:55 UTC 2008  James H. Hill  <hillj@isis.vanderbilt.edu>

        * ChangeLog
        * ChangeLogs/ChangeLog-0_0_0_1:

          This marks the first official beta release of the Component
          Workload Emulator (CoWorkEr) Utilization Test Suite (CUTS). This
          also marks the first birthday of CUTS. Happy 1st birthday CUTS,
          and may you have many more!! :-)
